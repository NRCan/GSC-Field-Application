#pragma checksum "C:\Users\Maison\Source\Repos\GSC-Field-Application\GSCFieldApp\Views\DocumentDialog.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "00A9B959B72AD6CA79ED8E7A157D88D4"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GSCFieldApp.Views
{
    partial class DocumentDialog : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_IsReadOnly(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.Boolean value)
            {
                obj.IsReadOnly = value;
            }
            public static void Set_Windows_UI_Xaml_Media_Imaging_BitmapImage_UriSource(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, global::System.Uri value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Uri) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Uri), targetNullValue);
                }
                obj.UriSource = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class DocumentDialog_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IDocumentDialog_Bindings
        {
            private global::GSCFieldApp.Views.DocumentDialog dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.ComboBox obj9;
            private global::Windows.UI.Xaml.Controls.TextBox obj10;
            private global::Windows.UI.Xaml.Controls.TextBox obj12;
            private global::Windows.UI.Xaml.Controls.Button obj13;
            private global::Windows.UI.Xaml.Controls.GridView obj15;
            private global::Windows.UI.Xaml.Controls.TextBox obj16;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj17;
            private global::Windows.UI.Xaml.Controls.ComboBox obj18;
            private global::Windows.UI.Xaml.Controls.ComboBox obj19;
            private global::Windows.UI.Xaml.Controls.Image obj22;
            private global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj23;
            private global::Windows.UI.Xaml.Controls.ComboBox obj24;
            private global::Windows.UI.Xaml.Controls.TextBox obj26;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj27;
            private global::Windows.UI.Xaml.Controls.TextBox obj28;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj13Tapped;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj18SelectionChanged;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj24SelectionChanged;
            private global::Windows.UI.Xaml.Controls.TextChangedEventHandler obj26TextChanged;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj9ItemsSourceDisabled = false;
            private static bool isobj9SelectedValueDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj15VisibilityDisabled = false;
            private static bool isobj16IsReadOnlyDisabled = false;
            private static bool isobj16VisibilityDisabled = false;
            private static bool isobj16TextDisabled = false;
            private static bool isobj17VisibilityDisabled = false;
            private static bool isobj18ItemsSourceDisabled = false;
            private static bool isobj18SelectedValueDisabled = false;
            private static bool isobj18VisibilityDisabled = false;
            private static bool isobj19VisibilityDisabled = false;
            private static bool isobj19ItemsSourceDisabled = false;
            private static bool isobj19SelectedValueDisabled = false;
            private static bool isobj22VisibilityDisabled = false;
            private static bool isobj23UriSourceDisabled = false;
            private static bool isobj24ItemsSourceDisabled = false;
            private static bool isobj24SelectedValueDisabled = false;
            private static bool isobj26TextDisabled = false;
            private static bool isobj27VisibilityDisabled = false;
            private static bool isobj28VisibilityDisabled = false;
            private static bool isobj28TextDisabled = false;

            private DocumentDialog_obj1_BindingsTracking bindingsTracking;

            public DocumentDialog_obj1_Bindings()
            {
                this.bindingsTracking = new DocumentDialog_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 54 && columnNumber == 27)
                {
                    isobj9ItemsSourceDisabled = true;
                }
                else if (lineNumber == 55 && columnNumber == 27)
                {
                    isobj9SelectedValueDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 26)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 80 && columnNumber == 26)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 84 && columnNumber == 29)
                {
                    this.obj13.Tapped -= obj13Tapped;
                }
                else if (lineNumber == 90 && columnNumber == 106)
                {
                    isobj15VisibilityDisabled = true;
                }
                else if (lineNumber == 120 && columnNumber == 30)
                {
                    isobj16IsReadOnlyDisabled = true;
                }
                else if (lineNumber == 121 && columnNumber == 60)
                {
                    isobj16VisibilityDisabled = true;
                }
                else if (lineNumber == 124 && columnNumber == 30)
                {
                    isobj16TextDisabled = true;
                }
                else if (lineNumber == 129 && columnNumber == 32)
                {
                    isobj17VisibilityDisabled = true;
                }
                else if (lineNumber == 135 && columnNumber == 31)
                {
                    isobj18ItemsSourceDisabled = true;
                }
                else if (lineNumber == 136 && columnNumber == 31)
                {
                    isobj18SelectedValueDisabled = true;
                }
                else if (lineNumber == 137 && columnNumber == 31)
                {
                    isobj18VisibilityDisabled = true;
                }
                else if (lineNumber == 137 && columnNumber == 89)
                {
                    this.obj18.SelectionChanged -= obj18SelectionChanged;
                }
                else if (lineNumber == 142 && columnNumber == 27)
                {
                    isobj19VisibilityDisabled = true;
                }
                else if (lineNumber == 143 && columnNumber == 27)
                {
                    isobj19ItemsSourceDisabled = true;
                }
                else if (lineNumber == 144 && columnNumber == 27)
                {
                    isobj19SelectedValueDisabled = true;
                }
                else if (lineNumber == 165 && columnNumber == 76)
                {
                    isobj22VisibilityDisabled = true;
                }
                else if (lineNumber == 169 && columnNumber == 69)
                {
                    isobj23UriSourceDisabled = true;
                }
                else if (lineNumber == 94 && columnNumber == 31)
                {
                    isobj24ItemsSourceDisabled = true;
                }
                else if (lineNumber == 95 && columnNumber == 31)
                {
                    isobj24SelectedValueDisabled = true;
                }
                else if (lineNumber == 96 && columnNumber == 31)
                {
                    this.obj24.SelectionChanged -= obj24SelectionChanged;
                }
                else if (lineNumber == 103 && columnNumber == 33)
                {
                    isobj26TextDisabled = true;
                }
                else if (lineNumber == 104 && columnNumber == 53)
                {
                    this.obj26.TextChanged -= obj26TextChanged;
                }
                else if (lineNumber == 106 && columnNumber == 104)
                {
                    isobj27VisibilityDisabled = true;
                }
                else if (lineNumber == 111 && columnNumber == 44)
                {
                    isobj28VisibilityDisabled = true;
                }
                else if (lineNumber == 112 && columnNumber == 33)
                {
                    isobj28TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 9: // Views\DocumentDialog.xaml line 52
                        this.obj9 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // Views\DocumentDialog.xaml line 57
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_10(this.obj10);
                        break;
                    case 12: // Views\DocumentDialog.xaml line 78
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_12(this.obj12);
                        break;
                    case 13: // Views\DocumentDialog.xaml line 82
                        this.obj13 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj13Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.DocViewModel.LoadPreviousCaptionButton_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Tapped += obj13Tapped;
                        break;
                    case 15: // Views\DocumentDialog.xaml line 90
                        this.obj15 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.bindingsTracking.RegisterTwoWayListener_15(this.obj15);
                        break;
                    case 16: // Views\DocumentDialog.xaml line 119
                        this.obj16 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_16(this.obj16);
                        break;
                    case 17: // Views\DocumentDialog.xaml line 126
                        this.obj17 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 18: // Views\DocumentDialog.xaml line 131
                        this.obj18 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.obj18SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.DocViewModel.DocumentParentThemeCombobox_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ComboBox)target).SelectionChanged += obj18SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_18(this.obj18);
                        break;
                    case 19: // Views\DocumentDialog.xaml line 138
                        this.obj19 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_19(this.obj19);
                        break;
                    case 22: // Views\DocumentDialog.xaml line 164
                        this.obj22 = (global::Windows.UI.Xaml.Controls.Image)target;
                        this.bindingsTracking.RegisterTwoWayListener_22(this.obj22);
                        break;
                    case 23: // Views\DocumentDialog.xaml line 169
                        this.obj23 = (global::Windows.UI.Xaml.Media.Imaging.BitmapImage)target;
                        this.bindingsTracking.RegisterTwoWayListener_23(this.obj23);
                        break;
                    case 24: // Views\DocumentDialog.xaml line 93
                        this.obj24 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.obj24SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.DocViewModel.DocumentTypeCombobox_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ComboBox)target).SelectionChanged += obj24SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_24(this.obj24);
                        break;
                    case 26: // Views\DocumentDialog.xaml line 100
                        this.obj26 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.obj26TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.TextChangedEventArgs p1) =>
                        {
                            this.dataRoot.DocViewModel.DocumentFromNumberTextbox_TextChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBox)target).TextChanged += obj26TextChanged;
                        this.bindingsTracking.RegisterTwoWayListener_26(this.obj26);
                        break;
                    case 27: // Views\DocumentDialog.xaml line 106
                        this.obj27 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        this.bindingsTracking.RegisterTwoWayListener_27(this.obj27);
                        break;
                    case 28: // Views\DocumentDialog.xaml line 109
                        this.obj28 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_28(this.obj28);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // IDocumentDialog_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Views.DocumentDialog)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Views.DocumentDialog obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_DocViewModel(obj.DocViewModel, phase);
                    }
                }
            }
            private void Update_DocViewModel(global::GSCFieldApp.ViewModels.DocumentViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_DocViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_DocViewModel_Category(obj.Category, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_DocViewModel_SelectedCategory(obj.SelectedCategory, phase);
                        this.Update_DocViewModel_Direction(obj.Direction, phase);
                        this.Update_DocViewModel_Description(obj.Description, phase);
                        this.Update_DocViewModel_DocumentPhotoExists(obj.DocumentPhotoExists, phase);
                        this.Update_DocViewModel_FileNameReadOnly(obj.FileNameReadOnly, phase);
                        this.Update_DocViewModel_FileName(obj.FileName, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_DocViewModel_DocumentModeVisibility(obj.DocumentModeVisibility, phase);
                        this.Update_DocViewModel_RelatedTable(obj.RelatedTable, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_DocViewModel_SelectedRelatedTable(obj.SelectedRelatedTable, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_DocViewModel_RelatedIds(obj.RelatedIds, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_DocViewModel_SelectedRelatedID(obj.SelectedRelatedID, phase);
                        this.Update_DocViewModel_DocumentPhotoPath(obj.DocumentPhotoPath, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_DocViewModel_DocType(obj.DocType, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_DocViewModel_SelectedDocType(obj.SelectedDocType, phase);
                        this.Update_DocViewModel_FileNumber(obj.FileNumber, phase);
                        this.Update_DocViewModel_DocumentUpdateVisibility(obj.DocumentUpdateVisibility, phase);
                        this.Update_DocViewModel_FileToNumber(obj.FileToNumber, phase);
                    }
                }
            }
            private void Update_DocViewModel_Category(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\DocumentDialog.xaml line 52
                    if (!isobj9ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj9, obj, null);
                    }
                }
            }
            private void Update_DocViewModel_SelectedCategory(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 52
                    if (!isobj9SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj9, obj, null);
                    }
                }
            }
            private void Update_DocViewModel_Direction(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 57
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update_DocViewModel_Description(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 78
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj12, obj, null);
                    }
                }
            }
            private void Update_DocViewModel_DocumentPhotoExists(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 90
                    if (!isobj15VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj15, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityFromReverseBoolConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // Views\DocumentDialog.xaml line 119
                    if (!isobj16VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj16, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityFromReverseBoolConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // Views\DocumentDialog.xaml line 164
                    if (!isobj22VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj22, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityFromBoolConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_DocViewModel_FileNameReadOnly(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 119
                    if (!isobj16IsReadOnlyDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_IsReadOnly(this.obj16, obj);
                    }
                }
            }
            private void Update_DocViewModel_FileName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 119
                    if (!isobj16TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj16, obj, null);
                    }
                }
            }
            private void Update_DocViewModel_DocumentModeVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\DocumentDialog.xaml line 126
                    if (!isobj17VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj17, obj);
                    }
                    // Views\DocumentDialog.xaml line 131
                    if (!isobj18VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj18, obj);
                    }
                    // Views\DocumentDialog.xaml line 138
                    if (!isobj19VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj19, obj);
                    }
                }
            }
            private void Update_DocViewModel_RelatedTable(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\DocumentDialog.xaml line 131
                    if (!isobj18ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj18, obj, null);
                    }
                }
            }
            private void Update_DocViewModel_SelectedRelatedTable(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 131
                    if (!isobj18SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj18, obj, null);
                    }
                }
            }
            private void Update_DocViewModel_RelatedIds(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\DocumentDialog.xaml line 138
                    if (!isobj19ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj19, obj, null);
                    }
                }
            }
            private void Update_DocViewModel_SelectedRelatedID(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 138
                    if (!isobj19SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj19, obj, null);
                    }
                }
            }
            private void Update_DocViewModel_DocumentPhotoPath(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 169
                    if (!isobj23UriSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Imaging_BitmapImage_UriSource(this.obj23, (global::System.Uri)this.LookupConverter("BitmapSourceConverter").Convert(obj, typeof(global::System.Uri), null, null), null);
                    }
                }
            }
            private void Update_DocViewModel_DocType(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\DocumentDialog.xaml line 93
                    if (!isobj24ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj24, obj, null);
                    }
                }
            }
            private void Update_DocViewModel_SelectedDocType(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 93
                    if (!isobj24SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj24, obj, null);
                    }
                }
            }
            private void Update_DocViewModel_FileNumber(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 100
                    if (!isobj26TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj26, obj, null);
                    }
                }
            }
            private void Update_DocViewModel_DocumentUpdateVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 106
                    if (!isobj27VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj27, obj);
                    }
                    // Views\DocumentDialog.xaml line 109
                    if (!isobj28VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj28, obj);
                    }
                }
            }
            private void Update_DocViewModel_FileToNumber(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\DocumentDialog.xaml line 109
                    if (!isobj28TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj28, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_9_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.SelectedCategory = (global::System.String)this.obj9.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_10_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.Direction = this.obj10.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_12_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.Description = this.obj12.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_15_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.DocumentPhotoExists = (global::System.Boolean)this.LookupConverter("VisibilityFromReverseBoolConverter").ConvertBack(this.obj15.Visibility, typeof(global::System.Boolean), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_16_IsReadOnly()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.FileNameReadOnly = this.obj16.IsReadOnly;
                        }
                    }
                }
            }
            private void UpdateTwoWay_16_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.DocumentPhotoExists = (global::System.Boolean)this.LookupConverter("VisibilityFromReverseBoolConverter").ConvertBack(this.obj16.Visibility, typeof(global::System.Boolean), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_16_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.FileName = this.obj16.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_18_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.SelectedRelatedTable = (global::System.String)this.obj18.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_19_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.SelectedRelatedID = (global::System.String)this.obj19.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_22_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.DocumentPhotoExists = (global::System.Boolean)this.LookupConverter("VisibilityFromBoolConverter").ConvertBack(this.obj22.Visibility, typeof(global::System.Boolean), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_23_UriSource()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.DocumentPhotoPath = (global::System.String)this.LookupConverter("BitmapSourceConverter").ConvertBack(this.obj23.UriSource, typeof(global::System.String), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_24_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.SelectedDocType = (global::System.String)this.obj24.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_26_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.FileNumber = this.obj26.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_27_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.DocumentUpdateVisibility = this.obj27.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_28_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.DocumentUpdateVisibility = this.obj28.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_28_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.DocViewModel != null)
                        {
                            this.dataRoot.DocViewModel.FileToNumber = this.obj28.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class DocumentDialog_obj1_BindingsTracking
            {
                private global::System.WeakReference<DocumentDialog_obj1_Bindings> weakRefToBindingObj; 

                public DocumentDialog_obj1_BindingsTracking(DocumentDialog_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<DocumentDialog_obj1_Bindings>(obj);
                }

                public DocumentDialog_obj1_Bindings TryGetBindingObject()
                {
                    DocumentDialog_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_DocViewModel(null);
                }

                public void PropertyChanged_DocViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    DocumentDialog_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GSCFieldApp.ViewModels.DocumentViewModel obj = sender as global::GSCFieldApp.ViewModels.DocumentViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_DocViewModel_SelectedCategory(obj.SelectedCategory, DATA_CHANGED);
                                bindings.Update_DocViewModel_Direction(obj.Direction, DATA_CHANGED);
                                bindings.Update_DocViewModel_Description(obj.Description, DATA_CHANGED);
                                bindings.Update_DocViewModel_DocumentPhotoExists(obj.DocumentPhotoExists, DATA_CHANGED);
                                bindings.Update_DocViewModel_FileNameReadOnly(obj.FileNameReadOnly, DATA_CHANGED);
                                bindings.Update_DocViewModel_FileName(obj.FileName, DATA_CHANGED);
                                bindings.Update_DocViewModel_SelectedRelatedTable(obj.SelectedRelatedTable, DATA_CHANGED);
                                bindings.Update_DocViewModel_SelectedRelatedID(obj.SelectedRelatedID, DATA_CHANGED);
                                bindings.Update_DocViewModel_DocumentPhotoPath(obj.DocumentPhotoPath, DATA_CHANGED);
                                bindings.Update_DocViewModel_SelectedDocType(obj.SelectedDocType, DATA_CHANGED);
                                bindings.Update_DocViewModel_FileNumber(obj.FileNumber, DATA_CHANGED);
                                bindings.Update_DocViewModel_DocumentUpdateVisibility(obj.DocumentUpdateVisibility, DATA_CHANGED);
                                bindings.Update_DocViewModel_FileToNumber(obj.FileToNumber, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SelectedCategory":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_SelectedCategory(obj.SelectedCategory, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Direction":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_Direction(obj.Direction, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Description":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_Description(obj.Description, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DocumentPhotoExists":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_DocumentPhotoExists(obj.DocumentPhotoExists, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FileNameReadOnly":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_FileNameReadOnly(obj.FileNameReadOnly, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FileName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_FileName(obj.FileName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedRelatedTable":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_SelectedRelatedTable(obj.SelectedRelatedTable, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedRelatedID":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_SelectedRelatedID(obj.SelectedRelatedID, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DocumentPhotoPath":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_DocumentPhotoPath(obj.DocumentPhotoPath, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedDocType":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_SelectedDocType(obj.SelectedDocType, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FileNumber":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_FileNumber(obj.FileNumber, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DocumentUpdateVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_DocumentUpdateVisibility(obj.DocumentUpdateVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FileToNumber":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_DocViewModel_FileToNumber(obj.FileToNumber, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GSCFieldApp.ViewModels.DocumentViewModel cache_DocViewModel = null;
                public void UpdateChildListeners_DocViewModel(global::GSCFieldApp.ViewModels.DocumentViewModel obj)
                {
                    if (obj != cache_DocViewModel)
                    {
                        if (cache_DocViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_DocViewModel).PropertyChanged -= PropertyChanged_DocViewModel;
                            cache_DocViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_DocViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_DocViewModel;
                        }
                    }
                }
                public void RegisterTwoWayListener_9(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_10(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_12(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_15(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_15_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_16(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.IsReadOnlyProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_16_IsReadOnly();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_16_Visibility();
                        }
                    });
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_16_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_18(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_18_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_19(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_19_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_22(global::Windows.UI.Xaml.Controls.Image sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_22_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_23(global::Windows.UI.Xaml.Media.Imaging.BitmapImage sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.Imaging.BitmapImage.UriSourceProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_23_UriSource();
                        }
                    });
                }
                public void RegisterTwoWayListener_24(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_24_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_26(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_26_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_27(global::Windows.UI.Xaml.Shapes.Rectangle sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_27_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_28(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_28_Visibility();
                        }
                    });
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_28_Text();
                        }
                    };
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\DocumentDialog.xaml line 19
                {
                    this.BitmapSourceConverter = (global::GSCFieldApp.Converters.BitmapSourceConverter)(target);
                }
                break;
            case 3: // Views\DocumentDialog.xaml line 20
                {
                    this.VisibilityFromBoolConverter = (global::GSCFieldApp.Converters.VisibilityFromBoolConverter)(target);
                }
                break;
            case 4: // Views\DocumentDialog.xaml line 21
                {
                    this.VisibilityFromReverseBoolConverter = (global::GSCFieldApp.Converters.VisibilityFromReverseBoolConverter)(target);
                }
                break;
            case 5: // Views\DocumentDialog.xaml line 29
                {
                    this.pageHeader = (global::Template10.Controls.PageHeader)(target);
                }
                break;
            case 6: // Views\DocumentDialog.xaml line 42
                {
                    this.pageFooter = (global::Template10.Controls.PageHeader)(target);
                }
                break;
            case 7: // Views\DocumentDialog.xaml line 48
                {
                    this.docRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 8: // Views\DocumentDialog.xaml line 50
                {
                    this.docScrollRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 9: // Views\DocumentDialog.xaml line 52
                {
                    this.DocumentCategoryCombobox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 10: // Views\DocumentDialog.xaml line 57
                {
                    this.DocumentDirectionTextbox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 11: // Views\DocumentDialog.xaml line 68
                {
                    this.DocumentDirectionSymIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 12: // Views\DocumentDialog.xaml line 78
                {
                    this.DocumentCaptionTextbox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 13: // Views\DocumentDialog.xaml line 82
                {
                    this.LoadPreviousCaptionButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 14: // Views\DocumentDialog.xaml line 86
                {
                    this.SeperatorLine_02 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 15: // Views\DocumentDialog.xaml line 90
                {
                    this.DocumentNameAndNumbers = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 16: // Views\DocumentDialog.xaml line 119
                {
                    this.DocumentNameTextbox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 17: // Views\DocumentDialog.xaml line 126
                {
                    this.SeperatorLine_04 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 18: // Views\DocumentDialog.xaml line 131
                {
                    this.DocumentParentThemeCombobox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 19: // Views\DocumentDialog.xaml line 138
                {
                    this.DocumentParentIDCombobox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 20: // Views\DocumentDialog.xaml line 146
                {
                    this.DocumentObjectXTextbox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 21: // Views\DocumentDialog.xaml line 155
                {
                    this.DocumentObjectYTextbox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 22: // Views\DocumentDialog.xaml line 164
                {
                    this.imagePreview = (global::Windows.UI.Xaml.Controls.Image)(target);
                    ((global::Windows.UI.Xaml.Controls.Image)this.imagePreview).Tapped += this.imagePreview_Tapped;
                    ((global::Windows.UI.Xaml.Controls.Image)this.imagePreview).ImageFailed += this.Image_ImageFailed;
                }
                break;
            case 24: // Views\DocumentDialog.xaml line 93
                {
                    this.DocumentTypeCombobox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 25: // Views\DocumentDialog.xaml line 98
                {
                    this.DocumentFromToBoxes = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 26: // Views\DocumentDialog.xaml line 100
                {
                    this.DocumentFromNumberTextbox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 27: // Views\DocumentDialog.xaml line 106
                {
                    this.SeperatorVertical_02 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 28: // Views\DocumentDialog.xaml line 109
                {
                    this.DocumentToNumberTextbox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 29: // Views\DocumentDialog.xaml line 34
                {
                    this.documentPhotoButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.documentPhotoButton).Tapped += this.documentPhotoButton_TappedAsync;
                }
                break;
            case 30: // Views\DocumentDialog.xaml line 36
                {
                    this.documentBackButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.documentBackButton).Tapped += this.documentBackButton_Tapped;
                }
                break;
            case 31: // Views\DocumentDialog.xaml line 37
                {
                    this.documentSaveButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.documentSaveButton).Tapped += this.documentSaveButton_Tapped;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\DocumentDialog.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    DocumentDialog_obj1_Bindings bindings = new DocumentDialog_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

