#pragma checksum "C:\Users\Gab\Documents\DEV\gsc-field-application\GSCFieldApp\Views\FieldNotesPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "7F50A3D3D9518B906E450B0CDE29A61B"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GSCFieldApp.Views
{
    partial class ReportPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_GSCFieldApp_Themes_ExpandPanel_IsExpanded(global::GSCFieldApp.Themes.ExpandPanel obj, global::System.Boolean value)
            {
                obj.IsExpanded = value;
            }
            public static void Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(global::Windows.UI.Xaml.Media.SolidColorBrush obj, global::Windows.UI.Color value)
            {
                obj.Color = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(global::Windows.UI.Xaml.Controls.TextBlock obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_IconElement_Foreground(global::Windows.UI.Xaml.Controls.IconElement obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Media_Brush_Opacity(global::Windows.UI.Xaml.Media.Brush obj, global::System.Double value)
            {
                obj.Opacity = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Opacity(global::Windows.UI.Xaml.UIElement obj, global::System.Double value)
            {
                obj.Opacity = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Int32 value)
            {
                obj.SelectedIndex = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Documents_Run_Text(global::Windows.UI.Xaml.Documents.Run obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ReportPage_obj11_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::GSCFieldApp.Models.FieldNotes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;
            private global::Windows.UI.Xaml.Controls.FontIcon obj15;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj12TextDisabled = false;
            private static bool isobj13TextDisabled = false;
            private static bool isobj14TextDisabled = false;
            private static bool isobj15VisibilityDisabled = false;

            public ReportPage_obj11_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 442 && columnNumber == 32)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 447 && columnNumber == 32)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 451 && columnNumber == 32)
                {
                    isobj14TextDisabled = true;
                }
                else if (lineNumber == 437 && columnNumber == 33)
                {
                    isobj15VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 11: // Views\FieldNotesPage.xaml line 421
                        this.obj11 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 12: // Views\FieldNotesPage.xaml line 441
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13: // Views\FieldNotesPage.xaml line 446
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 14: // Views\FieldNotesPage.xaml line 450
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 15: // Views\FieldNotesPage.xaml line 435
                        this.obj15 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj11.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GSCFieldApp.Models.FieldNotes) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Models.FieldNotes)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Models.FieldNotes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_mineralAlteration(obj.mineralAlteration, phase);
                    }
                }
            }
            private void Update_mineralAlteration(global::GSCFieldApp.Models.MineralAlteration obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_mineralAlteration_MAName(obj.MAName, phase);
                        this.Update_mineralAlteration_MAMA(obj.MAMA, phase);
                        this.Update_mineralAlteration_MAMineral(obj.MAMineral, phase);
                        this.Update_mineralAlteration_isValid(obj.isValid, phase);
                    }
                }
            }
            private void Update_mineralAlteration_MAName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 441
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj, null);
                    }
                }
            }
            private void Update_mineralAlteration_MAMA(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 446
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj, null);
                    }
                }
            }
            private void Update_mineralAlteration_MAMineral(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 450
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                    }
                }
            }
            private void Update_mineralAlteration_isValid(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 435
                    if (!isobj15VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj15, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ReportPage_obj16_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::GSCFieldApp.Models.FieldNotes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj16;
            private global::Windows.UI.Xaml.Controls.TextBlock obj17;
            private global::Windows.UI.Xaml.Controls.TextBlock obj18;
            private global::Windows.UI.Xaml.Documents.Run obj19;
            private global::Windows.UI.Xaml.Documents.Run obj20;
            private global::Windows.UI.Xaml.Controls.FontIcon obj21;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj17TextDisabled = false;
            private static bool isobj18TextDisabled = false;
            private static bool isobj19TextDisabled = false;
            private static bool isobj20TextDisabled = false;
            private static bool isobj21VisibilityDisabled = false;

            public ReportPage_obj16_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 399 && columnNumber == 59)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 409 && columnNumber == 58)
                {
                    isobj18TextDisabled = true;
                }
                else if (lineNumber == 406 && columnNumber == 30)
                {
                    isobj19TextDisabled = true;
                }
                else if (lineNumber == 406 && columnNumber == 79)
                {
                    isobj20TextDisabled = true;
                }
                else if (lineNumber == 395 && columnNumber == 33)
                {
                    isobj21VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 16: // Views\FieldNotesPage.xaml line 378
                        this.obj16 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 17: // Views\FieldNotesPage.xaml line 399
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 18: // Views\FieldNotesPage.xaml line 409
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 19: // Views\FieldNotesPage.xaml line 406
                        this.obj19 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 20: // Views\FieldNotesPage.xaml line 406
                        this.obj20 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 21: // Views\FieldNotesPage.xaml line 393
                        this.obj21 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj16.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GSCFieldApp.Models.FieldNotes) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Models.FieldNotes)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Models.FieldNotes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_mineral(obj.mineral, phase);
                    }
                }
            }
            private void Update_mineral(global::GSCFieldApp.Models.Mineral obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_mineral_MineralIDName(obj.MineralIDName, phase);
                        this.Update_mineral_MineralMode(obj.MineralMode, phase);
                        this.Update_mineral_MineralNameHuman(obj.MineralNameHuman, phase);
                        this.Update_mineral_MineralName(obj.MineralName, phase);
                        this.Update_mineral_isValid(obj.isValid, phase);
                    }
                }
            }
            private void Update_mineral_MineralIDName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 399
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj17, obj, null);
                    }
                }
            }
            private void Update_mineral_MineralMode(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 409
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj18, (global::System.String)this.LookupConverter("PercentageConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_mineral_MineralNameHuman(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 406
                    if (!isobj19TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj19, obj, null);
                    }
                }
            }
            private void Update_mineral_MineralName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 406
                    if (!isobj20TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj20, obj, null);
                    }
                }
            }
            private void Update_mineral_isValid(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 393
                    if (!isobj21VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj21, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ReportPage_obj22_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::GSCFieldApp.Models.FieldNotes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj22;
            private global::Windows.UI.Xaml.Controls.TextBlock obj23;
            private global::Windows.UI.Xaml.Controls.TextBlock obj24;
            private global::Windows.UI.Xaml.Controls.FontIcon obj25;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj23TextDisabled = false;
            private static bool isobj24TextDisabled = false;
            private static bool isobj25VisibilityDisabled = false;

            public ReportPage_obj22_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 361 && columnNumber == 56)
                {
                    isobj23TextDisabled = true;
                }
                else if (lineNumber == 366 && columnNumber == 53)
                {
                    isobj24TextDisabled = true;
                }
                else if (lineNumber == 356 && columnNumber == 33)
                {
                    isobj25VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 22: // Views\FieldNotesPage.xaml line 341
                        this.obj22 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 23: // Views\FieldNotesPage.xaml line 361
                        this.obj23 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 24: // Views\FieldNotesPage.xaml line 366
                        this.obj24 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 25: // Views\FieldNotesPage.xaml line 354
                        this.obj25 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj22.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GSCFieldApp.Models.FieldNotes) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Models.FieldNotes)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Models.FieldNotes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_fossil(obj.fossil, phase);
                    }
                }
            }
            private void Update_fossil(global::GSCFieldApp.Models.Fossil obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_fossil_FossilIDName(obj.FossilIDName, phase);
                        this.Update_fossil_FossilType(obj.FossilType, phase);
                        this.Update_fossil_isValid(obj.isValid, phase);
                    }
                }
            }
            private void Update_fossil_FossilIDName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 361
                    if (!isobj23TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj23, obj, null);
                    }
                }
            }
            private void Update_fossil_FossilType(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 366
                    if (!isobj24TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj24, obj, null);
                    }
                }
            }
            private void Update_fossil_isValid(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 354
                    if (!isobj25VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj25, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ReportPage_obj26_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::GSCFieldApp.Models.FieldNotes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj26;
            private global::Windows.UI.Xaml.Controls.TextBlock obj27;
            private global::Windows.UI.Xaml.Controls.TextBlock obj28;
            private global::Windows.UI.Xaml.Controls.TextBlock obj29;
            private global::Windows.UI.Xaml.Controls.FontIcon obj30;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj27TextDisabled = false;
            private static bool isobj28TextDisabled = false;
            private static bool isobj29TextDisabled = false;
            private static bool isobj30VisibilityDisabled = false;

            public ReportPage_obj26_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 321 && columnNumber == 55)
                {
                    isobj27TextDisabled = true;
                }
                else if (lineNumber == 326 && columnNumber == 56)
                {
                    isobj28TextDisabled = true;
                }
                else if (lineNumber == 329 && columnNumber == 54)
                {
                    isobj29TextDisabled = true;
                }
                else if (lineNumber == 317 && columnNumber == 33)
                {
                    isobj30VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 26: // Views\FieldNotesPage.xaml line 300
                        this.obj26 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 27: // Views\FieldNotesPage.xaml line 321
                        this.obj27 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 28: // Views\FieldNotesPage.xaml line 326
                        this.obj28 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 29: // Views\FieldNotesPage.xaml line 329
                        this.obj29 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 30: // Views\FieldNotesPage.xaml line 315
                        this.obj30 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj26.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GSCFieldApp.Models.FieldNotes) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Models.FieldNotes)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Models.FieldNotes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_paleoflow(obj.paleoflow, phase);
                    }
                }
            }
            private void Update_paleoflow(global::GSCFieldApp.Models.Paleoflow obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_paleoflow_PFlowName(obj.PFlowName, phase);
                        this.Update_paleoflow_PFlowClass(obj.PFlowClass, phase);
                        this.Update_paleoflow_PFlowSense(obj.PFlowSense, phase);
                        this.Update_paleoflow_isValid(obj.isValid, phase);
                    }
                }
            }
            private void Update_paleoflow_PFlowName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 321
                    if (!isobj27TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj27, obj, null);
                    }
                }
            }
            private void Update_paleoflow_PFlowClass(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 326
                    if (!isobj28TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj28, obj, null);
                    }
                }
            }
            private void Update_paleoflow_PFlowSense(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 329
                    if (!isobj29TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj29, obj, null);
                    }
                }
            }
            private void Update_paleoflow_isValid(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 315
                    if (!isobj30VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj30, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ReportPage_obj31_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::GSCFieldApp.Models.FieldNotes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj31;
            private global::Windows.UI.Xaml.Controls.TextBlock obj32;
            private global::Windows.UI.Xaml.Controls.TextBlock obj33;
            private global::Windows.UI.Xaml.Controls.TextBlock obj34;
            private global::Windows.UI.Xaml.Controls.TextBlock obj35;
            private global::Windows.UI.Xaml.Controls.FontIcon obj36;
            private global::Windows.UI.Xaml.Controls.FontIcon obj37;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj32TextDisabled = false;
            private static bool isobj33TextDisabled = false;
            private static bool isobj34TextDisabled = false;
            private static bool isobj35TextDisabled = false;
            private static bool isobj36VisibilityDisabled = false;
            private static bool isobj37VisibilityDisabled = false;

            public ReportPage_obj31_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 278 && columnNumber == 58)
                {
                    isobj32TextDisabled = true;
                }
                else if (lineNumber == 282 && columnNumber == 62)
                {
                    isobj33TextDisabled = true;
                }
                else if (lineNumber == 285 && columnNumber == 62)
                {
                    isobj34TextDisabled = true;
                }
                else if (lineNumber == 288 && columnNumber == 61)
                {
                    isobj35TextDisabled = true;
                }
                else if (lineNumber == 269 && columnNumber == 33)
                {
                    isobj36VisibilityDisabled = true;
                }
                else if (lineNumber == 273 && columnNumber == 33)
                {
                    isobj37VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 31: // Views\FieldNotesPage.xaml line 251
                        this.obj31 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 32: // Views\FieldNotesPage.xaml line 278
                        this.obj32 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 33: // Views\FieldNotesPage.xaml line 282
                        this.obj33 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 34: // Views\FieldNotesPage.xaml line 285
                        this.obj34 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 35: // Views\FieldNotesPage.xaml line 288
                        this.obj35 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 36: // Views\FieldNotesPage.xaml line 267
                        this.obj36 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    case 37: // Views\FieldNotesPage.xaml line 271
                        this.obj37 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj31.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GSCFieldApp.Models.FieldNotes) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Models.FieldNotes)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Models.FieldNotes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_document(obj.document, phase);
                    }
                }
            }
            private void Update_document(global::GSCFieldApp.Models.Document obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_document_DocumentName(obj.DocumentName, phase);
                        this.Update_document_FileName(obj.FileName, phase);
                        this.Update_document_Category(obj.Category, phase);
                        this.Update_document_Description(obj.Description, phase);
                        this.Update_document_isValid(obj.isValid, phase);
                        this.Update_document_PhotoFileExists(obj.PhotoFileExists, phase);
                    }
                }
            }
            private void Update_document_DocumentName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 278
                    if (!isobj32TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj32, obj, null);
                    }
                }
            }
            private void Update_document_FileName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 282
                    if (!isobj33TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj33, obj, null);
                    }
                }
            }
            private void Update_document_Category(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 285
                    if (!isobj34TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj34, obj, null);
                    }
                }
            }
            private void Update_document_Description(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 288
                    if (!isobj35TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj35, obj, null);
                    }
                }
            }
            private void Update_document_isValid(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 267
                    if (!isobj36VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj36, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_document_PhotoFileExists(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 271
                    if (!isobj37VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj37, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityFromBoolConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ReportPage_obj38_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::GSCFieldApp.Models.FieldNotes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj38;
            private global::Windows.UI.Xaml.Controls.TextBlock obj39;
            private global::Windows.UI.Xaml.Controls.TextBlock obj40;
            private global::Windows.UI.Xaml.Controls.TextBlock obj41;
            private global::Windows.UI.Xaml.Controls.TextBlock obj42;
            private global::Windows.UI.Xaml.Documents.Run obj43;
            private global::Windows.UI.Xaml.Documents.Run obj44;
            private global::Windows.UI.Xaml.Controls.FontIcon obj45;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj39TextDisabled = false;
            private static bool isobj40TextDisabled = false;
            private static bool isobj41TextDisabled = false;
            private static bool isobj42TextDisabled = false;
            private static bool isobj43TextDisabled = false;
            private static bool isobj44TextDisabled = false;
            private static bool isobj45VisibilityDisabled = false;

            public ReportPage_obj38_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 226 && columnNumber == 56)
                {
                    isobj39TextDisabled = true;
                }
                else if (lineNumber == 229 && columnNumber == 56)
                {
                    isobj40TextDisabled = true;
                }
                else if (lineNumber == 231 && columnNumber == 58)
                {
                    isobj41TextDisabled = true;
                }
                else if (lineNumber == 233 && columnNumber == 58)
                {
                    isobj42TextDisabled = true;
                }
                else if (lineNumber == 237 && columnNumber == 30)
                {
                    isobj43TextDisabled = true;
                }
                else if (lineNumber == 239 && columnNumber == 30)
                {
                    isobj44TextDisabled = true;
                }
                else if (lineNumber == 222 && columnNumber == 33)
                {
                    isobj45VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 38: // Views\FieldNotesPage.xaml line 203
                        this.obj38 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 39: // Views\FieldNotesPage.xaml line 226
                        this.obj39 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 40: // Views\FieldNotesPage.xaml line 229
                        this.obj40 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 41: // Views\FieldNotesPage.xaml line 231
                        this.obj41 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 42: // Views\FieldNotesPage.xaml line 233
                        this.obj42 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 43: // Views\FieldNotesPage.xaml line 237
                        this.obj43 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 44: // Views\FieldNotesPage.xaml line 239
                        this.obj44 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 45: // Views\FieldNotesPage.xaml line 220
                        this.obj45 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj38.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GSCFieldApp.Models.FieldNotes) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Models.FieldNotes)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Models.FieldNotes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_structure(obj.structure, phase);
                    }
                }
            }
            private void Update_structure(global::GSCFieldApp.Models.Structure obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_structure_StructureName(obj.StructureName, phase);
                        this.Update_structure_StructureType(obj.StructureType, phase);
                        this.Update_structure_StructureDetail(obj.StructureDetail, phase);
                        this.Update_structure_StructureFormat(obj.StructureFormat, phase);
                        this.Update_structure_StructureAzimuth(obj.StructureAzimuth, phase);
                        this.Update_structure_StructureDipPlunge(obj.StructureDipPlunge, phase);
                        this.Update_structure_isValid(obj.isValid, phase);
                    }
                }
            }
            private void Update_structure_StructureName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 226
                    if (!isobj39TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj39, obj, null);
                    }
                }
            }
            private void Update_structure_StructureType(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 229
                    if (!isobj40TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj40, obj, null);
                    }
                }
            }
            private void Update_structure_StructureDetail(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 231
                    if (!isobj41TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj41, obj, null);
                    }
                }
            }
            private void Update_structure_StructureFormat(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 233
                    if (!isobj42TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj42, obj, null);
                    }
                }
            }
            private void Update_structure_StructureAzimuth(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 237
                    if (!isobj43TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj43, (global::System.String)this.LookupConverter("TextWithAzimDegreeConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_structure_StructureDipPlunge(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 239
                    if (!isobj44TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj44, (global::System.String)this.LookupConverter("TextWithDegreeConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_structure_isValid(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 220
                    if (!isobj45VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj45, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ReportPage_obj46_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::GSCFieldApp.Models.FieldNotes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj46;
            private global::Windows.UI.Xaml.Controls.TextBlock obj47;
            private global::Windows.UI.Xaml.Controls.TextBlock obj48;
            private global::Windows.UI.Xaml.Controls.TextBlock obj49;
            private global::Windows.UI.Xaml.Controls.FontIcon obj50;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj47TextDisabled = false;
            private static bool isobj48TextDisabled = false;
            private static bool isobj49TextDisabled = false;
            private static bool isobj50VisibilityDisabled = false;

            public ReportPage_obj46_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 187 && columnNumber == 56)
                {
                    isobj47TextDisabled = true;
                }
                else if (lineNumber == 189 && columnNumber == 56)
                {
                    isobj48TextDisabled = true;
                }
                else if (lineNumber == 191 && columnNumber == 59)
                {
                    isobj49TextDisabled = true;
                }
                else if (lineNumber == 183 && columnNumber == 33)
                {
                    isobj50VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 46: // Views\FieldNotesPage.xaml line 167
                        this.obj46 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 47: // Views\FieldNotesPage.xaml line 187
                        this.obj47 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 48: // Views\FieldNotesPage.xaml line 189
                        this.obj48 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 49: // Views\FieldNotesPage.xaml line 191
                        this.obj49 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 50: // Views\FieldNotesPage.xaml line 181
                        this.obj50 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj46.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GSCFieldApp.Models.FieldNotes) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Models.FieldNotes)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Models.FieldNotes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_sample(obj.sample, phase);
                    }
                }
            }
            private void Update_sample(global::GSCFieldApp.Models.Sample obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_sample_SampleName(obj.SampleName, phase);
                        this.Update_sample_SampleType(obj.SampleType, phase);
                        this.Update_sample_SamplePurpose(obj.SamplePurpose, phase);
                        this.Update_sample_isValid(obj.isValid, phase);
                    }
                }
            }
            private void Update_sample_SampleName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 187
                    if (!isobj47TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj47, obj, null);
                    }
                }
            }
            private void Update_sample_SampleType(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 189
                    if (!isobj48TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj48, obj, null);
                    }
                }
            }
            private void Update_sample_SamplePurpose(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 191
                    if (!isobj49TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj49, obj, null);
                    }
                }
            }
            private void Update_sample_isValid(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 181
                    if (!isobj50VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj50, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ReportPage_obj51_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::GSCFieldApp.Models.FieldNotes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj51;
            private global::Windows.UI.Xaml.Controls.TextBlock obj52;
            private global::Windows.UI.Xaml.Controls.TextBlock obj53;
            private global::Windows.UI.Xaml.Controls.TextBlock obj54;
            private global::Windows.UI.Xaml.Controls.FontIcon obj55;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj52TextDisabled = false;
            private static bool isobj53TextDisabled = false;
            private static bool isobj54TextDisabled = false;
            private static bool isobj55VisibilityDisabled = false;

            public ReportPage_obj51_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 153 && columnNumber == 56)
                {
                    isobj52TextDisabled = true;
                }
                else if (lineNumber == 155 && columnNumber == 59)
                {
                    isobj53TextDisabled = true;
                }
                else if (lineNumber == 157 && columnNumber == 61)
                {
                    isobj54TextDisabled = true;
                }
                else if (lineNumber == 149 && columnNumber == 33)
                {
                    isobj55VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 51: // Views\FieldNotesPage.xaml line 131
                        this.obj51 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 52: // Views\FieldNotesPage.xaml line 153
                        this.obj52 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 53: // Views\FieldNotesPage.xaml line 155
                        this.obj53 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 54: // Views\FieldNotesPage.xaml line 157
                        this.obj54 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 55: // Views\FieldNotesPage.xaml line 147
                        this.obj55 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj51.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GSCFieldApp.Models.FieldNotes) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Models.FieldNotes)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Models.FieldNotes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_earthmat(obj.earthmat, phase);
                    }
                }
            }
            private void Update_earthmat(global::GSCFieldApp.Models.EarthMaterial obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_earthmat_EarthMatName(obj.EarthMatName, phase);
                        this.Update_earthmat_EarthMatLithgroup(obj.EarthMatLithgroup, phase);
                        this.Update_earthmat_EarthMatLithdetail(obj.EarthMatLithdetail, phase);
                        this.Update_earthmat_isValid(obj.isValid, phase);
                    }
                }
            }
            private void Update_earthmat_EarthMatName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 153
                    if (!isobj52TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj52, obj, null);
                    }
                }
            }
            private void Update_earthmat_EarthMatLithgroup(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 155
                    if (!isobj53TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj53, obj, null);
                    }
                }
            }
            private void Update_earthmat_EarthMatLithdetail(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 157
                    if (!isobj54TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj54, obj, null);
                    }
                }
            }
            private void Update_earthmat_isValid(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 147
                    if (!isobj55VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj55, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ReportPage_obj56_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::GSCFieldApp.Models.FieldNotes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj56;
            private global::Windows.UI.Xaml.Controls.TextBlock obj57;
            private global::Windows.UI.Xaml.Controls.TextBlock obj58;
            private global::Windows.UI.Xaml.Controls.TextBlock obj59;
            private global::Windows.UI.Xaml.Controls.FontIcon obj60;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj57TextDisabled = false;
            private static bool isobj58TextDisabled = false;
            private static bool isobj59TextDisabled = false;
            private static bool isobj60VisibilityDisabled = false;

            public ReportPage_obj56_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 112 && columnNumber == 58)
                {
                    isobj57TextDisabled = true;
                }
                else if (lineNumber == 116 && columnNumber == 60)
                {
                    isobj58TextDisabled = true;
                }
                else if (lineNumber == 119 && columnNumber == 62)
                {
                    isobj59TextDisabled = true;
                }
                else if (lineNumber == 108 && columnNumber == 33)
                {
                    isobj60VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 56: // Views\FieldNotesPage.xaml line 91
                        this.obj56 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 57: // Views\FieldNotesPage.xaml line 112
                        this.obj57 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 58: // Views\FieldNotesPage.xaml line 116
                        this.obj58 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 59: // Views\FieldNotesPage.xaml line 119
                        this.obj59 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 60: // Views\FieldNotesPage.xaml line 106
                        this.obj60 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj56.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GSCFieldApp.Models.FieldNotes) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Models.FieldNotes)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Models.FieldNotes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_station(obj.station, phase);
                    }
                }
            }
            private void Update_station(global::GSCFieldApp.Models.Station obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_station_StationAlias(obj.StationAlias, phase);
                        this.Update_station_StationObsType(obj.StationObsType, phase);
                        this.Update_station_StationNote(obj.StationNote, phase);
                        this.Update_station_isValid(obj.isValid, phase);
                    }
                }
            }
            private void Update_station_StationAlias(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 112
                    if (!isobj57TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj57, obj, null);
                    }
                }
            }
            private void Update_station_StationObsType(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 116
                    if (!isobj58TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj58, obj, null);
                    }
                }
            }
            private void Update_station_StationNote(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 119
                    if (!isobj59TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj59, obj, null);
                    }
                }
            }
            private void Update_station_isValid(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 106
                    if (!isobj60VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj60, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ReportPage_obj61_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::GSCFieldApp.Models.FieldNotes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj61;
            private global::Windows.UI.Xaml.Controls.TextBlock obj62;
            private global::Windows.UI.Xaml.Documents.Run obj63;
            private global::Windows.UI.Xaml.Documents.Run obj64;
            private global::Windows.UI.Xaml.Controls.FontIcon obj65;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj62TextDisabled = false;
            private static bool isobj63TextDisabled = false;
            private static bool isobj64TextDisabled = false;
            private static bool isobj65VisibilityDisabled = false;

            public ReportPage_obj61_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 81 && columnNumber == 32)
                {
                    isobj62TextDisabled = true;
                }
                else if (lineNumber == 75 && columnNumber == 26)
                {
                    isobj63TextDisabled = true;
                }
                else if (lineNumber == 76 && columnNumber == 26)
                {
                    isobj64TextDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 33)
                {
                    isobj65VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 61: // Views\FieldNotesPage.xaml line 50
                        this.obj61 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 62: // Views\FieldNotesPage.xaml line 80
                        this.obj62 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 63: // Views\FieldNotesPage.xaml line 75
                        this.obj63 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 64: // Views\FieldNotesPage.xaml line 76
                        this.obj64 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 65: // Views\FieldNotesPage.xaml line 67
                        this.obj65 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj61.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GSCFieldApp.Models.FieldNotes) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Models.FieldNotes)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Models.FieldNotes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_location(obj.location, phase);
                    }
                }
            }
            private void Update_location(global::GSCFieldApp.Models.FieldLocation obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_location_LocationElev(obj.LocationElev, phase);
                        this.Update_location_LocationLat(obj.LocationLat, phase);
                        this.Update_location_LocationLong(obj.LocationLong, phase);
                        this.Update_location_isValid(obj.isValid, phase);
                    }
                }
            }
            private void Update_location_LocationElev(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 80
                    if (!isobj62TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj62, (global::System.String)this.LookupConverter("ElevationConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_location_LocationLat(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 75
                    if (!isobj63TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj63, (global::System.String)this.LookupConverter("TextWithDegreeConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_location_LocationLong(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 76
                    if (!isobj64TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj64, (global::System.String)this.LookupConverter("TextWithDegreeConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_location_isValid(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 67
                    if (!isobj65VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj65, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ReportPage_obj66_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::GSCFieldApp.Models.FieldNotes dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj66;
            private global::Windows.UI.Xaml.Controls.TextBlock obj67;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj67TextDisabled = false;

            public ReportPage_obj66_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 36 && columnNumber == 25)
                {
                    isobj67TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 66: // Views\FieldNotesPage.xaml line 30
                        this.obj66 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 67: // Views\FieldNotesPage.xaml line 34
                        this.obj67 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj66.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GSCFieldApp.Models.FieldNotes) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Models.FieldNotes)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Models.FieldNotes obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_station(obj.station, phase);
                    }
                }
            }
            private void Update_station(global::GSCFieldApp.Models.Station obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_station_StationVisitDate(obj.StationVisitDate, phase);
                    }
                }
            }
            private void Update_station_StationVisitDate(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\FieldNotesPage.xaml line 34
                    if (!isobj67TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj67, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ReportPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IReportPage_Bindings
        {
            private global::GSCFieldApp.Views.ReportPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Grid obj74;
            private global::Windows.UI.Xaml.Controls.Grid obj75;
            private global::Windows.UI.Xaml.Controls.Grid obj76;
            private global::Windows.UI.Xaml.Controls.Grid obj77;
            private global::Windows.UI.Xaml.Controls.Grid obj78;
            private global::Windows.UI.Xaml.Controls.Grid obj79;
            private global::Windows.UI.Xaml.Controls.Grid obj80;
            private global::Windows.UI.Xaml.Controls.Grid obj81;
            private global::GSCFieldApp.Themes.ExpandPanel obj83;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj84;
            private global::Windows.UI.Xaml.Controls.TextBlock obj87;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj88;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj89;
            private global::Windows.UI.Xaml.Controls.GridView obj90;
            private global::GSCFieldApp.Themes.ExpandPanel obj91;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj92;
            private global::Windows.UI.Xaml.Controls.TextBlock obj95;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj96;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj97;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj98;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj99;
            private global::Windows.UI.Xaml.Controls.GridView obj100;
            private global::GSCFieldApp.Themes.ExpandPanel obj101;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj102;
            private global::Windows.UI.Xaml.Controls.TextBlock obj105;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj106;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj107;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj108;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj109;
            private global::Windows.UI.Xaml.Controls.GridView obj110;
            private global::GSCFieldApp.Themes.ExpandPanel obj111;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj112;
            private global::Windows.UI.Xaml.Controls.TextBlock obj115;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj116;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj117;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj118;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj119;
            private global::Windows.UI.Xaml.Controls.GridView obj120;
            private global::GSCFieldApp.Themes.ExpandPanel obj121;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj122;
            private global::Windows.UI.Xaml.Controls.TextBlock obj125;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj126;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj127;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj128;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj129;
            private global::Windows.UI.Xaml.Controls.GridView obj130;
            private global::GSCFieldApp.Themes.ExpandPanel obj131;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj132;
            private global::Windows.UI.Xaml.Controls.TextBlock obj135;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj136;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj137;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj138;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj139;
            private global::Windows.UI.Xaml.Controls.GridView obj140;
            private global::GSCFieldApp.Themes.ExpandPanel obj141;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj142;
            private global::Windows.UI.Xaml.Controls.TextBlock obj145;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj146;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj147;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj148;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj149;
            private global::Windows.UI.Xaml.Controls.GridView obj150;
            private global::GSCFieldApp.Themes.ExpandPanel obj151;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj152;
            private global::Windows.UI.Xaml.Controls.TextBlock obj155;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj156;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj157;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj158;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj159;
            private global::Windows.UI.Xaml.Controls.GridView obj160;
            private global::GSCFieldApp.Themes.ExpandPanel obj161;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj162;
            private global::Windows.UI.Xaml.Controls.TextBlock obj165;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj166;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj167;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj168;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj169;
            private global::Windows.UI.Xaml.Controls.GridView obj170;
            private global::GSCFieldApp.Themes.ExpandPanel obj171;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj172;
            private global::Windows.UI.Xaml.Controls.TextBlock obj174;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj175;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj176;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj177;
            private global::Windows.UI.Xaml.Controls.GridView obj178;
            private global::Windows.UI.Xaml.Controls.GridView obj180;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj89Tapped;
            private global::Windows.UI.Xaml.Input.DoubleTappedEventHandler obj90DoubleTapped;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj90ItemClick;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj90SelectionChanged;
            private global::GSCFieldApp.Themes.ExpandPanel.IsExpandedChangedHandler obj91ExpandedChanged;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj97Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj98Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj99Tapped;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj100ItemClick;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj100SelectionChanged;
            private global::Windows.UI.Xaml.Input.DoubleTappedEventHandler obj100DoubleTapped;
            private global::GSCFieldApp.Themes.ExpandPanel.IsExpandedChangedHandler obj101ExpandedChanged;
            private global::Windows.UI.Xaml.SizeChangedEventHandler obj105SizeChanged;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj107Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj108Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj109Tapped;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj110ItemClick;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj110SelectionChanged;
            private global::Windows.UI.Xaml.Input.DoubleTappedEventHandler obj110DoubleTapped;
            private global::GSCFieldApp.Themes.ExpandPanel.IsExpandedChangedHandler obj111ExpandedChanged;
            private global::Windows.UI.Xaml.SizeChangedEventHandler obj115SizeChanged;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj117Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj118Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj119Tapped;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj120ItemClick;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj120SelectionChanged;
            private global::Windows.UI.Xaml.Input.DoubleTappedEventHandler obj120DoubleTapped;
            private global::GSCFieldApp.Themes.ExpandPanel.IsExpandedChangedHandler obj121ExpandedChanged;
            private global::Windows.UI.Xaml.SizeChangedEventHandler obj125SizeChanged;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj127Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj128Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj129Tapped;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj130ItemClick;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj130SelectionChanged;
            private global::Windows.UI.Xaml.Input.DoubleTappedEventHandler obj130DoubleTapped;
            private global::GSCFieldApp.Themes.ExpandPanel.IsExpandedChangedHandler obj131ExpandedChanged;
            private global::Windows.UI.Xaml.SizeChangedEventHandler obj135SizeChanged;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj137Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj138Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj139Tapped;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj140ItemClick;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj140SelectionChanged;
            private global::Windows.UI.Xaml.Input.DoubleTappedEventHandler obj140DoubleTapped;
            private global::GSCFieldApp.Themes.ExpandPanel.IsExpandedChangedHandler obj141ExpandedChanged;
            private global::Windows.UI.Xaml.SizeChangedEventHandler obj145SizeChanged;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj147Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj148Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj149Tapped;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj150ItemClick;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj150SelectionChanged;
            private global::Windows.UI.Xaml.Input.DoubleTappedEventHandler obj150DoubleTapped;
            private global::GSCFieldApp.Themes.ExpandPanel.IsExpandedChangedHandler obj151ExpandedChanged;
            private global::Windows.UI.Xaml.SizeChangedEventHandler obj155SizeChanged;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj157Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj158Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj159Tapped;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj160ItemClick;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj160SelectionChanged;
            private global::Windows.UI.Xaml.Input.DoubleTappedEventHandler obj160DoubleTapped;
            private global::GSCFieldApp.Themes.ExpandPanel.IsExpandedChangedHandler obj161ExpandedChanged;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj167Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj168Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj169Tapped;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj170ItemClick;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj170SelectionChanged;
            private global::Windows.UI.Xaml.Input.DoubleTappedEventHandler obj170DoubleTapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj176Tapped;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj177Tapped;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj178ItemClick;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj178SelectionChanged;
            private global::Windows.UI.Xaml.Input.DoubleTappedEventHandler obj178DoubleTapped;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj180SelectionChanged;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj74VisibilityDisabled = false;
            private static bool isobj75VisibilityDisabled = false;
            private static bool isobj76VisibilityDisabled = false;
            private static bool isobj77VisibilityDisabled = false;
            private static bool isobj78VisibilityDisabled = false;
            private static bool isobj79VisibilityDisabled = false;
            private static bool isobj80VisibilityDisabled = false;
            private static bool isobj81VisibilityDisabled = false;
            private static bool isobj83IsExpandedDisabled = false;
            private static bool isobj84ColorDisabled = false;
            private static bool isobj87ForegroundDisabled = false;
            private static bool isobj88ColorDisabled = false;
            private static bool isobj88OpacityDisabled = false;
            private static bool isobj89ForegroundDisabled = false;
            private static bool isobj89OpacityDisabled = false;
            private static bool isobj90SelectedIndexDisabled = false;
            private static bool isobj90ItemsSourceDisabled = false;
            private static bool isobj91IsExpandedDisabled = false;
            private static bool isobj92ColorDisabled = false;
            private static bool isobj95TextDisabled = false;
            private static bool isobj95ForegroundDisabled = false;
            private static bool isobj96ColorDisabled = false;
            private static bool isobj96OpacityDisabled = false;
            private static bool isobj97ForegroundDisabled = false;
            private static bool isobj97OpacityDisabled = false;
            private static bool isobj98ForegroundDisabled = false;
            private static bool isobj98OpacityDisabled = false;
            private static bool isobj99ForegroundDisabled = false;
            private static bool isobj99OpacityDisabled = false;
            private static bool isobj100SelectedIndexDisabled = false;
            private static bool isobj100ItemsSourceDisabled = false;
            private static bool isobj101IsExpandedDisabled = false;
            private static bool isobj102ColorDisabled = false;
            private static bool isobj105ForegroundDisabled = false;
            private static bool isobj106ColorDisabled = false;
            private static bool isobj106OpacityDisabled = false;
            private static bool isobj107ForegroundDisabled = false;
            private static bool isobj107OpacityDisabled = false;
            private static bool isobj108ForegroundDisabled = false;
            private static bool isobj108OpacityDisabled = false;
            private static bool isobj109ForegroundDisabled = false;
            private static bool isobj109OpacityDisabled = false;
            private static bool isobj110SelectedIndexDisabled = false;
            private static bool isobj110ItemsSourceDisabled = false;
            private static bool isobj111IsExpandedDisabled = false;
            private static bool isobj112ColorDisabled = false;
            private static bool isobj115ForegroundDisabled = false;
            private static bool isobj116ColorDisabled = false;
            private static bool isobj116OpacityDisabled = false;
            private static bool isobj117ForegroundDisabled = false;
            private static bool isobj117OpacityDisabled = false;
            private static bool isobj118ForegroundDisabled = false;
            private static bool isobj118OpacityDisabled = false;
            private static bool isobj119ForegroundDisabled = false;
            private static bool isobj119OpacityDisabled = false;
            private static bool isobj120SelectedIndexDisabled = false;
            private static bool isobj120ItemsSourceDisabled = false;
            private static bool isobj121IsExpandedDisabled = false;
            private static bool isobj122ColorDisabled = false;
            private static bool isobj125ForegroundDisabled = false;
            private static bool isobj126ColorDisabled = false;
            private static bool isobj126OpacityDisabled = false;
            private static bool isobj127ForegroundDisabled = false;
            private static bool isobj127OpacityDisabled = false;
            private static bool isobj128ForegroundDisabled = false;
            private static bool isobj128OpacityDisabled = false;
            private static bool isobj129ForegroundDisabled = false;
            private static bool isobj129OpacityDisabled = false;
            private static bool isobj130ItemsSourceDisabled = false;
            private static bool isobj130SelectedIndexDisabled = false;
            private static bool isobj131IsExpandedDisabled = false;
            private static bool isobj132ColorDisabled = false;
            private static bool isobj135ForegroundDisabled = false;
            private static bool isobj136ColorDisabled = false;
            private static bool isobj136OpacityDisabled = false;
            private static bool isobj137ForegroundDisabled = false;
            private static bool isobj137OpacityDisabled = false;
            private static bool isobj138ForegroundDisabled = false;
            private static bool isobj138OpacityDisabled = false;
            private static bool isobj139ForegroundDisabled = false;
            private static bool isobj139OpacityDisabled = false;
            private static bool isobj140SelectedIndexDisabled = false;
            private static bool isobj140ItemsSourceDisabled = false;
            private static bool isobj141IsExpandedDisabled = false;
            private static bool isobj142ColorDisabled = false;
            private static bool isobj145ForegroundDisabled = false;
            private static bool isobj146ColorDisabled = false;
            private static bool isobj146OpacityDisabled = false;
            private static bool isobj147ForegroundDisabled = false;
            private static bool isobj147OpacityDisabled = false;
            private static bool isobj148ForegroundDisabled = false;
            private static bool isobj148OpacityDisabled = false;
            private static bool isobj149ForegroundDisabled = false;
            private static bool isobj149OpacityDisabled = false;
            private static bool isobj150ItemsSourceDisabled = false;
            private static bool isobj150SelectedIndexDisabled = false;
            private static bool isobj151IsExpandedDisabled = false;
            private static bool isobj152ColorDisabled = false;
            private static bool isobj155ForegroundDisabled = false;
            private static bool isobj156ColorDisabled = false;
            private static bool isobj156OpacityDisabled = false;
            private static bool isobj157ForegroundDisabled = false;
            private static bool isobj157OpacityDisabled = false;
            private static bool isobj158ForegroundDisabled = false;
            private static bool isobj158OpacityDisabled = false;
            private static bool isobj159ForegroundDisabled = false;
            private static bool isobj159OpacityDisabled = false;
            private static bool isobj160ItemsSourceDisabled = false;
            private static bool isobj160SelectedIndexDisabled = false;
            private static bool isobj161IsExpandedDisabled = false;
            private static bool isobj162ColorDisabled = false;
            private static bool isobj165ForegroundDisabled = false;
            private static bool isobj166ColorDisabled = false;
            private static bool isobj166OpacityDisabled = false;
            private static bool isobj167ForegroundDisabled = false;
            private static bool isobj167OpacityDisabled = false;
            private static bool isobj168ForegroundDisabled = false;
            private static bool isobj168OpacityDisabled = false;
            private static bool isobj169ForegroundDisabled = false;
            private static bool isobj169OpacityDisabled = false;
            private static bool isobj170ItemsSourceDisabled = false;
            private static bool isobj170SelectedIndexDisabled = false;
            private static bool isobj171IsExpandedDisabled = false;
            private static bool isobj172ColorDisabled = false;
            private static bool isobj174ForegroundDisabled = false;
            private static bool isobj175ColorDisabled = false;
            private static bool isobj175OpacityDisabled = false;
            private static bool isobj176ForegroundDisabled = false;
            private static bool isobj176OpacityDisabled = false;
            private static bool isobj177ForegroundDisabled = false;
            private static bool isobj177OpacityDisabled = false;
            private static bool isobj178SelectedIndexDisabled = false;
            private static bool isobj178ItemsSourceDisabled = false;
            private static bool isobj180ItemsSourceDisabled = false;
            private static bool isobj180SelectedIndexDisabled = false;

            private ReportPage_obj1_BindingsTracking bindingsTracking;

            public ReportPage_obj1_Bindings()
            {
                this.bindingsTracking = new ReportPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 570 && columnNumber == 69)
                {
                    isobj74VisibilityDisabled = true;
                }
                else if (lineNumber == 623 && columnNumber == 66)
                {
                    isobj75VisibilityDisabled = true;
                }
                else if (lineNumber == 680 && columnNumber == 66)
                {
                    isobj76VisibilityDisabled = true;
                }
                else if (lineNumber == 736 && columnNumber == 66)
                {
                    isobj77VisibilityDisabled = true;
                }
                else if (lineNumber == 792 && columnNumber == 66)
                {
                    isobj78VisibilityDisabled = true;
                }
                else if (lineNumber == 848 && columnNumber == 66)
                {
                    isobj79VisibilityDisabled = true;
                }
                else if (lineNumber == 904 && columnNumber == 66)
                {
                    isobj80VisibilityDisabled = true;
                }
                else if (lineNumber == 969 && columnNumber == 66)
                {
                    isobj81VisibilityDisabled = true;
                }
                else if (lineNumber == 1027 && columnNumber == 37)
                {
                    isobj83IsExpandedDisabled = true;
                }
                else if (lineNumber == 1030 && columnNumber == 46)
                {
                    isobj84ColorDisabled = true;
                }
                else if (lineNumber == 1044 && columnNumber == 78)
                {
                    isobj87ForegroundDisabled = true;
                }
                else if (lineNumber == 1039 && columnNumber == 58)
                {
                    isobj88ColorDisabled = true;
                }
                else if (lineNumber == 1039 && columnNumber == 165)
                {
                    isobj88OpacityDisabled = true;
                }
                else if (lineNumber == 1055 && columnNumber == 74)
                {
                    isobj89ForegroundDisabled = true;
                }
                else if (lineNumber == 1055 && columnNumber == 195)
                {
                    isobj89OpacityDisabled = true;
                }
                else if (lineNumber == 1056 && columnNumber == 37)
                {
                    this.obj89.Tapped -= obj89Tapped;
                }
                else if (lineNumber == 1070 && columnNumber == 39)
                {
                    isobj90SelectedIndexDisabled = true;
                }
                else if (lineNumber == 1071 && columnNumber == 37)
                {
                    isobj90ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1067 && columnNumber == 55)
                {
                    this.obj90.DoubleTapped -= obj90DoubleTapped;
                }
                else if (lineNumber == 1068 && columnNumber == 63)
                {
                    this.obj90.ItemClick -= obj90ItemClick;
                }
                else if (lineNumber == 1072 && columnNumber == 39)
                {
                    this.obj90.SelectionChanged -= obj90SelectionChanged;
                }
                else if (lineNumber == 972 && columnNumber == 48)
                {
                    isobj91IsExpandedDisabled = true;
                }
                else if (lineNumber == 973 && columnNumber == 48)
                {
                    this.obj91.ExpandedChanged -= obj91ExpandedChanged;
                }
                else if (lineNumber == 978 && columnNumber == 46)
                {
                    isobj92ColorDisabled = true;
                }
                else if (lineNumber == 987 && columnNumber == 77)
                {
                    isobj95TextDisabled = true;
                }
                else if (lineNumber == 988 && columnNumber == 66)
                {
                    isobj95ForegroundDisabled = true;
                }
                else if (lineNumber == 984 && columnNumber == 58)
                {
                    isobj96ColorDisabled = true;
                }
                else if (lineNumber == 984 && columnNumber == 165)
                {
                    isobj96OpacityDisabled = true;
                }
                else if (lineNumber == 998 && columnNumber == 70)
                {
                    isobj97ForegroundDisabled = true;
                }
                else if (lineNumber == 998 && columnNumber == 248)
                {
                    isobj97OpacityDisabled = true;
                }
                else if (lineNumber == 998 && columnNumber == 313)
                {
                    this.obj97.Tapped -= obj97Tapped;
                }
                else if (lineNumber == 999 && columnNumber == 71)
                {
                    isobj98ForegroundDisabled = true;
                }
                else if (lineNumber == 999 && columnNumber == 235)
                {
                    isobj98OpacityDisabled = true;
                }
                else if (lineNumber == 999 && columnNumber == 308)
                {
                    this.obj98.Tapped -= obj98Tapped;
                }
                else if (lineNumber == 1000 && columnNumber == 73)
                {
                    isobj99ForegroundDisabled = true;
                }
                else if (lineNumber == 1000 && columnNumber == 237)
                {
                    isobj99OpacityDisabled = true;
                }
                else if (lineNumber == 1000 && columnNumber == 310)
                {
                    this.obj99.Tapped -= obj99Tapped;
                }
                else if (lineNumber == 1009 && columnNumber == 39)
                {
                    isobj100SelectedIndexDisabled = true;
                }
                else if (lineNumber == 1010 && columnNumber == 37)
                {
                    isobj100ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1007 && columnNumber == 60)
                {
                    this.obj100.ItemClick -= obj100ItemClick;
                }
                else if (lineNumber == 1011 && columnNumber == 37)
                {
                    this.obj100.SelectionChanged -= obj100SelectionChanged;
                }
                else if (lineNumber == 1012 && columnNumber == 47)
                {
                    this.obj100.DoubleTapped -= obj100DoubleTapped;
                }
                else if (lineNumber == 907 && columnNumber == 45)
                {
                    isobj101IsExpandedDisabled = true;
                }
                else if (lineNumber == 909 && columnNumber == 45)
                {
                    this.obj101.ExpandedChanged -= obj101ExpandedChanged;
                }
                else if (lineNumber == 913 && columnNumber == 46)
                {
                    isobj102ColorDisabled = true;
                }
                else if (lineNumber == 924 && columnNumber == 66)
                {
                    isobj105ForegroundDisabled = true;
                }
                else if (lineNumber == 928 && columnNumber == 81)
                {
                    this.obj105.SizeChanged -= obj105SizeChanged;
                }
                else if (lineNumber == 919 && columnNumber == 58)
                {
                    isobj106ColorDisabled = true;
                }
                else if (lineNumber == 920 && columnNumber == 58)
                {
                    isobj106OpacityDisabled = true;
                }
                else if (lineNumber == 935 && columnNumber == 72)
                {
                    isobj107ForegroundDisabled = true;
                }
                else if (lineNumber == 937 && columnNumber == 45)
                {
                    isobj107OpacityDisabled = true;
                }
                else if (lineNumber == 937 && columnNumber == 112)
                {
                    this.obj107.Tapped -= obj107Tapped;
                }
                else if (lineNumber == 939 && columnNumber == 45)
                {
                    isobj108ForegroundDisabled = true;
                }
                else if (lineNumber == 941 && columnNumber == 45)
                {
                    isobj108OpacityDisabled = true;
                }
                else if (lineNumber == 941 && columnNumber == 109)
                {
                    this.obj108.Tapped -= obj108Tapped;
                }
                else if (lineNumber == 943 && columnNumber == 45)
                {
                    isobj109ForegroundDisabled = true;
                }
                else if (lineNumber == 945 && columnNumber == 45)
                {
                    isobj109OpacityDisabled = true;
                }
                else if (lineNumber == 945 && columnNumber == 109)
                {
                    this.obj109.Tapped -= obj109Tapped;
                }
                else if (lineNumber == 954 && columnNumber == 39)
                {
                    isobj110SelectedIndexDisabled = true;
                }
                else if (lineNumber == 955 && columnNumber == 37)
                {
                    isobj110ItemsSourceDisabled = true;
                }
                else if (lineNumber == 952 && columnNumber == 60)
                {
                    this.obj110.ItemClick -= obj110ItemClick;
                }
                else if (lineNumber == 956 && columnNumber == 37)
                {
                    this.obj110.SelectionChanged -= obj110SelectionChanged;
                }
                else if (lineNumber == 957 && columnNumber == 47)
                {
                    this.obj110.DoubleTapped -= obj110DoubleTapped;
                }
                else if (lineNumber == 851 && columnNumber == 45)
                {
                    isobj111IsExpandedDisabled = true;
                }
                else if (lineNumber == 853 && columnNumber == 45)
                {
                    this.obj111.ExpandedChanged -= obj111ExpandedChanged;
                }
                else if (lineNumber == 857 && columnNumber == 46)
                {
                    isobj112ColorDisabled = true;
                }
                else if (lineNumber == 867 && columnNumber == 66)
                {
                    isobj115ForegroundDisabled = true;
                }
                else if (lineNumber == 871 && columnNumber == 81)
                {
                    this.obj115.SizeChanged -= obj115SizeChanged;
                }
                else if (lineNumber == 863 && columnNumber == 58)
                {
                    isobj116ColorDisabled = true;
                }
                else if (lineNumber == 863 && columnNumber == 164)
                {
                    isobj116OpacityDisabled = true;
                }
                else if (lineNumber == 878 && columnNumber == 69)
                {
                    isobj117ForegroundDisabled = true;
                }
                else if (lineNumber == 878 && columnNumber == 245)
                {
                    isobj117OpacityDisabled = true;
                }
                else if (lineNumber == 878 && columnNumber == 309)
                {
                    this.obj117.Tapped -= obj117Tapped;
                }
                else if (lineNumber == 879 && columnNumber == 70)
                {
                    isobj118ForegroundDisabled = true;
                }
                else if (lineNumber == 879 && columnNumber == 243)
                {
                    isobj118OpacityDisabled = true;
                }
                else if (lineNumber == 879 && columnNumber == 304)
                {
                    this.obj118.Tapped -= obj118Tapped;
                }
                else if (lineNumber == 880 && columnNumber == 72)
                {
                    isobj119ForegroundDisabled = true;
                }
                else if (lineNumber == 880 && columnNumber == 246)
                {
                    isobj119OpacityDisabled = true;
                }
                else if (lineNumber == 880 && columnNumber == 307)
                {
                    this.obj119.Tapped -= obj119Tapped;
                }
                else if (lineNumber == 889 && columnNumber == 39)
                {
                    isobj120SelectedIndexDisabled = true;
                }
                else if (lineNumber == 890 && columnNumber == 37)
                {
                    isobj120ItemsSourceDisabled = true;
                }
                else if (lineNumber == 887 && columnNumber == 60)
                {
                    this.obj120.ItemClick -= obj120ItemClick;
                }
                else if (lineNumber == 891 && columnNumber == 37)
                {
                    this.obj120.SelectionChanged -= obj120SelectionChanged;
                }
                else if (lineNumber == 892 && columnNumber == 47)
                {
                    this.obj120.DoubleTapped -= obj120DoubleTapped;
                }
                else if (lineNumber == 795 && columnNumber == 45)
                {
                    isobj121IsExpandedDisabled = true;
                }
                else if (lineNumber == 797 && columnNumber == 45)
                {
                    this.obj121.ExpandedChanged -= obj121ExpandedChanged;
                }
                else if (lineNumber == 801 && columnNumber == 46)
                {
                    isobj122ColorDisabled = true;
                }
                else if (lineNumber == 811 && columnNumber == 66)
                {
                    isobj125ForegroundDisabled = true;
                }
                else if (lineNumber == 815 && columnNumber == 81)
                {
                    this.obj125.SizeChanged -= obj125SizeChanged;
                }
                else if (lineNumber == 807 && columnNumber == 58)
                {
                    isobj126ColorDisabled = true;
                }
                else if (lineNumber == 807 && columnNumber == 166)
                {
                    isobj126OpacityDisabled = true;
                }
                else if (lineNumber == 822 && columnNumber == 67)
                {
                    isobj127ForegroundDisabled = true;
                }
                else if (lineNumber == 822 && columnNumber == 243)
                {
                    isobj127OpacityDisabled = true;
                }
                else if (lineNumber == 822 && columnNumber == 305)
                {
                    this.obj127.Tapped -= obj127Tapped;
                }
                else if (lineNumber == 823 && columnNumber == 68)
                {
                    isobj128ForegroundDisabled = true;
                }
                else if (lineNumber == 823 && columnNumber == 246)
                {
                    isobj128OpacityDisabled = true;
                }
                else if (lineNumber == 823 && columnNumber == 305)
                {
                    this.obj128.Tapped -= obj128Tapped;
                }
                else if (lineNumber == 824 && columnNumber == 75)
                {
                    isobj129ForegroundDisabled = true;
                }
                else if (lineNumber == 824 && columnNumber == 251)
                {
                    isobj129OpacityDisabled = true;
                }
                else if (lineNumber == 824 && columnNumber == 310)
                {
                    this.obj129.Tapped -= obj129Tapped;
                }
                else if (lineNumber == 833 && columnNumber == 37)
                {
                    isobj130ItemsSourceDisabled = true;
                }
                else if (lineNumber == 834 && columnNumber == 39)
                {
                    isobj130SelectedIndexDisabled = true;
                }
                else if (lineNumber == 831 && columnNumber == 60)
                {
                    this.obj130.ItemClick -= obj130ItemClick;
                }
                else if (lineNumber == 835 && columnNumber == 37)
                {
                    this.obj130.SelectionChanged -= obj130SelectionChanged;
                }
                else if (lineNumber == 836 && columnNumber == 47)
                {
                    this.obj130.DoubleTapped -= obj130DoubleTapped;
                }
                else if (lineNumber == 739 && columnNumber == 45)
                {
                    isobj131IsExpandedDisabled = true;
                }
                else if (lineNumber == 741 && columnNumber == 45)
                {
                    this.obj131.ExpandedChanged -= obj131ExpandedChanged;
                }
                else if (lineNumber == 745 && columnNumber == 46)
                {
                    isobj132ColorDisabled = true;
                }
                else if (lineNumber == 755 && columnNumber == 66)
                {
                    isobj135ForegroundDisabled = true;
                }
                else if (lineNumber == 759 && columnNumber == 81)
                {
                    this.obj135.SizeChanged -= obj135SizeChanged;
                }
                else if (lineNumber == 751 && columnNumber == 58)
                {
                    isobj136ColorDisabled = true;
                }
                else if (lineNumber == 751 && columnNumber == 163)
                {
                    isobj136OpacityDisabled = true;
                }
                else if (lineNumber == 766 && columnNumber == 68)
                {
                    isobj137ForegroundDisabled = true;
                }
                else if (lineNumber == 766 && columnNumber == 242)
                {
                    isobj137OpacityDisabled = true;
                }
                else if (lineNumber == 766 && columnNumber == 305)
                {
                    this.obj137.Tapped -= obj137Tapped;
                }
                else if (lineNumber == 767 && columnNumber == 69)
                {
                    isobj138ForegroundDisabled = true;
                }
                else if (lineNumber == 767 && columnNumber == 240)
                {
                    isobj138OpacityDisabled = true;
                }
                else if (lineNumber == 767 && columnNumber == 300)
                {
                    this.obj138.Tapped -= obj138Tapped;
                }
                else if (lineNumber == 768 && columnNumber == 71)
                {
                    isobj139ForegroundDisabled = true;
                }
                else if (lineNumber == 768 && columnNumber == 244)
                {
                    isobj139OpacityDisabled = true;
                }
                else if (lineNumber == 768 && columnNumber == 304)
                {
                    this.obj139.Tapped -= obj139Tapped;
                }
                else if (lineNumber == 777 && columnNumber == 39)
                {
                    isobj140SelectedIndexDisabled = true;
                }
                else if (lineNumber == 778 && columnNumber == 37)
                {
                    isobj140ItemsSourceDisabled = true;
                }
                else if (lineNumber == 775 && columnNumber == 60)
                {
                    this.obj140.ItemClick -= obj140ItemClick;
                }
                else if (lineNumber == 779 && columnNumber == 37)
                {
                    this.obj140.SelectionChanged -= obj140SelectionChanged;
                }
                else if (lineNumber == 780 && columnNumber == 47)
                {
                    this.obj140.DoubleTapped -= obj140DoubleTapped;
                }
                else if (lineNumber == 683 && columnNumber == 45)
                {
                    isobj141IsExpandedDisabled = true;
                }
                else if (lineNumber == 685 && columnNumber == 45)
                {
                    this.obj141.ExpandedChanged -= obj141ExpandedChanged;
                }
                else if (lineNumber == 689 && columnNumber == 46)
                {
                    isobj142ColorDisabled = true;
                }
                else if (lineNumber == 699 && columnNumber == 66)
                {
                    isobj145ForegroundDisabled = true;
                }
                else if (lineNumber == 703 && columnNumber == 81)
                {
                    this.obj145.SizeChanged -= obj145SizeChanged;
                }
                else if (lineNumber == 695 && columnNumber == 58)
                {
                    isobj146ColorDisabled = true;
                }
                else if (lineNumber == 695 && columnNumber == 163)
                {
                    isobj146OpacityDisabled = true;
                }
                else if (lineNumber == 710 && columnNumber == 67)
                {
                    isobj147ForegroundDisabled = true;
                }
                else if (lineNumber == 710 && columnNumber == 240)
                {
                    isobj147OpacityDisabled = true;
                }
                else if (lineNumber == 710 && columnNumber == 306)
                {
                    this.obj147.Tapped -= obj147Tapped;
                }
                else if (lineNumber == 711 && columnNumber == 68)
                {
                    isobj148ForegroundDisabled = true;
                }
                else if (lineNumber == 711 && columnNumber == 238)
                {
                    isobj148OpacityDisabled = true;
                }
                else if (lineNumber == 711 && columnNumber == 301)
                {
                    this.obj148.Tapped -= obj148Tapped;
                }
                else if (lineNumber == 712 && columnNumber == 70)
                {
                    isobj149ForegroundDisabled = true;
                }
                else if (lineNumber == 712 && columnNumber == 243)
                {
                    isobj149OpacityDisabled = true;
                }
                else if (lineNumber == 712 && columnNumber == 306)
                {
                    this.obj149.Tapped -= obj149Tapped;
                }
                else if (lineNumber == 721 && columnNumber == 37)
                {
                    isobj150ItemsSourceDisabled = true;
                }
                else if (lineNumber == 723 && columnNumber == 39)
                {
                    isobj150SelectedIndexDisabled = true;
                }
                else if (lineNumber == 719 && columnNumber == 60)
                {
                    this.obj150.ItemClick -= obj150ItemClick;
                }
                else if (lineNumber == 722 && columnNumber == 37)
                {
                    this.obj150.SelectionChanged -= obj150SelectionChanged;
                }
                else if (lineNumber == 724 && columnNumber == 47)
                {
                    this.obj150.DoubleTapped -= obj150DoubleTapped;
                }
                else if (lineNumber == 626 && columnNumber == 45)
                {
                    isobj151IsExpandedDisabled = true;
                }
                else if (lineNumber == 628 && columnNumber == 45)
                {
                    this.obj151.ExpandedChanged -= obj151ExpandedChanged;
                }
                else if (lineNumber == 632 && columnNumber == 46)
                {
                    isobj152ColorDisabled = true;
                }
                else if (lineNumber == 642 && columnNumber == 66)
                {
                    isobj155ForegroundDisabled = true;
                }
                else if (lineNumber == 646 && columnNumber == 81)
                {
                    this.obj155.SizeChanged -= obj155SizeChanged;
                }
                else if (lineNumber == 638 && columnNumber == 58)
                {
                    isobj156ColorDisabled = true;
                }
                else if (lineNumber == 638 && columnNumber == 163)
                {
                    isobj156OpacityDisabled = true;
                }
                else if (lineNumber == 653 && columnNumber == 68)
                {
                    isobj157ForegroundDisabled = true;
                }
                else if (lineNumber == 653 && columnNumber == 242)
                {
                    isobj157OpacityDisabled = true;
                }
                else if (lineNumber == 653 && columnNumber == 305)
                {
                    this.obj157.Tapped -= obj157Tapped;
                }
                else if (lineNumber == 654 && columnNumber == 69)
                {
                    isobj158ForegroundDisabled = true;
                }
                else if (lineNumber == 654 && columnNumber == 240)
                {
                    isobj158OpacityDisabled = true;
                }
                else if (lineNumber == 654 && columnNumber == 300)
                {
                    this.obj158.Tapped -= obj158Tapped;
                }
                else if (lineNumber == 655 && columnNumber == 71)
                {
                    isobj159ForegroundDisabled = true;
                }
                else if (lineNumber == 655 && columnNumber == 244)
                {
                    isobj159OpacityDisabled = true;
                }
                else if (lineNumber == 655 && columnNumber == 304)
                {
                    this.obj159.Tapped -= obj159Tapped;
                }
                else if (lineNumber == 664 && columnNumber == 37)
                {
                    isobj160ItemsSourceDisabled = true;
                }
                else if (lineNumber == 666 && columnNumber == 39)
                {
                    isobj160SelectedIndexDisabled = true;
                }
                else if (lineNumber == 662 && columnNumber == 60)
                {
                    this.obj160.ItemClick -= obj160ItemClick;
                }
                else if (lineNumber == 665 && columnNumber == 37)
                {
                    this.obj160.SelectionChanged -= obj160SelectionChanged;
                }
                else if (lineNumber == 667 && columnNumber == 47)
                {
                    this.obj160.DoubleTapped -= obj160DoubleTapped;
                }
                else if (lineNumber == 572 && columnNumber == 70)
                {
                    isobj161IsExpandedDisabled = true;
                }
                else if (lineNumber == 573 && columnNumber == 70)
                {
                    this.obj161.ExpandedChanged -= obj161ExpandedChanged;
                }
                else if (lineNumber == 578 && columnNumber == 46)
                {
                    isobj162ColorDisabled = true;
                }
                else if (lineNumber == 590 && columnNumber == 70)
                {
                    isobj165ForegroundDisabled = true;
                }
                else if (lineNumber == 586 && columnNumber == 58)
                {
                    isobj166ColorDisabled = true;
                }
                else if (lineNumber == 586 && columnNumber == 165)
                {
                    isobj166OpacityDisabled = true;
                }
                else if (lineNumber == 600 && columnNumber == 70)
                {
                    isobj167ForegroundDisabled = true;
                }
                else if (lineNumber == 600 && columnNumber == 300)
                {
                    isobj167OpacityDisabled = true;
                }
                else if (lineNumber == 600 && columnNumber == 249)
                {
                    this.obj167.Tapped -= obj167Tapped;
                }
                else if (lineNumber == 601 && columnNumber == 71)
                {
                    isobj168ForegroundDisabled = true;
                }
                else if (lineNumber == 601 && columnNumber == 304)
                {
                    isobj168OpacityDisabled = true;
                }
                else if (lineNumber == 601 && columnNumber == 252)
                {
                    this.obj168.Tapped -= obj168Tapped;
                }
                else if (lineNumber == 602 && columnNumber == 79)
                {
                    isobj169ForegroundDisabled = true;
                }
                else if (lineNumber == 602 && columnNumber == 305)
                {
                    isobj169OpacityDisabled = true;
                }
                else if (lineNumber == 602 && columnNumber == 254)
                {
                    this.obj169.Tapped -= obj169Tapped;
                }
                else if (lineNumber == 610 && columnNumber == 37)
                {
                    isobj170ItemsSourceDisabled = true;
                }
                else if (lineNumber == 613 && columnNumber == 37)
                {
                    isobj170SelectedIndexDisabled = true;
                }
                else if (lineNumber == 608 && columnNumber == 37)
                {
                    this.obj170.ItemClick -= obj170ItemClick;
                }
                else if (lineNumber == 611 && columnNumber == 37)
                {
                    this.obj170.SelectionChanged -= obj170SelectionChanged;
                }
                else if (lineNumber == 612 && columnNumber == 37)
                {
                    this.obj170.DoubleTapped -= obj170DoubleTapped;
                }
                else if (lineNumber == 520 && columnNumber == 68)
                {
                    isobj171IsExpandedDisabled = true;
                }
                else if (lineNumber == 522 && columnNumber == 46)
                {
                    isobj172ColorDisabled = true;
                }
                else if (lineNumber == 533 && columnNumber == 78)
                {
                    isobj174ForegroundDisabled = true;
                }
                else if (lineNumber == 528 && columnNumber == 58)
                {
                    isobj175ColorDisabled = true;
                }
                else if (lineNumber == 528 && columnNumber == 164)
                {
                    isobj175OpacityDisabled = true;
                }
                else if (lineNumber == 542 && columnNumber == 70)
                {
                    isobj176ForegroundDisabled = true;
                }
                else if (lineNumber == 542 && columnNumber == 190)
                {
                    isobj176OpacityDisabled = true;
                }
                else if (lineNumber == 544 && columnNumber == 64)
                {
                    this.obj176.Tapped -= obj176Tapped;
                }
                else if (lineNumber == 545 && columnNumber == 72)
                {
                    isobj177ForegroundDisabled = true;
                }
                else if (lineNumber == 545 && columnNumber == 194)
                {
                    isobj177OpacityDisabled = true;
                }
                else if (lineNumber == 548 && columnNumber == 53)
                {
                    this.obj177.Tapped -= obj177Tapped;
                }
                else if (lineNumber == 555 && columnNumber == 33)
                {
                    isobj178SelectedIndexDisabled = true;
                }
                else if (lineNumber == 557 && columnNumber == 33)
                {
                    isobj178ItemsSourceDisabled = true;
                }
                else if (lineNumber == 554 && columnNumber == 33)
                {
                    this.obj178.ItemClick -= obj178ItemClick;
                }
                else if (lineNumber == 558 && columnNumber == 33)
                {
                    this.obj178.SelectionChanged -= obj178SelectionChanged;
                }
                else if (lineNumber == 559 && columnNumber == 33)
                {
                    this.obj178.DoubleTapped -= obj178DoubleTapped;
                }
                else if (lineNumber == 479 && columnNumber == 17)
                {
                    isobj180ItemsSourceDisabled = true;
                }
                else if (lineNumber == 480 && columnNumber == 17)
                {
                    isobj180SelectedIndexDisabled = true;
                }
                else if (lineNumber == 481 && columnNumber == 17)
                {
                    this.obj180.SelectionChanged -= obj180SelectionChanged;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 74: // Views\FieldNotesPage.xaml line 569
                        this.obj74 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        this.bindingsTracking.RegisterTwoWayListener_74(this.obj74);
                        break;
                    case 75: // Views\FieldNotesPage.xaml line 621
                        this.obj75 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        this.bindingsTracking.RegisterTwoWayListener_75(this.obj75);
                        break;
                    case 76: // Views\FieldNotesPage.xaml line 678
                        this.obj76 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        this.bindingsTracking.RegisterTwoWayListener_76(this.obj76);
                        break;
                    case 77: // Views\FieldNotesPage.xaml line 734
                        this.obj77 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        this.bindingsTracking.RegisterTwoWayListener_77(this.obj77);
                        break;
                    case 78: // Views\FieldNotesPage.xaml line 790
                        this.obj78 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        this.bindingsTracking.RegisterTwoWayListener_78(this.obj78);
                        break;
                    case 79: // Views\FieldNotesPage.xaml line 846
                        this.obj79 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        this.bindingsTracking.RegisterTwoWayListener_79(this.obj79);
                        break;
                    case 80: // Views\FieldNotesPage.xaml line 902
                        this.obj80 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        this.bindingsTracking.RegisterTwoWayListener_80(this.obj80);
                        break;
                    case 81: // Views\FieldNotesPage.xaml line 967
                        this.obj81 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        this.bindingsTracking.RegisterTwoWayListener_81(this.obj81);
                        break;
                    case 83: // Views\FieldNotesPage.xaml line 1026
                        this.obj83 = (global::GSCFieldApp.Themes.ExpandPanel)target;
                        this.bindingsTracking.RegisterTwoWayListener_83(this.obj83);
                        break;
                    case 84: // Views\FieldNotesPage.xaml line 1030
                        this.obj84 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_84(this.obj84);
                        break;
                    case 87: // Views\FieldNotesPage.xaml line 1043
                        this.obj87 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.bindingsTracking.RegisterTwoWayListener_87(this.obj87);
                        break;
                    case 88: // Views\FieldNotesPage.xaml line 1039
                        this.obj88 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_88(this.obj88);
                        break;
                    case 89: // Views\FieldNotesPage.xaml line 1055
                        this.obj89 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj89Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.LocationEditIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj89Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_89(this.obj89);
                        break;
                    case 90: // Views\FieldNotesPage.xaml line 1064
                        this.obj90 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj90DoubleTapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportLocationList_DoubleTapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).DoubleTapped += obj90DoubleTapped;
                        this.obj90ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.Report_ItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj90ItemClick;
                        this.obj90SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportDetail_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).SelectionChanged += obj90SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_90(this.obj90);
                        break;
                    case 91: // Views\FieldNotesPage.xaml line 971
                        this.obj91 = (global::GSCFieldApp.Themes.ExpandPanel)target;
                        this.obj91ExpandedChanged = () =>
                        {
                            this.dataRoot.ViewModel.DocumentExpandPanel_ExpandedChanged();
                        };
                        ((global::GSCFieldApp.Themes.ExpandPanel)target).ExpandedChanged += obj91ExpandedChanged;
                        this.bindingsTracking.RegisterTwoWayListener_91(this.obj91);
                        break;
                    case 92: // Views\FieldNotesPage.xaml line 978
                        this.obj92 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_92(this.obj92);
                        break;
                    case 95: // Views\FieldNotesPage.xaml line 987
                        this.obj95 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.bindingsTracking.RegisterTwoWayListener_95(this.obj95);
                        break;
                    case 96: // Views\FieldNotesPage.xaml line 984
                        this.obj96 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_96(this.obj96);
                        break;
                    case 97: // Views\FieldNotesPage.xaml line 998
                        this.obj97 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj97Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.DocumentAddIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj97Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_97(this.obj97);
                        break;
                    case 98: // Views\FieldNotesPage.xaml line 999
                        this.obj98 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj98Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.DocumentEditIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj98Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_98(this.obj98);
                        break;
                    case 99: // Views\FieldNotesPage.xaml line 1000
                        this.obj99 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj99Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.DeleteIcon_TappedAsync(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj99Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_99(this.obj99);
                        break;
                    case 100: // Views\FieldNotesPage.xaml line 1006
                        this.obj100 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj100ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.Report_ItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj100ItemClick;
                        this.obj100SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportDetail_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).SelectionChanged += obj100SelectionChanged;
                        this.obj100DoubleTapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportDocumentList_DoubleTapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).DoubleTapped += obj100DoubleTapped;
                        this.bindingsTracking.RegisterTwoWayListener_100(this.obj100);
                        break;
                    case 101: // Views\FieldNotesPage.xaml line 906
                        this.obj101 = (global::GSCFieldApp.Themes.ExpandPanel)target;
                        this.obj101ExpandedChanged = () =>
                        {
                            this.dataRoot.ViewModel.MineralAltExpandPanel_ExpandedChanged();
                        };
                        ((global::GSCFieldApp.Themes.ExpandPanel)target).ExpandedChanged += obj101ExpandedChanged;
                        this.bindingsTracking.RegisterTwoWayListener_101(this.obj101);
                        break;
                    case 102: // Views\FieldNotesPage.xaml line 913
                        this.obj102 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_102(this.obj102);
                        break;
                    case 105: // Views\FieldNotesPage.xaml line 923
                        this.obj105 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.obj105SizeChanged = (global::System.Object p0, global::Windows.UI.Xaml.SizeChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.textBlock_FieldMineralAlt_SizeChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBlock)target).SizeChanged += obj105SizeChanged;
                        this.bindingsTracking.RegisterTwoWayListener_105(this.obj105);
                        break;
                    case 106: // Views\FieldNotesPage.xaml line 919
                        this.obj106 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_106(this.obj106);
                        break;
                    case 107: // Views\FieldNotesPage.xaml line 935
                        this.obj107 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj107Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.MineralAltAddIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj107Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_107(this.obj107);
                        break;
                    case 108: // Views\FieldNotesPage.xaml line 938
                        this.obj108 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj108Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.MineralAltEditIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj108Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_108(this.obj108);
                        break;
                    case 109: // Views\FieldNotesPage.xaml line 942
                        this.obj109 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj109Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.DeleteIcon_TappedAsync(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj109Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_109(this.obj109);
                        break;
                    case 110: // Views\FieldNotesPage.xaml line 951
                        this.obj110 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj110ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.Report_ItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj110ItemClick;
                        this.obj110SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportDetail_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).SelectionChanged += obj110SelectionChanged;
                        this.obj110DoubleTapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportMineralAltList_DoubleTapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).DoubleTapped += obj110DoubleTapped;
                        this.bindingsTracking.RegisterTwoWayListener_110(this.obj110);
                        break;
                    case 111: // Views\FieldNotesPage.xaml line 850
                        this.obj111 = (global::GSCFieldApp.Themes.ExpandPanel)target;
                        this.obj111ExpandedChanged = () =>
                        {
                            this.dataRoot.ViewModel.MineralExpandPanel_ExpandedChanged();
                        };
                        ((global::GSCFieldApp.Themes.ExpandPanel)target).ExpandedChanged += obj111ExpandedChanged;
                        this.bindingsTracking.RegisterTwoWayListener_111(this.obj111);
                        break;
                    case 112: // Views\FieldNotesPage.xaml line 857
                        this.obj112 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_112(this.obj112);
                        break;
                    case 115: // Views\FieldNotesPage.xaml line 866
                        this.obj115 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.obj115SizeChanged = (global::System.Object p0, global::Windows.UI.Xaml.SizeChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.textBlock_FieldMineral_SizeChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBlock)target).SizeChanged += obj115SizeChanged;
                        this.bindingsTracking.RegisterTwoWayListener_115(this.obj115);
                        break;
                    case 116: // Views\FieldNotesPage.xaml line 863
                        this.obj116 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_116(this.obj116);
                        break;
                    case 117: // Views\FieldNotesPage.xaml line 878
                        this.obj117 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj117Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.MineralAddIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj117Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_117(this.obj117);
                        break;
                    case 118: // Views\FieldNotesPage.xaml line 879
                        this.obj118 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj118Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.MineralEditIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj118Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_118(this.obj118);
                        break;
                    case 119: // Views\FieldNotesPage.xaml line 880
                        this.obj119 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj119Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.DeleteIcon_TappedAsync(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj119Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_119(this.obj119);
                        break;
                    case 120: // Views\FieldNotesPage.xaml line 886
                        this.obj120 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj120ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.Report_ItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj120ItemClick;
                        this.obj120SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportDetail_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).SelectionChanged += obj120SelectionChanged;
                        this.obj120DoubleTapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportMineralList_DoubleTapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).DoubleTapped += obj120DoubleTapped;
                        this.bindingsTracking.RegisterTwoWayListener_120(this.obj120);
                        break;
                    case 121: // Views\FieldNotesPage.xaml line 794
                        this.obj121 = (global::GSCFieldApp.Themes.ExpandPanel)target;
                        this.obj121ExpandedChanged = () =>
                        {
                            this.dataRoot.ViewModel.PflowExpandPanel_ExpandedChanged();
                        };
                        ((global::GSCFieldApp.Themes.ExpandPanel)target).ExpandedChanged += obj121ExpandedChanged;
                        this.bindingsTracking.RegisterTwoWayListener_121(this.obj121);
                        break;
                    case 122: // Views\FieldNotesPage.xaml line 801
                        this.obj122 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_122(this.obj122);
                        break;
                    case 125: // Views\FieldNotesPage.xaml line 810
                        this.obj125 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.obj125SizeChanged = (global::System.Object p0, global::Windows.UI.Xaml.SizeChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.textBlock_FieldPflow_SizeChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBlock)target).SizeChanged += obj125SizeChanged;
                        this.bindingsTracking.RegisterTwoWayListener_125(this.obj125);
                        break;
                    case 126: // Views\FieldNotesPage.xaml line 807
                        this.obj126 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_126(this.obj126);
                        break;
                    case 127: // Views\FieldNotesPage.xaml line 822
                        this.obj127 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj127Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.PflowAddIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj127Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_127(this.obj127);
                        break;
                    case 128: // Views\FieldNotesPage.xaml line 823
                        this.obj128 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj128Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.PflowEditIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj128Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_128(this.obj128);
                        break;
                    case 129: // Views\FieldNotesPage.xaml line 824
                        this.obj129 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj129Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.DeleteIcon_TappedAsync(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj129Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_129(this.obj129);
                        break;
                    case 130: // Views\FieldNotesPage.xaml line 830
                        this.obj130 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj130ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.Report_ItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj130ItemClick;
                        this.obj130SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportDetail_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).SelectionChanged += obj130SelectionChanged;
                        this.obj130DoubleTapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportPflowList_DoubleTapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).DoubleTapped += obj130DoubleTapped;
                        this.bindingsTracking.RegisterTwoWayListener_130(this.obj130);
                        break;
                    case 131: // Views\FieldNotesPage.xaml line 738
                        this.obj131 = (global::GSCFieldApp.Themes.ExpandPanel)target;
                        this.obj131ExpandedChanged = () =>
                        {
                            this.dataRoot.ViewModel.FossilExpandPanel_ExpandedChanged();
                        };
                        ((global::GSCFieldApp.Themes.ExpandPanel)target).ExpandedChanged += obj131ExpandedChanged;
                        this.bindingsTracking.RegisterTwoWayListener_131(this.obj131);
                        break;
                    case 132: // Views\FieldNotesPage.xaml line 745
                        this.obj132 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_132(this.obj132);
                        break;
                    case 135: // Views\FieldNotesPage.xaml line 754
                        this.obj135 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.obj135SizeChanged = (global::System.Object p0, global::Windows.UI.Xaml.SizeChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.textBlock_FieldFossil_SizeChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBlock)target).SizeChanged += obj135SizeChanged;
                        this.bindingsTracking.RegisterTwoWayListener_135(this.obj135);
                        break;
                    case 136: // Views\FieldNotesPage.xaml line 751
                        this.obj136 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_136(this.obj136);
                        break;
                    case 137: // Views\FieldNotesPage.xaml line 766
                        this.obj137 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj137Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.FossilAddIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj137Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_137(this.obj137);
                        break;
                    case 138: // Views\FieldNotesPage.xaml line 767
                        this.obj138 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj138Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.FossilEditIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj138Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_138(this.obj138);
                        break;
                    case 139: // Views\FieldNotesPage.xaml line 768
                        this.obj139 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj139Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.DeleteIcon_TappedAsync(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj139Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_139(this.obj139);
                        break;
                    case 140: // Views\FieldNotesPage.xaml line 774
                        this.obj140 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj140ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.Report_ItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj140ItemClick;
                        this.obj140SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportDetail_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).SelectionChanged += obj140SelectionChanged;
                        this.obj140DoubleTapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportFossilList_DoubleTapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).DoubleTapped += obj140DoubleTapped;
                        this.bindingsTracking.RegisterTwoWayListener_140(this.obj140);
                        break;
                    case 141: // Views\FieldNotesPage.xaml line 682
                        this.obj141 = (global::GSCFieldApp.Themes.ExpandPanel)target;
                        this.obj141ExpandedChanged = () =>
                        {
                            this.dataRoot.ViewModel.StructureExpandPanel_ExpandedChanged();
                        };
                        ((global::GSCFieldApp.Themes.ExpandPanel)target).ExpandedChanged += obj141ExpandedChanged;
                        this.bindingsTracking.RegisterTwoWayListener_141(this.obj141);
                        break;
                    case 142: // Views\FieldNotesPage.xaml line 689
                        this.obj142 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_142(this.obj142);
                        break;
                    case 145: // Views\FieldNotesPage.xaml line 698
                        this.obj145 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.obj145SizeChanged = (global::System.Object p0, global::Windows.UI.Xaml.SizeChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.textBlock_FieldStructure_SizeChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBlock)target).SizeChanged += obj145SizeChanged;
                        this.bindingsTracking.RegisterTwoWayListener_145(this.obj145);
                        break;
                    case 146: // Views\FieldNotesPage.xaml line 695
                        this.obj146 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_146(this.obj146);
                        break;
                    case 147: // Views\FieldNotesPage.xaml line 710
                        this.obj147 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj147Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.StructureAddIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj147Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_147(this.obj147);
                        break;
                    case 148: // Views\FieldNotesPage.xaml line 711
                        this.obj148 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj148Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.StructureEditIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj148Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_148(this.obj148);
                        break;
                    case 149: // Views\FieldNotesPage.xaml line 712
                        this.obj149 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj149Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.DeleteIcon_TappedAsync(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj149Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_149(this.obj149);
                        break;
                    case 150: // Views\FieldNotesPage.xaml line 718
                        this.obj150 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj150ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.Report_ItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj150ItemClick;
                        this.obj150SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportDetail_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).SelectionChanged += obj150SelectionChanged;
                        this.obj150DoubleTapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportStructureList_DoubleTapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).DoubleTapped += obj150DoubleTapped;
                        this.bindingsTracking.RegisterTwoWayListener_150(this.obj150);
                        break;
                    case 151: // Views\FieldNotesPage.xaml line 625
                        this.obj151 = (global::GSCFieldApp.Themes.ExpandPanel)target;
                        this.obj151ExpandedChanged = () =>
                        {
                            this.dataRoot.ViewModel.SampleExpandPanel_ExpandedChanged();
                        };
                        ((global::GSCFieldApp.Themes.ExpandPanel)target).ExpandedChanged += obj151ExpandedChanged;
                        this.bindingsTracking.RegisterTwoWayListener_151(this.obj151);
                        break;
                    case 152: // Views\FieldNotesPage.xaml line 632
                        this.obj152 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_152(this.obj152);
                        break;
                    case 155: // Views\FieldNotesPage.xaml line 641
                        this.obj155 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.obj155SizeChanged = (global::System.Object p0, global::Windows.UI.Xaml.SizeChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.textBlock_FieldSample_SizeChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBlock)target).SizeChanged += obj155SizeChanged;
                        this.bindingsTracking.RegisterTwoWayListener_155(this.obj155);
                        break;
                    case 156: // Views\FieldNotesPage.xaml line 638
                        this.obj156 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_156(this.obj156);
                        break;
                    case 157: // Views\FieldNotesPage.xaml line 653
                        this.obj157 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj157Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.SampleAddIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj157Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_157(this.obj157);
                        break;
                    case 158: // Views\FieldNotesPage.xaml line 654
                        this.obj158 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj158Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.SampleEditIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj158Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_158(this.obj158);
                        break;
                    case 159: // Views\FieldNotesPage.xaml line 655
                        this.obj159 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj159Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.DeleteIcon_TappedAsync(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj159Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_159(this.obj159);
                        break;
                    case 160: // Views\FieldNotesPage.xaml line 661
                        this.obj160 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj160ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.Report_ItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj160ItemClick;
                        this.obj160SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportDetail_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).SelectionChanged += obj160SelectionChanged;
                        this.obj160DoubleTapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportSampleList_DoubleTapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).DoubleTapped += obj160DoubleTapped;
                        this.bindingsTracking.RegisterTwoWayListener_160(this.obj160);
                        break;
                    case 161: // Views\FieldNotesPage.xaml line 572
                        this.obj161 = (global::GSCFieldApp.Themes.ExpandPanel)target;
                        this.obj161ExpandedChanged = () =>
                        {
                            this.dataRoot.ViewModel.EarthMatExpandPanel_ExpandedChanged();
                        };
                        ((global::GSCFieldApp.Themes.ExpandPanel)target).ExpandedChanged += obj161ExpandedChanged;
                        this.bindingsTracking.RegisterTwoWayListener_161(this.obj161);
                        break;
                    case 162: // Views\FieldNotesPage.xaml line 578
                        this.obj162 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_162(this.obj162);
                        break;
                    case 165: // Views\FieldNotesPage.xaml line 589
                        this.obj165 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.bindingsTracking.RegisterTwoWayListener_165(this.obj165);
                        break;
                    case 166: // Views\FieldNotesPage.xaml line 586
                        this.obj166 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_166(this.obj166);
                        break;
                    case 167: // Views\FieldNotesPage.xaml line 600
                        this.obj167 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj167Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.EarthMatAddIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj167Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_167(this.obj167);
                        break;
                    case 168: // Views\FieldNotesPage.xaml line 601
                        this.obj168 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj168Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.EarthMatEditIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj168Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_168(this.obj168);
                        break;
                    case 169: // Views\FieldNotesPage.xaml line 602
                        this.obj169 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj169Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.DeleteIcon_TappedAsync(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj169Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_169(this.obj169);
                        break;
                    case 170: // Views\FieldNotesPage.xaml line 607
                        this.obj170 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj170ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.Report_ItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj170ItemClick;
                        this.obj170SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportDetail_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).SelectionChanged += obj170SelectionChanged;
                        this.obj170DoubleTapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportEarthmatList_DoubleTapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).DoubleTapped += obj170DoubleTapped;
                        this.bindingsTracking.RegisterTwoWayListener_170(this.obj170);
                        break;
                    case 171: // Views\FieldNotesPage.xaml line 520
                        this.obj171 = (global::GSCFieldApp.Themes.ExpandPanel)target;
                        this.bindingsTracking.RegisterTwoWayListener_171(this.obj171);
                        break;
                    case 172: // Views\FieldNotesPage.xaml line 522
                        this.obj172 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_172(this.obj172);
                        break;
                    case 174: // Views\FieldNotesPage.xaml line 532
                        this.obj174 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        this.bindingsTracking.RegisterTwoWayListener_174(this.obj174);
                        break;
                    case 175: // Views\FieldNotesPage.xaml line 528
                        this.obj175 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        this.bindingsTracking.RegisterTwoWayListener_175(this.obj175);
                        break;
                    case 176: // Views\FieldNotesPage.xaml line 542
                        this.obj176 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj176Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.StationEditIcon_Tapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj176Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_176(this.obj176);
                        break;
                    case 177: // Views\FieldNotesPage.xaml line 545
                        this.obj177 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        this.obj177Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.DeleteIcon_TappedAsync(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.SymbolIcon)target).Tapped += obj177Tapped;
                        this.bindingsTracking.RegisterTwoWayListener_177(this.obj177);
                        break;
                    case 178: // Views\FieldNotesPage.xaml line 553
                        this.obj178 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj178ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.Report_ItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj178ItemClick;
                        this.obj178SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportDetail_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).SelectionChanged += obj178SelectionChanged;
                        this.obj178DoubleTapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportStationList_DoubleTapped(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).DoubleTapped += obj178DoubleTapped;
                        this.bindingsTracking.RegisterTwoWayListener_178(this.obj178);
                        break;
                    case 180: // Views\FieldNotesPage.xaml line 472
                        this.obj180 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj180SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ReportSummaryDate_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).SelectionChanged += obj180SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_180(this.obj180);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // IReportPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Views.ReportPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Views.ReportPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::GSCFieldApp.ViewModels.FieldNotesViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatPanelVisibility(obj.EarthmatPanelVisibility, phase);
                        this.Update_ViewModel_SamplePanelVisibility(obj.SamplePanelVisibility, phase);
                        this.Update_ViewModel_StructurePanelVisibility(obj.StructurePanelVisibility, phase);
                        this.Update_ViewModel_FossilPanelVisibility(obj.FossilPanelVisibility, phase);
                        this.Update_ViewModel_PFlowPanelVisibility(obj.PFlowPanelVisibility, phase);
                        this.Update_ViewModel_MineralPanelVisibility(obj.MineralPanelVisibility, phase);
                        this.Update_ViewModel_MineralAltPanelVisibility(obj.MineralAltPanelVisibility, phase);
                        this.Update_ViewModel_PhotoPanelVisibility(obj.PhotoPanelVisibility, phase);
                        this.Update_ViewModel_LocationHeaderExpansion(obj.LocationHeaderExpansion, phase);
                        this.Update_ViewModel_LocationColor(obj.LocationColor, phase);
                        this.Update_ViewModel_StationIconColorOpacity(obj.StationIconColorOpacity, phase);
                        this.Update_ViewModel_StationIconOpacity(obj.StationIconOpacity, phase);
                        this.Update_ViewModel_ReportDocumentIndex(obj.ReportDocumentIndex, phase);
                        this.Update_ViewModel_ReportDetailedLocation(obj.ReportDetailedLocation, phase);
                        this.Update_ViewModel_DocumentHeaderExpand(obj.DocumentHeaderExpand, phase);
                        this.Update_ViewModel_DocumentColor(obj.DocumentColor, phase);
                        this.Update_ViewModel_HeaderDocument(obj.HeaderDocument, phase);
                        this.Update_ViewModel_DocumentIconColorOpacity(obj.DocumentIconColorOpacity, phase);
                        this.Update_ViewModel_DocumentAddIconColor(obj.DocumentAddIconColor, phase);
                        this.Update_ViewModel_DocumentAddIconOpacity(obj.DocumentAddIconOpacity, phase);
                        this.Update_ViewModel_DocumentIconOpacity(obj.DocumentIconOpacity, phase);
                        this.Update_ViewModel_ReportDetailedDocument(obj.ReportDetailedDocument, phase);
                        this.Update_ViewModel_MineralAltHeaderExpansion(obj.MineralAltHeaderExpansion, phase);
                        this.Update_ViewModel_MineralAltColor(obj.MineralAltColor, phase);
                        this.Update_ViewModel_MineralAltIconColorOpacity(obj.MineralAltIconColorOpacity, phase);
                        this.Update_ViewModel_MineralAltAddIconColor(obj.MineralAltAddIconColor, phase);
                        this.Update_ViewModel_MineralAltAddIconOpacity(obj.MineralAltAddIconOpacity, phase);
                        this.Update_ViewModel_MineralAltIconOpacity(obj.MineralAltIconOpacity, phase);
                        this.Update_ViewModel_ReportMineralizationAlterationIndex(obj.ReportMineralizationAlterationIndex, phase);
                        this.Update_ViewModel_ReportDetailedMineralAlt(obj.ReportDetailedMineralAlt, phase);
                        this.Update_ViewModel_MineralHeaderExpansion(obj.MineralHeaderExpansion, phase);
                        this.Update_ViewModel_MineralColor(obj.MineralColor, phase);
                        this.Update_ViewModel_MineralIconColorOpacity(obj.MineralIconColorOpacity, phase);
                        this.Update_ViewModel_MineralAddIconColor(obj.MineralAddIconColor, phase);
                        this.Update_ViewModel_MineralAddIconOpacity(obj.MineralAddIconOpacity, phase);
                        this.Update_ViewModel_MineralIconOpacity(obj.MineralIconOpacity, phase);
                        this.Update_ViewModel_ReportMineralsIndex(obj.ReportMineralsIndex, phase);
                        this.Update_ViewModel_ReportDetailedMineral(obj.ReportDetailedMineral, phase);
                        this.Update_ViewModel_PflowHeaderExpansion(obj.PflowHeaderExpansion, phase);
                        this.Update_ViewModel_PaleoflowColor(obj.PaleoflowColor, phase);
                        this.Update_ViewModel_PflowIconColorOpacity(obj.PflowIconColorOpacity, phase);
                        this.Update_ViewModel_PaleoflowAddIconColor(obj.PaleoflowAddIconColor, phase);
                        this.Update_ViewModel_PflowAddIconOpacity(obj.PflowAddIconOpacity, phase);
                        this.Update_ViewModel_PflowIconOpacity(obj.PflowIconOpacity, phase);
                        this.Update_ViewModel_ReportDetailedPflow(obj.ReportDetailedPflow, phase);
                        this.Update_ViewModel_ReportPflowIndex(obj.ReportPflowIndex, phase);
                        this.Update_ViewModel_FossilHeaderExpansion(obj.FossilHeaderExpansion, phase);
                        this.Update_ViewModel_FossilColor(obj.FossilColor, phase);
                        this.Update_ViewModel_FossilIconColorOpacity(obj.FossilIconColorOpacity, phase);
                        this.Update_ViewModel_FossilAddIconColor(obj.FossilAddIconColor, phase);
                        this.Update_ViewModel_FossilAddIconOpacity(obj.FossilAddIconOpacity, phase);
                        this.Update_ViewModel_FossilIconOpacity(obj.FossilIconOpacity, phase);
                        this.Update_ViewModel_ReportFossilIndex(obj.ReportFossilIndex, phase);
                        this.Update_ViewModel_ReportDetailedFossil(obj.ReportDetailedFossil, phase);
                        this.Update_ViewModel_StructureHeaderExpansion(obj.StructureHeaderExpansion, phase);
                        this.Update_ViewModel_StructColor(obj.StructColor, phase);
                        this.Update_ViewModel_StructureIconColorOpacity(obj.StructureIconColorOpacity, phase);
                        this.Update_ViewModel_StructAddIconColor(obj.StructAddIconColor, phase);
                        this.Update_ViewModel_StructureAddIconOpacity(obj.StructureAddIconOpacity, phase);
                        this.Update_ViewModel_StructureIconOpacity(obj.StructureIconOpacity, phase);
                        this.Update_ViewModel_ReportDetailedStructure(obj.ReportDetailedStructure, phase);
                        this.Update_ViewModel_ReportStructureIndex(obj.ReportStructureIndex, phase);
                        this.Update_ViewModel_SampleHeaderExpansion(obj.SampleHeaderExpansion, phase);
                        this.Update_ViewModel_SampleColor(obj.SampleColor, phase);
                        this.Update_ViewModel_SampleIconColorOpacity(obj.SampleIconColorOpacity, phase);
                        this.Update_ViewModel_SampleAddIconColor(obj.SampleAddIconColor, phase);
                        this.Update_ViewModel_SampleAddIconOpacity(obj.SampleAddIconOpacity, phase);
                        this.Update_ViewModel_SampleIconOpacity(obj.SampleIconOpacity, phase);
                        this.Update_ViewModel_ReportDetailedSample(obj.ReportDetailedSample, phase);
                        this.Update_ViewModel_ReportSampleIndex(obj.ReportSampleIndex, phase);
                        this.Update_ViewModel_EarthmatHeaderExpansion(obj.EarthmatHeaderExpansion, phase);
                        this.Update_ViewModel_EarthmatColor(obj.EarthmatColor, phase);
                        this.Update_ViewModel_EarthmatIconColorOpacity(obj.EarthmatIconColorOpacity, phase);
                        this.Update_ViewModel_EarthmatAddIconColor(obj.EarthmatAddIconColor, phase);
                        this.Update_ViewModel_EarthmatAddIconOpacity(obj.EarthmatAddIconOpacity, phase);
                        this.Update_ViewModel_EarthmatIconOpacity(obj.EarthmatIconOpacity, phase);
                        this.Update_ViewModel_ReportDetailedEarthmat(obj.ReportDetailedEarthmat, phase);
                        this.Update_ViewModel_ReportEarhtmatIndex(obj.ReportEarhtmatIndex, phase);
                        this.Update_ViewModel_StationHeaderExpansion(obj.StationHeaderExpansion, phase);
                        this.Update_ViewModel_StationColor(obj.StationColor, phase);
                        this.Update_ViewModel_ReportStationListIndex(obj.ReportStationListIndex, phase);
                        this.Update_ViewModel_ReportDetailedStation(obj.ReportDetailedStation, phase);
                        this.Update_ViewModel_ReportDateItems(obj.ReportDateItems, phase);
                        this.Update_ViewModel_ReportListViewDateIndex(obj.ReportListViewDateIndex, phase);
                    }
                }
            }
            private void Update_ViewModel_EarthmatPanelVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 569
                    if (!isobj74VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj74, obj);
                    }
                }
            }
            private void Update_ViewModel_SamplePanelVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 621
                    if (!isobj75VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj75, obj);
                    }
                }
            }
            private void Update_ViewModel_StructurePanelVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 678
                    if (!isobj76VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj76, obj);
                    }
                }
            }
            private void Update_ViewModel_FossilPanelVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 734
                    if (!isobj77VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj77, obj);
                    }
                }
            }
            private void Update_ViewModel_PFlowPanelVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 790
                    if (!isobj78VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj78, obj);
                    }
                }
            }
            private void Update_ViewModel_MineralPanelVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 846
                    if (!isobj79VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj79, obj);
                    }
                }
            }
            private void Update_ViewModel_MineralAltPanelVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 902
                    if (!isobj80VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj80, obj);
                    }
                }
            }
            private void Update_ViewModel_PhotoPanelVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 967
                    if (!isobj81VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj81, obj);
                    }
                }
            }
            private void Update_ViewModel_LocationHeaderExpansion(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 1026
                    if (!isobj83IsExpandedDisabled)
                    {
                        XamlBindingSetters.Set_GSCFieldApp_Themes_ExpandPanel_IsExpanded(this.obj83, obj);
                    }
                }
            }
            private void Update_ViewModel_LocationColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 1030
                    if (!isobj84ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj84, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 1043
                    if (!isobj87ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj87, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 1039
                    if (!isobj88ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj88, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 1055
                    if (!isobj89ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj89, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_StationIconColorOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 1039
                    if (!isobj88OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Brush_Opacity(this.obj88, obj);
                    }
                    // Views\FieldNotesPage.xaml line 528
                    if (!isobj175OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Brush_Opacity(this.obj175, obj);
                    }
                }
            }
            private void Update_ViewModel_StationIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 1055
                    if (!isobj89OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj89, obj);
                    }
                    // Views\FieldNotesPage.xaml line 542
                    if (!isobj176OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj176, obj);
                    }
                    // Views\FieldNotesPage.xaml line 545
                    if (!isobj177OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj177, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportDocumentIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 1064
                    if (!isobj90SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj90, obj);
                    }
                    // Views\FieldNotesPage.xaml line 1006
                    if (!isobj100SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj100, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportDetailedLocation(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_ReportDetailedLocation(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 1064
                    if (!isobj90ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj90, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DocumentHeaderExpand(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 971
                    if (!isobj91IsExpandedDisabled)
                    {
                        XamlBindingSetters.Set_GSCFieldApp_Themes_ExpandPanel_IsExpanded(this.obj91, obj);
                    }
                }
            }
            private void Update_ViewModel_DocumentColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 978
                    if (!isobj92ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj92, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 987
                    if (!isobj95ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj95, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 984
                    if (!isobj96ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj96, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 999
                    if (!isobj98ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj98, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 1000
                    if (!isobj99ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj99, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_HeaderDocument(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 987
                    if (!isobj95TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj95, obj, null);
                    }
                }
            }
            private void Update_ViewModel_DocumentIconColorOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 984
                    if (!isobj96OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Brush_Opacity(this.obj96, obj);
                    }
                }
            }
            private void Update_ViewModel_DocumentAddIconColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 998
                    if (!isobj97ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj97, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_DocumentAddIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 998
                    if (!isobj97OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj97, obj);
                    }
                }
            }
            private void Update_ViewModel_DocumentIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 999
                    if (!isobj98OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj98, obj);
                    }
                    // Views\FieldNotesPage.xaml line 1000
                    if (!isobj99OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj99, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportDetailedDocument(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_ReportDetailedDocument(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 1006
                    if (!isobj100ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj100, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MineralAltHeaderExpansion(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 906
                    if (!isobj101IsExpandedDisabled)
                    {
                        XamlBindingSetters.Set_GSCFieldApp_Themes_ExpandPanel_IsExpanded(this.obj101, obj);
                    }
                }
            }
            private void Update_ViewModel_MineralAltColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 913
                    if (!isobj102ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj102, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 923
                    if (!isobj105ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj105, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 919
                    if (!isobj106ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj106, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 938
                    if (!isobj108ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj108, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 942
                    if (!isobj109ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj109, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_MineralAltIconColorOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 919
                    if (!isobj106OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Brush_Opacity(this.obj106, obj);
                    }
                }
            }
            private void Update_ViewModel_MineralAltAddIconColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 935
                    if (!isobj107ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj107, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_MineralAltAddIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 935
                    if (!isobj107OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj107, obj);
                    }
                }
            }
            private void Update_ViewModel_MineralAltIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 938
                    if (!isobj108OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj108, obj);
                    }
                    // Views\FieldNotesPage.xaml line 942
                    if (!isobj109OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj109, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportMineralizationAlterationIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 951
                    if (!isobj110SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj110, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportDetailedMineralAlt(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_ReportDetailedMineralAlt(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 951
                    if (!isobj110ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj110, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MineralHeaderExpansion(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 850
                    if (!isobj111IsExpandedDisabled)
                    {
                        XamlBindingSetters.Set_GSCFieldApp_Themes_ExpandPanel_IsExpanded(this.obj111, obj);
                    }
                }
            }
            private void Update_ViewModel_MineralColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 857
                    if (!isobj112ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj112, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 866
                    if (!isobj115ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj115, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 863
                    if (!isobj116ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj116, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 879
                    if (!isobj118ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj118, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 880
                    if (!isobj119ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj119, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_MineralIconColorOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 863
                    if (!isobj116OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Brush_Opacity(this.obj116, obj);
                    }
                }
            }
            private void Update_ViewModel_MineralAddIconColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 878
                    if (!isobj117ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj117, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_MineralAddIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 878
                    if (!isobj117OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj117, obj);
                    }
                }
            }
            private void Update_ViewModel_MineralIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 879
                    if (!isobj118OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj118, obj);
                    }
                    // Views\FieldNotesPage.xaml line 880
                    if (!isobj119OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj119, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportMineralsIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 886
                    if (!isobj120SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj120, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportDetailedMineral(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_ReportDetailedMineral(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 886
                    if (!isobj120ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj120, obj, null);
                    }
                }
            }
            private void Update_ViewModel_PflowHeaderExpansion(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 794
                    if (!isobj121IsExpandedDisabled)
                    {
                        XamlBindingSetters.Set_GSCFieldApp_Themes_ExpandPanel_IsExpanded(this.obj121, obj);
                    }
                }
            }
            private void Update_ViewModel_PaleoflowColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 801
                    if (!isobj122ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj122, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 810
                    if (!isobj125ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj125, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 807
                    if (!isobj126ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj126, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 823
                    if (!isobj128ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj128, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 824
                    if (!isobj129ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj129, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_PflowIconColorOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 807
                    if (!isobj126OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Brush_Opacity(this.obj126, obj);
                    }
                }
            }
            private void Update_ViewModel_PaleoflowAddIconColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 822
                    if (!isobj127ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj127, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_PflowAddIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 822
                    if (!isobj127OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj127, obj);
                    }
                }
            }
            private void Update_ViewModel_PflowIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 823
                    if (!isobj128OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj128, obj);
                    }
                    // Views\FieldNotesPage.xaml line 824
                    if (!isobj129OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj129, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportDetailedPflow(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_ReportDetailedPflow(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 830
                    if (!isobj130ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj130, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ReportPflowIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 830
                    if (!isobj130SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj130, obj);
                    }
                }
            }
            private void Update_ViewModel_FossilHeaderExpansion(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 738
                    if (!isobj131IsExpandedDisabled)
                    {
                        XamlBindingSetters.Set_GSCFieldApp_Themes_ExpandPanel_IsExpanded(this.obj131, obj);
                    }
                }
            }
            private void Update_ViewModel_FossilColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 745
                    if (!isobj132ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj132, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 754
                    if (!isobj135ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj135, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 751
                    if (!isobj136ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj136, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 767
                    if (!isobj138ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj138, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 768
                    if (!isobj139ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj139, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_FossilIconColorOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 751
                    if (!isobj136OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Brush_Opacity(this.obj136, obj);
                    }
                }
            }
            private void Update_ViewModel_FossilAddIconColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 766
                    if (!isobj137ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj137, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_FossilAddIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 766
                    if (!isobj137OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj137, obj);
                    }
                }
            }
            private void Update_ViewModel_FossilIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 767
                    if (!isobj138OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj138, obj);
                    }
                    // Views\FieldNotesPage.xaml line 768
                    if (!isobj139OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj139, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportFossilIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 774
                    if (!isobj140SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj140, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportDetailedFossil(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_ReportDetailedFossil(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 774
                    if (!isobj140ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj140, obj, null);
                    }
                }
            }
            private void Update_ViewModel_StructureHeaderExpansion(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 682
                    if (!isobj141IsExpandedDisabled)
                    {
                        XamlBindingSetters.Set_GSCFieldApp_Themes_ExpandPanel_IsExpanded(this.obj141, obj);
                    }
                }
            }
            private void Update_ViewModel_StructColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 689
                    if (!isobj142ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj142, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 698
                    if (!isobj145ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj145, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 695
                    if (!isobj146ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj146, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 711
                    if (!isobj148ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj148, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 712
                    if (!isobj149ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj149, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_StructureIconColorOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 695
                    if (!isobj146OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Brush_Opacity(this.obj146, obj);
                    }
                }
            }
            private void Update_ViewModel_StructAddIconColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 710
                    if (!isobj147ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj147, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_StructureAddIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 710
                    if (!isobj147OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj147, obj);
                    }
                }
            }
            private void Update_ViewModel_StructureIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 711
                    if (!isobj148OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj148, obj);
                    }
                    // Views\FieldNotesPage.xaml line 712
                    if (!isobj149OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj149, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportDetailedStructure(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_ReportDetailedStructure(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 718
                    if (!isobj150ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj150, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ReportStructureIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 718
                    if (!isobj150SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj150, obj);
                    }
                }
            }
            private void Update_ViewModel_SampleHeaderExpansion(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 625
                    if (!isobj151IsExpandedDisabled)
                    {
                        XamlBindingSetters.Set_GSCFieldApp_Themes_ExpandPanel_IsExpanded(this.obj151, obj);
                    }
                }
            }
            private void Update_ViewModel_SampleColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 632
                    if (!isobj152ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj152, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 641
                    if (!isobj155ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj155, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 638
                    if (!isobj156ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj156, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 654
                    if (!isobj158ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj158, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 655
                    if (!isobj159ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj159, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_SampleIconColorOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 638
                    if (!isobj156OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Brush_Opacity(this.obj156, obj);
                    }
                }
            }
            private void Update_ViewModel_SampleAddIconColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 653
                    if (!isobj157ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj157, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_SampleAddIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 653
                    if (!isobj157OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj157, obj);
                    }
                }
            }
            private void Update_ViewModel_SampleIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 654
                    if (!isobj158OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj158, obj);
                    }
                    // Views\FieldNotesPage.xaml line 655
                    if (!isobj159OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj159, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportDetailedSample(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_ReportDetailedSample(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 661
                    if (!isobj160ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj160, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ReportSampleIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 661
                    if (!isobj160SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj160, obj);
                    }
                }
            }
            private void Update_ViewModel_EarthmatHeaderExpansion(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 572
                    if (!isobj161IsExpandedDisabled)
                    {
                        XamlBindingSetters.Set_GSCFieldApp_Themes_ExpandPanel_IsExpanded(this.obj161, obj);
                    }
                }
            }
            private void Update_ViewModel_EarthmatColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 578
                    if (!isobj162ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj162, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 589
                    if (!isobj165ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj165, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 586
                    if (!isobj166ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj166, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 601
                    if (!isobj168ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj168, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 602
                    if (!isobj169ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj169, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatIconColorOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 586
                    if (!isobj166OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_Brush_Opacity(this.obj166, obj);
                    }
                }
            }
            private void Update_ViewModel_EarthmatAddIconColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 600
                    if (!isobj167ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj167, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatAddIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 600
                    if (!isobj167OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj167, obj);
                    }
                }
            }
            private void Update_ViewModel_EarthmatIconOpacity(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 601
                    if (!isobj168OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj168, obj);
                    }
                    // Views\FieldNotesPage.xaml line 602
                    if (!isobj169OpacityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Opacity(this.obj169, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportDetailedEarthmat(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_ReportDetailedEarthmat(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 607
                    if (!isobj170ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj170, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ReportEarhtmatIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 607
                    if (!isobj170SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj170, obj);
                    }
                }
            }
            private void Update_ViewModel_StationHeaderExpansion(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 520
                    if (!isobj171IsExpandedDisabled)
                    {
                        XamlBindingSetters.Set_GSCFieldApp_Themes_ExpandPanel_IsExpanded(this.obj171, obj);
                    }
                }
            }
            private void Update_ViewModel_StationColor(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 522
                    if (!isobj172ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj172, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 532
                    if (!isobj174ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj174, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 528
                    if (!isobj175ColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj175, (global::Windows.UI.Color)this.LookupConverter("SolidColorBrushConverter").Convert(obj, typeof(global::Windows.UI.Color), null, null));
                    }
                    // Views\FieldNotesPage.xaml line 542
                    if (!isobj176ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj176, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\FieldNotesPage.xaml line 545
                    if (!isobj177ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj177, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("MediaBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_ReportStationListIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 553
                    if (!isobj178SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj178, obj);
                    }
                }
            }
            private void Update_ViewModel_ReportDetailedStation(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_ReportDetailedStation(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 553
                    if (!isobj178ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj178, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ReportDateItems(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_ReportDateItems(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 472
                    if (!isobj180ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj180, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ReportListViewDateIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\FieldNotesPage.xaml line 472
                    if (!isobj180SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj180, obj);
                    }
                }
            }
            private void UpdateTwoWay_74_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EarthmatPanelVisibility = this.obj74.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_75_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SamplePanelVisibility = this.obj75.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_76_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StructurePanelVisibility = this.obj76.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_77_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.FossilPanelVisibility = this.obj77.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_78_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PFlowPanelVisibility = this.obj78.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_79_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralPanelVisibility = this.obj79.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_80_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAltPanelVisibility = this.obj80.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_81_Visibility()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PhotoPanelVisibility = this.obj81.Visibility;
                        }
                    }
                }
            }
            private void UpdateTwoWay_83_IsExpanded()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.LocationHeaderExpansion = this.obj83.IsExpanded;
                        }
                    }
                }
            }
            private void UpdateTwoWay_84_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.LocationColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj84.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_87_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.LocationColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj87.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_88_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.LocationColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj88.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_88_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StationIconColorOpacity = this.obj88.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_89_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.LocationColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj89.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_89_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StationIconOpacity = this.obj89.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_90_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ReportDocumentIndex = this.obj90.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_91_IsExpanded()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.DocumentHeaderExpand = this.obj91.IsExpanded;
                        }
                    }
                }
            }
            private void UpdateTwoWay_92_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.DocumentColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj92.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_95_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.HeaderDocument = this.obj95.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_95_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.DocumentColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj95.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_96_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.DocumentColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj96.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_96_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.DocumentIconColorOpacity = this.obj96.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_97_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.DocumentAddIconColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj97.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_97_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.DocumentAddIconOpacity = this.obj97.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_98_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.DocumentColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj98.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_98_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.DocumentIconOpacity = this.obj98.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_99_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.DocumentColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj99.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_99_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.DocumentIconOpacity = this.obj99.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_100_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ReportDocumentIndex = this.obj100.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_101_IsExpanded()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAltHeaderExpansion = this.obj101.IsExpanded;
                        }
                    }
                }
            }
            private void UpdateTwoWay_102_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAltColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj102.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_105_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAltColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj105.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_106_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAltColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj106.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_106_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAltIconColorOpacity = this.obj106.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_107_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAltAddIconColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj107.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_107_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAltAddIconOpacity = this.obj107.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_108_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAltColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj108.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_108_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAltIconOpacity = this.obj108.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_109_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAltColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj109.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_109_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAltIconOpacity = this.obj109.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_110_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ReportMineralizationAlterationIndex = this.obj110.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_111_IsExpanded()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralHeaderExpansion = this.obj111.IsExpanded;
                        }
                    }
                }
            }
            private void UpdateTwoWay_112_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj112.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_115_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj115.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_116_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj116.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_116_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralIconColorOpacity = this.obj116.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_117_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAddIconColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj117.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_117_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralAddIconOpacity = this.obj117.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_118_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj118.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_118_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralIconOpacity = this.obj118.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_119_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj119.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_119_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MineralIconOpacity = this.obj119.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_120_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ReportMineralsIndex = this.obj120.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_121_IsExpanded()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PflowHeaderExpansion = this.obj121.IsExpanded;
                        }
                    }
                }
            }
            private void UpdateTwoWay_122_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PaleoflowColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj122.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_125_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PaleoflowColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj125.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_126_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PaleoflowColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj126.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_126_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PflowIconColorOpacity = this.obj126.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_127_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PaleoflowAddIconColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj127.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_127_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PflowAddIconOpacity = this.obj127.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_128_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PaleoflowColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj128.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_128_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PflowIconOpacity = this.obj128.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_129_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PaleoflowColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj129.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_129_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PflowIconOpacity = this.obj129.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_130_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ReportPflowIndex = this.obj130.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_131_IsExpanded()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.FossilHeaderExpansion = this.obj131.IsExpanded;
                        }
                    }
                }
            }
            private void UpdateTwoWay_132_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.FossilColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj132.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_135_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.FossilColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj135.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_136_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.FossilColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj136.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_136_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.FossilIconColorOpacity = this.obj136.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_137_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.FossilAddIconColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj137.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_137_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.FossilAddIconOpacity = this.obj137.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_138_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.FossilColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj138.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_138_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.FossilIconOpacity = this.obj138.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_139_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.FossilColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj139.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_139_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.FossilIconOpacity = this.obj139.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_140_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ReportFossilIndex = this.obj140.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_141_IsExpanded()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StructureHeaderExpansion = this.obj141.IsExpanded;
                        }
                    }
                }
            }
            private void UpdateTwoWay_142_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StructColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj142.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_145_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StructColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj145.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_146_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StructColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj146.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_146_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StructureIconColorOpacity = this.obj146.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_147_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StructAddIconColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj147.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_147_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StructureAddIconOpacity = this.obj147.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_148_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StructColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj148.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_148_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StructureIconOpacity = this.obj148.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_149_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StructColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj149.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_149_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StructureIconOpacity = this.obj149.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_150_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ReportStructureIndex = this.obj150.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_151_IsExpanded()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SampleHeaderExpansion = this.obj151.IsExpanded;
                        }
                    }
                }
            }
            private void UpdateTwoWay_152_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SampleColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj152.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_155_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SampleColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj155.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_156_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SampleColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj156.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_156_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SampleIconColorOpacity = this.obj156.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_157_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SampleAddIconColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj157.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_157_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SampleAddIconOpacity = this.obj157.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_158_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SampleColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj158.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_158_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SampleIconOpacity = this.obj158.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_159_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SampleColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj159.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_159_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SampleIconOpacity = this.obj159.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_160_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ReportSampleIndex = this.obj160.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_161_IsExpanded()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EarthmatHeaderExpansion = this.obj161.IsExpanded;
                        }
                    }
                }
            }
            private void UpdateTwoWay_162_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EarthmatColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj162.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_165_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EarthmatColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj165.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_166_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EarthmatColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj166.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_166_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EarthmatIconColorOpacity = this.obj166.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_167_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EarthmatAddIconColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj167.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_167_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EarthmatAddIconOpacity = this.obj167.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_168_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EarthmatColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj168.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_168_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EarthmatIconOpacity = this.obj168.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_169_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EarthmatColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj169.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_169_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EarthmatIconOpacity = this.obj169.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_170_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ReportEarhtmatIndex = this.obj170.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_171_IsExpanded()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StationHeaderExpansion = this.obj171.IsExpanded;
                        }
                    }
                }
            }
            private void UpdateTwoWay_172_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StationColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj172.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_174_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StationColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj174.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_175_Color()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StationColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("SolidColorBrushConverter").ConvertBack(this.obj175.Color, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_175_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StationIconColorOpacity = this.obj175.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_176_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StationColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj176.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_176_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StationIconOpacity = this.obj176.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_177_Foreground()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StationColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)this.LookupConverter("MediaBrushConverter").ConvertBack(this.obj177.Foreground, typeof(global::Windows.UI.Xaml.Media.SolidColorBrush), null, null);
                        }
                    }
                }
            }
            private void UpdateTwoWay_177_Opacity()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.StationIconOpacity = this.obj177.Opacity;
                        }
                    }
                }
            }
            private void UpdateTwoWay_178_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ReportStationListIndex = this.obj178.SelectedIndex;
                        }
                    }
                }
            }
            private void UpdateTwoWay_180_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ReportListViewDateIndex = this.obj180.SelectedIndex;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class ReportPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<ReportPage_obj1_Bindings> weakRefToBindingObj; 

                public ReportPage_obj1_BindingsTracking(ReportPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<ReportPage_obj1_Bindings>(obj);
                }

                public ReportPage_obj1_Bindings TryGetBindingObject()
                {
                    ReportPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_ReportDetailedLocation(null);
                    UpdateChildListeners_ViewModel_ReportDetailedDocument(null);
                    UpdateChildListeners_ViewModel_ReportDetailedMineralAlt(null);
                    UpdateChildListeners_ViewModel_ReportDetailedMineral(null);
                    UpdateChildListeners_ViewModel_ReportDetailedPflow(null);
                    UpdateChildListeners_ViewModel_ReportDetailedFossil(null);
                    UpdateChildListeners_ViewModel_ReportDetailedStructure(null);
                    UpdateChildListeners_ViewModel_ReportDetailedSample(null);
                    UpdateChildListeners_ViewModel_ReportDetailedEarthmat(null);
                    UpdateChildListeners_ViewModel_ReportDetailedStation(null);
                    UpdateChildListeners_ViewModel_ReportDateItems(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GSCFieldApp.ViewModels.FieldNotesViewModel obj = sender as global::GSCFieldApp.ViewModels.FieldNotesViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_EarthmatPanelVisibility(obj.EarthmatPanelVisibility, DATA_CHANGED);
                                bindings.Update_ViewModel_SamplePanelVisibility(obj.SamplePanelVisibility, DATA_CHANGED);
                                bindings.Update_ViewModel_StructurePanelVisibility(obj.StructurePanelVisibility, DATA_CHANGED);
                                bindings.Update_ViewModel_FossilPanelVisibility(obj.FossilPanelVisibility, DATA_CHANGED);
                                bindings.Update_ViewModel_PFlowPanelVisibility(obj.PFlowPanelVisibility, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralPanelVisibility(obj.MineralPanelVisibility, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralAltPanelVisibility(obj.MineralAltPanelVisibility, DATA_CHANGED);
                                bindings.Update_ViewModel_PhotoPanelVisibility(obj.PhotoPanelVisibility, DATA_CHANGED);
                                bindings.Update_ViewModel_LocationHeaderExpansion(obj.LocationHeaderExpansion, DATA_CHANGED);
                                bindings.Update_ViewModel_LocationColor(obj.LocationColor, DATA_CHANGED);
                                bindings.Update_ViewModel_StationIconColorOpacity(obj.StationIconColorOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_StationIconOpacity(obj.StationIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportDocumentIndex(obj.ReportDocumentIndex, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportDetailedLocation(obj.ReportDetailedLocation, DATA_CHANGED);
                                bindings.Update_ViewModel_DocumentHeaderExpand(obj.DocumentHeaderExpand, DATA_CHANGED);
                                bindings.Update_ViewModel_DocumentColor(obj.DocumentColor, DATA_CHANGED);
                                bindings.Update_ViewModel_HeaderDocument(obj.HeaderDocument, DATA_CHANGED);
                                bindings.Update_ViewModel_DocumentIconColorOpacity(obj.DocumentIconColorOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_DocumentAddIconColor(obj.DocumentAddIconColor, DATA_CHANGED);
                                bindings.Update_ViewModel_DocumentAddIconOpacity(obj.DocumentAddIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_DocumentIconOpacity(obj.DocumentIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportDetailedDocument(obj.ReportDetailedDocument, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralAltHeaderExpansion(obj.MineralAltHeaderExpansion, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralAltColor(obj.MineralAltColor, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralAltIconColorOpacity(obj.MineralAltIconColorOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralAltAddIconColor(obj.MineralAltAddIconColor, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralAltAddIconOpacity(obj.MineralAltAddIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralAltIconOpacity(obj.MineralAltIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportMineralizationAlterationIndex(obj.ReportMineralizationAlterationIndex, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportDetailedMineralAlt(obj.ReportDetailedMineralAlt, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralHeaderExpansion(obj.MineralHeaderExpansion, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralColor(obj.MineralColor, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralIconColorOpacity(obj.MineralIconColorOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralAddIconColor(obj.MineralAddIconColor, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralAddIconOpacity(obj.MineralAddIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_MineralIconOpacity(obj.MineralIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportMineralsIndex(obj.ReportMineralsIndex, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportDetailedMineral(obj.ReportDetailedMineral, DATA_CHANGED);
                                bindings.Update_ViewModel_PflowHeaderExpansion(obj.PflowHeaderExpansion, DATA_CHANGED);
                                bindings.Update_ViewModel_PaleoflowColor(obj.PaleoflowColor, DATA_CHANGED);
                                bindings.Update_ViewModel_PflowIconColorOpacity(obj.PflowIconColorOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_PaleoflowAddIconColor(obj.PaleoflowAddIconColor, DATA_CHANGED);
                                bindings.Update_ViewModel_PflowAddIconOpacity(obj.PflowAddIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_PflowIconOpacity(obj.PflowIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportDetailedPflow(obj.ReportDetailedPflow, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportPflowIndex(obj.ReportPflowIndex, DATA_CHANGED);
                                bindings.Update_ViewModel_FossilHeaderExpansion(obj.FossilHeaderExpansion, DATA_CHANGED);
                                bindings.Update_ViewModel_FossilColor(obj.FossilColor, DATA_CHANGED);
                                bindings.Update_ViewModel_FossilIconColorOpacity(obj.FossilIconColorOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_FossilAddIconColor(obj.FossilAddIconColor, DATA_CHANGED);
                                bindings.Update_ViewModel_FossilAddIconOpacity(obj.FossilAddIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_FossilIconOpacity(obj.FossilIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportFossilIndex(obj.ReportFossilIndex, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportDetailedFossil(obj.ReportDetailedFossil, DATA_CHANGED);
                                bindings.Update_ViewModel_StructureHeaderExpansion(obj.StructureHeaderExpansion, DATA_CHANGED);
                                bindings.Update_ViewModel_StructColor(obj.StructColor, DATA_CHANGED);
                                bindings.Update_ViewModel_StructureIconColorOpacity(obj.StructureIconColorOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_StructAddIconColor(obj.StructAddIconColor, DATA_CHANGED);
                                bindings.Update_ViewModel_StructureAddIconOpacity(obj.StructureAddIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_StructureIconOpacity(obj.StructureIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportDetailedStructure(obj.ReportDetailedStructure, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportStructureIndex(obj.ReportStructureIndex, DATA_CHANGED);
                                bindings.Update_ViewModel_SampleHeaderExpansion(obj.SampleHeaderExpansion, DATA_CHANGED);
                                bindings.Update_ViewModel_SampleColor(obj.SampleColor, DATA_CHANGED);
                                bindings.Update_ViewModel_SampleIconColorOpacity(obj.SampleIconColorOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_SampleAddIconColor(obj.SampleAddIconColor, DATA_CHANGED);
                                bindings.Update_ViewModel_SampleAddIconOpacity(obj.SampleAddIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_SampleIconOpacity(obj.SampleIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportDetailedSample(obj.ReportDetailedSample, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportSampleIndex(obj.ReportSampleIndex, DATA_CHANGED);
                                bindings.Update_ViewModel_EarthmatHeaderExpansion(obj.EarthmatHeaderExpansion, DATA_CHANGED);
                                bindings.Update_ViewModel_EarthmatColor(obj.EarthmatColor, DATA_CHANGED);
                                bindings.Update_ViewModel_EarthmatIconColorOpacity(obj.EarthmatIconColorOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_EarthmatAddIconColor(obj.EarthmatAddIconColor, DATA_CHANGED);
                                bindings.Update_ViewModel_EarthmatAddIconOpacity(obj.EarthmatAddIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_EarthmatIconOpacity(obj.EarthmatIconOpacity, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportDetailedEarthmat(obj.ReportDetailedEarthmat, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportEarhtmatIndex(obj.ReportEarhtmatIndex, DATA_CHANGED);
                                bindings.Update_ViewModel_StationHeaderExpansion(obj.StationHeaderExpansion, DATA_CHANGED);
                                bindings.Update_ViewModel_StationColor(obj.StationColor, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportStationListIndex(obj.ReportStationListIndex, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportDetailedStation(obj.ReportDetailedStation, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportDateItems(obj.ReportDateItems, DATA_CHANGED);
                                bindings.Update_ViewModel_ReportListViewDateIndex(obj.ReportListViewDateIndex, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "EarthmatPanelVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EarthmatPanelVisibility(obj.EarthmatPanelVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SamplePanelVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SamplePanelVisibility(obj.SamplePanelVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StructurePanelVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StructurePanelVisibility(obj.StructurePanelVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FossilPanelVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_FossilPanelVisibility(obj.FossilPanelVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PFlowPanelVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PFlowPanelVisibility(obj.PFlowPanelVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralPanelVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralPanelVisibility(obj.MineralPanelVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralAltPanelVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralAltPanelVisibility(obj.MineralAltPanelVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PhotoPanelVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PhotoPanelVisibility(obj.PhotoPanelVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LocationHeaderExpansion":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_LocationHeaderExpansion(obj.LocationHeaderExpansion, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LocationColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_LocationColor(obj.LocationColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StationIconColorOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StationIconColorOpacity(obj.StationIconColorOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StationIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StationIconOpacity(obj.StationIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportDocumentIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportDocumentIndex(obj.ReportDocumentIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportDetailedLocation":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportDetailedLocation(obj.ReportDetailedLocation, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DocumentHeaderExpand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_DocumentHeaderExpand(obj.DocumentHeaderExpand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DocumentColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_DocumentColor(obj.DocumentColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HeaderDocument":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_HeaderDocument(obj.HeaderDocument, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DocumentIconColorOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_DocumentIconColorOpacity(obj.DocumentIconColorOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DocumentAddIconColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_DocumentAddIconColor(obj.DocumentAddIconColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DocumentAddIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_DocumentAddIconOpacity(obj.DocumentAddIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DocumentIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_DocumentIconOpacity(obj.DocumentIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportDetailedDocument":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportDetailedDocument(obj.ReportDetailedDocument, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralAltHeaderExpansion":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralAltHeaderExpansion(obj.MineralAltHeaderExpansion, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralAltColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralAltColor(obj.MineralAltColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralAltIconColorOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralAltIconColorOpacity(obj.MineralAltIconColorOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralAltAddIconColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralAltAddIconColor(obj.MineralAltAddIconColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralAltAddIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralAltAddIconOpacity(obj.MineralAltAddIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralAltIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralAltIconOpacity(obj.MineralAltIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportMineralizationAlterationIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportMineralizationAlterationIndex(obj.ReportMineralizationAlterationIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportDetailedMineralAlt":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportDetailedMineralAlt(obj.ReportDetailedMineralAlt, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralHeaderExpansion":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralHeaderExpansion(obj.MineralHeaderExpansion, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralColor(obj.MineralColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralIconColorOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralIconColorOpacity(obj.MineralIconColorOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralAddIconColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralAddIconColor(obj.MineralAddIconColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralAddIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralAddIconOpacity(obj.MineralAddIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MineralIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MineralIconOpacity(obj.MineralIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportMineralsIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportMineralsIndex(obj.ReportMineralsIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportDetailedMineral":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportDetailedMineral(obj.ReportDetailedMineral, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PflowHeaderExpansion":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PflowHeaderExpansion(obj.PflowHeaderExpansion, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PaleoflowColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PaleoflowColor(obj.PaleoflowColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PflowIconColorOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PflowIconColorOpacity(obj.PflowIconColorOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PaleoflowAddIconColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PaleoflowAddIconColor(obj.PaleoflowAddIconColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PflowAddIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PflowAddIconOpacity(obj.PflowAddIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PflowIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PflowIconOpacity(obj.PflowIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportDetailedPflow":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportDetailedPflow(obj.ReportDetailedPflow, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportPflowIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportPflowIndex(obj.ReportPflowIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FossilHeaderExpansion":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_FossilHeaderExpansion(obj.FossilHeaderExpansion, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FossilColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_FossilColor(obj.FossilColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FossilIconColorOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_FossilIconColorOpacity(obj.FossilIconColorOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FossilAddIconColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_FossilAddIconColor(obj.FossilAddIconColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FossilAddIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_FossilAddIconOpacity(obj.FossilAddIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FossilIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_FossilIconOpacity(obj.FossilIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportFossilIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportFossilIndex(obj.ReportFossilIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportDetailedFossil":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportDetailedFossil(obj.ReportDetailedFossil, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StructureHeaderExpansion":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StructureHeaderExpansion(obj.StructureHeaderExpansion, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StructColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StructColor(obj.StructColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StructureIconColorOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StructureIconColorOpacity(obj.StructureIconColorOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StructAddIconColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StructAddIconColor(obj.StructAddIconColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StructureAddIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StructureAddIconOpacity(obj.StructureAddIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StructureIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StructureIconOpacity(obj.StructureIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportDetailedStructure":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportDetailedStructure(obj.ReportDetailedStructure, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportStructureIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportStructureIndex(obj.ReportStructureIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SampleHeaderExpansion":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SampleHeaderExpansion(obj.SampleHeaderExpansion, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SampleColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SampleColor(obj.SampleColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SampleIconColorOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SampleIconColorOpacity(obj.SampleIconColorOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SampleAddIconColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SampleAddIconColor(obj.SampleAddIconColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SampleAddIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SampleAddIconOpacity(obj.SampleAddIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SampleIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SampleIconOpacity(obj.SampleIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportDetailedSample":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportDetailedSample(obj.ReportDetailedSample, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportSampleIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportSampleIndex(obj.ReportSampleIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EarthmatHeaderExpansion":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EarthmatHeaderExpansion(obj.EarthmatHeaderExpansion, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EarthmatColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EarthmatColor(obj.EarthmatColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EarthmatIconColorOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EarthmatIconColorOpacity(obj.EarthmatIconColorOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EarthmatAddIconColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EarthmatAddIconColor(obj.EarthmatAddIconColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EarthmatAddIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EarthmatAddIconOpacity(obj.EarthmatAddIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EarthmatIconOpacity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EarthmatIconOpacity(obj.EarthmatIconOpacity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportDetailedEarthmat":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportDetailedEarthmat(obj.ReportDetailedEarthmat, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportEarhtmatIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportEarhtmatIndex(obj.ReportEarhtmatIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StationHeaderExpansion":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StationHeaderExpansion(obj.StationHeaderExpansion, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StationColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StationColor(obj.StationColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportStationListIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportStationListIndex(obj.ReportStationListIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportDetailedStation":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportDetailedStation(obj.ReportDetailedStation, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportDateItems":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportDateItems(obj.ReportDateItems, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReportListViewDateIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ReportListViewDateIndex(obj.ReportListViewDateIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GSCFieldApp.ViewModels.FieldNotesViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::GSCFieldApp.ViewModels.FieldNotesViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_ReportDetailedLocation(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_ReportDetailedLocation(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> cache_ViewModel_ReportDetailedLocation = null;
                public void UpdateChildListeners_ViewModel_ReportDetailedLocation(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj)
                {
                    if (obj != cache_ViewModel_ReportDetailedLocation)
                    {
                        if (cache_ViewModel_ReportDetailedLocation != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_ReportDetailedLocation).PropertyChanged -= PropertyChanged_ViewModel_ReportDetailedLocation;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_ReportDetailedLocation).CollectionChanged -= CollectionChanged_ViewModel_ReportDetailedLocation;
                            cache_ViewModel_ReportDetailedLocation = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_ReportDetailedLocation = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_ReportDetailedLocation;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_ReportDetailedLocation;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_ReportDetailedDocument(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_ReportDetailedDocument(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> cache_ViewModel_ReportDetailedDocument = null;
                public void UpdateChildListeners_ViewModel_ReportDetailedDocument(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj)
                {
                    if (obj != cache_ViewModel_ReportDetailedDocument)
                    {
                        if (cache_ViewModel_ReportDetailedDocument != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_ReportDetailedDocument).PropertyChanged -= PropertyChanged_ViewModel_ReportDetailedDocument;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_ReportDetailedDocument).CollectionChanged -= CollectionChanged_ViewModel_ReportDetailedDocument;
                            cache_ViewModel_ReportDetailedDocument = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_ReportDetailedDocument = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_ReportDetailedDocument;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_ReportDetailedDocument;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_ReportDetailedMineralAlt(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_ReportDetailedMineralAlt(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> cache_ViewModel_ReportDetailedMineralAlt = null;
                public void UpdateChildListeners_ViewModel_ReportDetailedMineralAlt(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj)
                {
                    if (obj != cache_ViewModel_ReportDetailedMineralAlt)
                    {
                        if (cache_ViewModel_ReportDetailedMineralAlt != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_ReportDetailedMineralAlt).PropertyChanged -= PropertyChanged_ViewModel_ReportDetailedMineralAlt;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_ReportDetailedMineralAlt).CollectionChanged -= CollectionChanged_ViewModel_ReportDetailedMineralAlt;
                            cache_ViewModel_ReportDetailedMineralAlt = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_ReportDetailedMineralAlt = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_ReportDetailedMineralAlt;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_ReportDetailedMineralAlt;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_ReportDetailedMineral(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_ReportDetailedMineral(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> cache_ViewModel_ReportDetailedMineral = null;
                public void UpdateChildListeners_ViewModel_ReportDetailedMineral(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj)
                {
                    if (obj != cache_ViewModel_ReportDetailedMineral)
                    {
                        if (cache_ViewModel_ReportDetailedMineral != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_ReportDetailedMineral).PropertyChanged -= PropertyChanged_ViewModel_ReportDetailedMineral;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_ReportDetailedMineral).CollectionChanged -= CollectionChanged_ViewModel_ReportDetailedMineral;
                            cache_ViewModel_ReportDetailedMineral = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_ReportDetailedMineral = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_ReportDetailedMineral;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_ReportDetailedMineral;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_ReportDetailedPflow(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_ReportDetailedPflow(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> cache_ViewModel_ReportDetailedPflow = null;
                public void UpdateChildListeners_ViewModel_ReportDetailedPflow(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj)
                {
                    if (obj != cache_ViewModel_ReportDetailedPflow)
                    {
                        if (cache_ViewModel_ReportDetailedPflow != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_ReportDetailedPflow).PropertyChanged -= PropertyChanged_ViewModel_ReportDetailedPflow;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_ReportDetailedPflow).CollectionChanged -= CollectionChanged_ViewModel_ReportDetailedPflow;
                            cache_ViewModel_ReportDetailedPflow = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_ReportDetailedPflow = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_ReportDetailedPflow;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_ReportDetailedPflow;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_ReportDetailedFossil(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_ReportDetailedFossil(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> cache_ViewModel_ReportDetailedFossil = null;
                public void UpdateChildListeners_ViewModel_ReportDetailedFossil(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj)
                {
                    if (obj != cache_ViewModel_ReportDetailedFossil)
                    {
                        if (cache_ViewModel_ReportDetailedFossil != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_ReportDetailedFossil).PropertyChanged -= PropertyChanged_ViewModel_ReportDetailedFossil;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_ReportDetailedFossil).CollectionChanged -= CollectionChanged_ViewModel_ReportDetailedFossil;
                            cache_ViewModel_ReportDetailedFossil = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_ReportDetailedFossil = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_ReportDetailedFossil;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_ReportDetailedFossil;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_ReportDetailedStructure(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_ReportDetailedStructure(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> cache_ViewModel_ReportDetailedStructure = null;
                public void UpdateChildListeners_ViewModel_ReportDetailedStructure(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj)
                {
                    if (obj != cache_ViewModel_ReportDetailedStructure)
                    {
                        if (cache_ViewModel_ReportDetailedStructure != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_ReportDetailedStructure).PropertyChanged -= PropertyChanged_ViewModel_ReportDetailedStructure;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_ReportDetailedStructure).CollectionChanged -= CollectionChanged_ViewModel_ReportDetailedStructure;
                            cache_ViewModel_ReportDetailedStructure = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_ReportDetailedStructure = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_ReportDetailedStructure;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_ReportDetailedStructure;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_ReportDetailedSample(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_ReportDetailedSample(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> cache_ViewModel_ReportDetailedSample = null;
                public void UpdateChildListeners_ViewModel_ReportDetailedSample(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj)
                {
                    if (obj != cache_ViewModel_ReportDetailedSample)
                    {
                        if (cache_ViewModel_ReportDetailedSample != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_ReportDetailedSample).PropertyChanged -= PropertyChanged_ViewModel_ReportDetailedSample;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_ReportDetailedSample).CollectionChanged -= CollectionChanged_ViewModel_ReportDetailedSample;
                            cache_ViewModel_ReportDetailedSample = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_ReportDetailedSample = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_ReportDetailedSample;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_ReportDetailedSample;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_ReportDetailedEarthmat(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_ReportDetailedEarthmat(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> cache_ViewModel_ReportDetailedEarthmat = null;
                public void UpdateChildListeners_ViewModel_ReportDetailedEarthmat(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj)
                {
                    if (obj != cache_ViewModel_ReportDetailedEarthmat)
                    {
                        if (cache_ViewModel_ReportDetailedEarthmat != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_ReportDetailedEarthmat).PropertyChanged -= PropertyChanged_ViewModel_ReportDetailedEarthmat;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_ReportDetailedEarthmat).CollectionChanged -= CollectionChanged_ViewModel_ReportDetailedEarthmat;
                            cache_ViewModel_ReportDetailedEarthmat = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_ReportDetailedEarthmat = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_ReportDetailedEarthmat;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_ReportDetailedEarthmat;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_ReportDetailedStation(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_ReportDetailedStation(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> cache_ViewModel_ReportDetailedStation = null;
                public void UpdateChildListeners_ViewModel_ReportDetailedStation(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj)
                {
                    if (obj != cache_ViewModel_ReportDetailedStation)
                    {
                        if (cache_ViewModel_ReportDetailedStation != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_ReportDetailedStation).PropertyChanged -= PropertyChanged_ViewModel_ReportDetailedStation;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_ReportDetailedStation).CollectionChanged -= CollectionChanged_ViewModel_ReportDetailedStation;
                            cache_ViewModel_ReportDetailedStation = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_ReportDetailedStation = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_ReportDetailedStation;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_ReportDetailedStation;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_ReportDateItems(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_ReportDateItems(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ReportPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> cache_ViewModel_ReportDateItems = null;
                public void UpdateChildListeners_ViewModel_ReportDateItems(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Models.FieldNotes> obj)
                {
                    if (obj != cache_ViewModel_ReportDateItems)
                    {
                        if (cache_ViewModel_ReportDateItems != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_ReportDateItems).PropertyChanged -= PropertyChanged_ViewModel_ReportDateItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_ReportDateItems).CollectionChanged -= CollectionChanged_ViewModel_ReportDateItems;
                            cache_ViewModel_ReportDateItems = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_ReportDateItems = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_ReportDateItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_ReportDateItems;
                        }
                    }
                }
                public void RegisterTwoWayListener_74(global::Windows.UI.Xaml.Controls.Grid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_74_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_75(global::Windows.UI.Xaml.Controls.Grid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_75_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_76(global::Windows.UI.Xaml.Controls.Grid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_76_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_77(global::Windows.UI.Xaml.Controls.Grid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_77_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_78(global::Windows.UI.Xaml.Controls.Grid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_78_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_79(global::Windows.UI.Xaml.Controls.Grid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_79_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_80(global::Windows.UI.Xaml.Controls.Grid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_80_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_81(global::Windows.UI.Xaml.Controls.Grid sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.VisibilityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_81_Visibility();
                        }
                    });
                }
                public void RegisterTwoWayListener_83(global::GSCFieldApp.Themes.ExpandPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::GSCFieldApp.Themes.ExpandPanel.IsExpandedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_83_IsExpanded();
                        }
                    });
                }
                public void RegisterTwoWayListener_84(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_84_Color();
                        }
                    });
                }
                public void RegisterTwoWayListener_87(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_87_Foreground();
                        }
                    });
                }
                public void RegisterTwoWayListener_88(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_88_Color();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.Brush.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_88_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_89(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_89_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_89_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_90(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_90_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_91(global::GSCFieldApp.Themes.ExpandPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::GSCFieldApp.Themes.ExpandPanel.IsExpandedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_91_IsExpanded();
                        }
                    });
                }
                public void RegisterTwoWayListener_92(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_92_Color();
                        }
                    });
                }
                public void RegisterTwoWayListener_95(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_95_Text();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_95_Foreground();
                        }
                    });
                }
                public void RegisterTwoWayListener_96(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_96_Color();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.Brush.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_96_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_97(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_97_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_97_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_98(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_98_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_98_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_99(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_99_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_99_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_100(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_100_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_101(global::GSCFieldApp.Themes.ExpandPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::GSCFieldApp.Themes.ExpandPanel.IsExpandedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_101_IsExpanded();
                        }
                    });
                }
                public void RegisterTwoWayListener_102(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_102_Color();
                        }
                    });
                }
                public void RegisterTwoWayListener_105(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_105_Foreground();
                        }
                    });
                }
                public void RegisterTwoWayListener_106(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_106_Color();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.Brush.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_106_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_107(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_107_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_107_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_108(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_108_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_108_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_109(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_109_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_109_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_110(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_110_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_111(global::GSCFieldApp.Themes.ExpandPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::GSCFieldApp.Themes.ExpandPanel.IsExpandedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_111_IsExpanded();
                        }
                    });
                }
                public void RegisterTwoWayListener_112(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_112_Color();
                        }
                    });
                }
                public void RegisterTwoWayListener_115(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_115_Foreground();
                        }
                    });
                }
                public void RegisterTwoWayListener_116(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_116_Color();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.Brush.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_116_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_117(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_117_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_117_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_118(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_118_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_118_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_119(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_119_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_119_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_120(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_120_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_121(global::GSCFieldApp.Themes.ExpandPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::GSCFieldApp.Themes.ExpandPanel.IsExpandedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_121_IsExpanded();
                        }
                    });
                }
                public void RegisterTwoWayListener_122(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_122_Color();
                        }
                    });
                }
                public void RegisterTwoWayListener_125(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_125_Foreground();
                        }
                    });
                }
                public void RegisterTwoWayListener_126(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_126_Color();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.Brush.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_126_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_127(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_127_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_127_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_128(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_128_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_128_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_129(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_129_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_129_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_130(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_130_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_131(global::GSCFieldApp.Themes.ExpandPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::GSCFieldApp.Themes.ExpandPanel.IsExpandedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_131_IsExpanded();
                        }
                    });
                }
                public void RegisterTwoWayListener_132(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_132_Color();
                        }
                    });
                }
                public void RegisterTwoWayListener_135(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_135_Foreground();
                        }
                    });
                }
                public void RegisterTwoWayListener_136(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_136_Color();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.Brush.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_136_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_137(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_137_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_137_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_138(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_138_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_138_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_139(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_139_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_139_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_140(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_140_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_141(global::GSCFieldApp.Themes.ExpandPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::GSCFieldApp.Themes.ExpandPanel.IsExpandedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_141_IsExpanded();
                        }
                    });
                }
                public void RegisterTwoWayListener_142(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_142_Color();
                        }
                    });
                }
                public void RegisterTwoWayListener_145(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_145_Foreground();
                        }
                    });
                }
                public void RegisterTwoWayListener_146(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_146_Color();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.Brush.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_146_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_147(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_147_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_147_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_148(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_148_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_148_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_149(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_149_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_149_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_150(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_150_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_151(global::GSCFieldApp.Themes.ExpandPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::GSCFieldApp.Themes.ExpandPanel.IsExpandedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_151_IsExpanded();
                        }
                    });
                }
                public void RegisterTwoWayListener_152(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_152_Color();
                        }
                    });
                }
                public void RegisterTwoWayListener_155(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_155_Foreground();
                        }
                    });
                }
                public void RegisterTwoWayListener_156(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_156_Color();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.Brush.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_156_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_157(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_157_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_157_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_158(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_158_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_158_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_159(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_159_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_159_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_160(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_160_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_161(global::GSCFieldApp.Themes.ExpandPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::GSCFieldApp.Themes.ExpandPanel.IsExpandedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_161_IsExpanded();
                        }
                    });
                }
                public void RegisterTwoWayListener_162(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_162_Color();
                        }
                    });
                }
                public void RegisterTwoWayListener_165(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_165_Foreground();
                        }
                    });
                }
                public void RegisterTwoWayListener_166(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_166_Color();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.Brush.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_166_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_167(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_167_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_167_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_168(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_168_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_168_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_169(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_169_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_169_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_170(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_170_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_171(global::GSCFieldApp.Themes.ExpandPanel sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::GSCFieldApp.Themes.ExpandPanel.IsExpandedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_171_IsExpanded();
                        }
                    });
                }
                public void RegisterTwoWayListener_172(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_172_Color();
                        }
                    });
                }
                public void RegisterTwoWayListener_174(global::Windows.UI.Xaml.Controls.TextBlock sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_174_Foreground();
                        }
                    });
                }
                public void RegisterTwoWayListener_175(global::Windows.UI.Xaml.Media.SolidColorBrush sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_175_Color();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Media.Brush.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_175_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_176(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_176_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_176_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_177(global::Windows.UI.Xaml.Controls.SymbolIcon sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.IconElement.ForegroundProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_177_Foreground();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.UIElement.OpacityProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_177_Opacity();
                        }
                    });
                }
                public void RegisterTwoWayListener_178(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_178_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_180(global::Windows.UI.Xaml.Controls.GridView sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_180_SelectedIndex();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Views\FieldNotesPage.xaml line 1
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)(target);
                    ((global::Windows.UI.Xaml.Controls.Page)element1).Loading += this.Page_Loading;
                    ((global::Windows.UI.Xaml.Controls.Page)element1).Loaded += this.Page_Loaded;
                }
                break;
            case 2: // Views\FieldNotesPage.xaml line 19
                {
                    this.VisibilityConverter = (global::GSCFieldApp.Converters.VisibilityFromReverseBoolConverter)(target);
                }
                break;
            case 3: // Views\FieldNotesPage.xaml line 20
                {
                    this.VisibilityFromBoolConverter = (global::GSCFieldApp.Converters.VisibilityFromBoolConverter)(target);
                }
                break;
            case 4: // Views\FieldNotesPage.xaml line 21
                {
                    this.SolidColorBrushConverter = (global::GSCFieldApp.Converters.SolidColorBrushConverter)(target);
                }
                break;
            case 5: // Views\FieldNotesPage.xaml line 22
                {
                    this.MediaBrushConverter = (global::GSCFieldApp.Converters.MediaBrushConverter)(target);
                }
                break;
            case 6: // Views\FieldNotesPage.xaml line 23
                {
                    this.TextWithDegreeConverter = (global::GSCFieldApp.Converters.TextWithDegreeConverter)(target);
                }
                break;
            case 7: // Views\FieldNotesPage.xaml line 24
                {
                    this.TextWithAzimDegreeConverter = (global::GSCFieldApp.Converters.TextWithAzimDegreeConverter)(target);
                }
                break;
            case 8: // Views\FieldNotesPage.xaml line 25
                {
                    this.PercentageConverter = (global::GSCFieldApp.Converters.TextWithPercentageConverter)(target);
                }
                break;
            case 9: // Views\FieldNotesPage.xaml line 26
                {
                    this.ElevationConverter = (global::GSCFieldApp.Converters.ElevationConverter)(target);
                }
                break;
            case 10: // Views\FieldNotesPage.xaml line 27
                {
                    this.BitmapSourceConverter = (global::GSCFieldApp.Converters.BitmapSourceConverter)(target);
                }
                break;
            case 68: // Views\FieldNotesPage.xaml line 464
                {
                    this.pageHeader = (global::Template10.Controls.PageHeader)(target);
                }
                break;
            case 69: // Views\FieldNotesPage.xaml line 470
                {
                    this.SummaryPanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 70: // Views\FieldNotesPage.xaml line 496
                {
                    this.summaryDetailSeperator = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 71: // Views\FieldNotesPage.xaml line 508
                {
                    this.SplitViewRelativeContent = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 72: // Views\FieldNotesPage.xaml line 512
                {
                    this.DetailHeader = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 73: // Views\FieldNotesPage.xaml line 515
                {
                    this.StationPanel = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 74: // Views\FieldNotesPage.xaml line 569
                {
                    this.EarthmatPanel = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 75: // Views\FieldNotesPage.xaml line 621
                {
                    this.SamplePanel = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 76: // Views\FieldNotesPage.xaml line 678
                {
                    this.StructurePanel = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 77: // Views\FieldNotesPage.xaml line 734
                {
                    this.FossilPanel = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 78: // Views\FieldNotesPage.xaml line 790
                {
                    this.PaleoFlowPanel = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 79: // Views\FieldNotesPage.xaml line 846
                {
                    this.MineralPanel = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 80: // Views\FieldNotesPage.xaml line 902
                {
                    this.MineralAltPanel = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 81: // Views\FieldNotesPage.xaml line 967
                {
                    this.DocumentPanel = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 82: // Views\FieldNotesPage.xaml line 1022
                {
                    this.LocationPanel = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 83: // Views\FieldNotesPage.xaml line 1026
                {
                    this.ObservationExpandPanel = (global::GSCFieldApp.Themes.ExpandPanel)(target);
                }
                break;
            case 85: // Views\FieldNotesPage.xaml line 1033
                {
                    this.ObservationRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 86: // Views\FieldNotesPage.xaml line 1035
                {
                    this.textBlockBackground_FieldObservation = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 87: // Views\FieldNotesPage.xaml line 1043
                {
                    this.textBlock_FieldObservation = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 89: // Views\FieldNotesPage.xaml line 1055
                {
                    this.ObservationEditIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 90: // Views\FieldNotesPage.xaml line 1064
                {
                    this.ReportLocationList = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 91: // Views\FieldNotesPage.xaml line 971
                {
                    this.DocumentExpandPanel = (global::GSCFieldApp.Themes.ExpandPanel)(target);
                }
                break;
            case 93: // Views\FieldNotesPage.xaml line 981
                {
                    this.DocumentRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 94: // Views\FieldNotesPage.xaml line 982
                {
                    this.DocumentBackground = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 95: // Views\FieldNotesPage.xaml line 987
                {
                    this.textBlock_FieldDocument = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 97: // Views\FieldNotesPage.xaml line 998
                {
                    this.DocumentAddIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 98: // Views\FieldNotesPage.xaml line 999
                {
                    this.DocumentEditIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 99: // Views\FieldNotesPage.xaml line 1000
                {
                    this.DocumentDeleteIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 100: // Views\FieldNotesPage.xaml line 1006
                {
                    this.ReportDocumentList = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 101: // Views\FieldNotesPage.xaml line 906
                {
                    this.MineralAltExpandPanel = (global::GSCFieldApp.Themes.ExpandPanel)(target);
                }
                break;
            case 103: // Views\FieldNotesPage.xaml line 916
                {
                    this.MineralAltRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 104: // Views\FieldNotesPage.xaml line 917
                {
                    this.MineralAltBackground = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 105: // Views\FieldNotesPage.xaml line 923
                {
                    this.textBlock_FieldMineralAlt = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 107: // Views\FieldNotesPage.xaml line 935
                {
                    this.MineralAltAddIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 108: // Views\FieldNotesPage.xaml line 938
                {
                    this.MineralAltEditIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 109: // Views\FieldNotesPage.xaml line 942
                {
                    this.alterationDeleteIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 110: // Views\FieldNotesPage.xaml line 951
                {
                    this.ReportMineralAltList = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 111: // Views\FieldNotesPage.xaml line 850
                {
                    this.MineralExpandPanel = (global::GSCFieldApp.Themes.ExpandPanel)(target);
                }
                break;
            case 113: // Views\FieldNotesPage.xaml line 860
                {
                    this.MineralRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 114: // Views\FieldNotesPage.xaml line 861
                {
                    this.MineralBackground = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 115: // Views\FieldNotesPage.xaml line 866
                {
                    this.textBlock_FieldMineral = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 117: // Views\FieldNotesPage.xaml line 878
                {
                    this.MineralAddIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 118: // Views\FieldNotesPage.xaml line 879
                {
                    this.MineralEditIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 119: // Views\FieldNotesPage.xaml line 880
                {
                    this.MineralDeleteIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 120: // Views\FieldNotesPage.xaml line 886
                {
                    this.ReportMineralList = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 121: // Views\FieldNotesPage.xaml line 794
                {
                    this.PflowExpandPanel = (global::GSCFieldApp.Themes.ExpandPanel)(target);
                }
                break;
            case 123: // Views\FieldNotesPage.xaml line 804
                {
                    this.PflowRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 124: // Views\FieldNotesPage.xaml line 805
                {
                    this.PflowBackground = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 125: // Views\FieldNotesPage.xaml line 810
                {
                    this.textBlock_FieldPflow = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 127: // Views\FieldNotesPage.xaml line 822
                {
                    this.PflowAddIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 128: // Views\FieldNotesPage.xaml line 823
                {
                    this.PflowEditIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 129: // Views\FieldNotesPage.xaml line 824
                {
                    this.Paleo_flowDeleteIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 130: // Views\FieldNotesPage.xaml line 830
                {
                    this.ReportPflowList = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 131: // Views\FieldNotesPage.xaml line 738
                {
                    this.FossilExpandPanel = (global::GSCFieldApp.Themes.ExpandPanel)(target);
                }
                break;
            case 133: // Views\FieldNotesPage.xaml line 748
                {
                    this.FossilRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 134: // Views\FieldNotesPage.xaml line 749
                {
                    this.FossilBackground = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 135: // Views\FieldNotesPage.xaml line 754
                {
                    this.textBlock_FieldFossil = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 137: // Views\FieldNotesPage.xaml line 766
                {
                    this.FossilAddIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 138: // Views\FieldNotesPage.xaml line 767
                {
                    this.FossilEditIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 139: // Views\FieldNotesPage.xaml line 768
                {
                    this.FossilDeleteIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 140: // Views\FieldNotesPage.xaml line 774
                {
                    this.ReportFossilList = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 141: // Views\FieldNotesPage.xaml line 682
                {
                    this.StructureExpandPanel = (global::GSCFieldApp.Themes.ExpandPanel)(target);
                }
                break;
            case 143: // Views\FieldNotesPage.xaml line 692
                {
                    this.StructureRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 144: // Views\FieldNotesPage.xaml line 693
                {
                    this.StructureBackground = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 145: // Views\FieldNotesPage.xaml line 698
                {
                    this.textBlock_FieldStructure = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 147: // Views\FieldNotesPage.xaml line 710
                {
                    this.StrucAddIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 148: // Views\FieldNotesPage.xaml line 711
                {
                    this.StrucEditIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 149: // Views\FieldNotesPage.xaml line 712
                {
                    this.StrucDeleteIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 150: // Views\FieldNotesPage.xaml line 718
                {
                    this.ReportStructureList = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 151: // Views\FieldNotesPage.xaml line 625
                {
                    this.SampleExpandPanel = (global::GSCFieldApp.Themes.ExpandPanel)(target);
                }
                break;
            case 153: // Views\FieldNotesPage.xaml line 635
                {
                    this.SampleRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 154: // Views\FieldNotesPage.xaml line 636
                {
                    this.SampleBackground = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 155: // Views\FieldNotesPage.xaml line 641
                {
                    this.textBlock_FieldSample = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 157: // Views\FieldNotesPage.xaml line 653
                {
                    this.SampleAddIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 158: // Views\FieldNotesPage.xaml line 654
                {
                    this.SampleEditIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 159: // Views\FieldNotesPage.xaml line 655
                {
                    this.SampleDeleteIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 160: // Views\FieldNotesPage.xaml line 661
                {
                    this.ReportSampleList = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 161: // Views\FieldNotesPage.xaml line 572
                {
                    this.EarthMatExpandPanel = (global::GSCFieldApp.Themes.ExpandPanel)(target);
                }
                break;
            case 163: // Views\FieldNotesPage.xaml line 581
                {
                    this.EarthMatRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 164: // Views\FieldNotesPage.xaml line 582
                {
                    this.EarthMaterialBackground = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 165: // Views\FieldNotesPage.xaml line 589
                {
                    this.textBlock_FieldEarthMat = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 167: // Views\FieldNotesPage.xaml line 600
                {
                    this.EarthMatAddIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 168: // Views\FieldNotesPage.xaml line 601
                {
                    this.EarthMatEditIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 169: // Views\FieldNotesPage.xaml line 602
                {
                    this.Earth_materialDeleteIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 170: // Views\FieldNotesPage.xaml line 607
                {
                    this.ReportEarthmatList = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 171: // Views\FieldNotesPage.xaml line 520
                {
                    this.StationExpandPanel = (global::GSCFieldApp.Themes.ExpandPanel)(target);
                }
                break;
            case 173: // Views\FieldNotesPage.xaml line 526
                {
                    this.StationBackground = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 174: // Views\FieldNotesPage.xaml line 532
                {
                    this.textBlock_FieldStation = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 176: // Views\FieldNotesPage.xaml line 542
                {
                    this.StationEditIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 177: // Views\FieldNotesPage.xaml line 545
                {
                    this.StationDeleteIcon = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 178: // Views\FieldNotesPage.xaml line 553
                {
                    this.ReportStationList = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 179: // Views\FieldNotesPage.xaml line 471
                {
                    this.SummaryHeader = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 180: // Views\FieldNotesPage.xaml line 472
                {
                    this.ReportListViewDates = (global::Windows.UI.Xaml.Controls.GridView)(target);
                    ((global::Windows.UI.Xaml.Controls.GridView)this.ReportListViewDates).Loaded += this.Grid_Loaded;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\FieldNotesPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    ReportPage_obj1_Bindings bindings = new ReportPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 11: // Views\FieldNotesPage.xaml line 421
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element11 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ReportPage_obj11_Bindings bindings = new ReportPage_obj11_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element11.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element11.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element11, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element11, bindings);
                }
                break;
            case 16: // Views\FieldNotesPage.xaml line 378
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element16 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ReportPage_obj16_Bindings bindings = new ReportPage_obj16_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element16.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element16.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element16, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element16, bindings);
                }
                break;
            case 22: // Views\FieldNotesPage.xaml line 341
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element22 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ReportPage_obj22_Bindings bindings = new ReportPage_obj22_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element22.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element22.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element22, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element22, bindings);
                }
                break;
            case 26: // Views\FieldNotesPage.xaml line 300
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element26 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ReportPage_obj26_Bindings bindings = new ReportPage_obj26_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element26.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element26.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element26, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element26, bindings);
                }
                break;
            case 31: // Views\FieldNotesPage.xaml line 251
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element31 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ReportPage_obj31_Bindings bindings = new ReportPage_obj31_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element31.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element31.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element31, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element31, bindings);
                }
                break;
            case 38: // Views\FieldNotesPage.xaml line 203
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element38 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ReportPage_obj38_Bindings bindings = new ReportPage_obj38_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element38.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element38.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element38, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element38, bindings);
                }
                break;
            case 46: // Views\FieldNotesPage.xaml line 167
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element46 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ReportPage_obj46_Bindings bindings = new ReportPage_obj46_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element46.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element46.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element46, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element46, bindings);
                }
                break;
            case 51: // Views\FieldNotesPage.xaml line 131
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element51 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ReportPage_obj51_Bindings bindings = new ReportPage_obj51_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element51.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element51.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element51, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element51, bindings);
                }
                break;
            case 56: // Views\FieldNotesPage.xaml line 91
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element56 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ReportPage_obj56_Bindings bindings = new ReportPage_obj56_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element56.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element56.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element56, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element56, bindings);
                }
                break;
            case 61: // Views\FieldNotesPage.xaml line 50
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element61 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ReportPage_obj61_Bindings bindings = new ReportPage_obj61_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element61.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element61.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element61, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element61, bindings);
                }
                break;
            case 66: // Views\FieldNotesPage.xaml line 30
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element66 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    ReportPage_obj66_Bindings bindings = new ReportPage_obj66_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element66.DataContext);
                    element66.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element66, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element66, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

