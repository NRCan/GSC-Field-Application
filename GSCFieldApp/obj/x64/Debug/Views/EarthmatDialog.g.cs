#pragma checksum "C:\Users\Maison\Source\Repos\GSC-Field-Application\GSCFieldApp\Views\EarthmatDialog.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "AEDA9BCD512B3730C8523A1A0DA97547"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GSCFieldApp.Views
{
    partial class EarthmatDialog : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class EarthmatDialog_obj2_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IEarthmatDialog_Bindings
        {
            private global::GSCFieldApp.Themes.ComboBoxItem dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj2;
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj4;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3TextDisabled = false;
            private static bool isobj4VisibilityDisabled = false;

            public EarthmatDialog_obj2_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 33 && columnNumber == 25)
                {
                    isobj3TextDisabled = true;
                }
                else if (lineNumber == 35 && columnNumber == 225)
                {
                    isobj4VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\EarthmatDialog.xaml line 31
                        this.obj2 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 3: // Views\EarthmatDialog.xaml line 32
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 4: // Views\EarthmatDialog.xaml line 35
                        this.obj4 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj2.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GSCFieldApp.Themes.ComboBoxItem) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IEarthmatDialog_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Themes.ComboBoxItem)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Themes.ComboBoxItem obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_itemName(obj.itemName, phase);
                        this.Update_canRemoveItem(obj.canRemoveItem, phase);
                    }
                }
            }
            private void Update_itemName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 32
                    if (!isobj3TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj3, obj, null);
                    }
                }
            }
            private void Update_canRemoveItem(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 35
                    if (!isobj4VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj4, obj);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class EarthmatDialog_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IEarthmatDialog_Bindings
        {
            private global::GSCFieldApp.Views.EarthmatDialog dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBox obj27;
            private global::Windows.UI.Xaml.Controls.ComboBox obj28;
            private global::Windows.UI.Xaml.Controls.TextBox obj29;
            private global::Windows.UI.Xaml.Controls.TextBox obj30;
            private global::Windows.UI.Xaml.Controls.ComboBox obj31;
            private global::Windows.UI.Xaml.Controls.ComboBox obj32;
            private global::Windows.UI.Xaml.Controls.TextBox obj33;
            private global::Windows.UI.Xaml.Controls.ComboBox obj34;
            private global::Windows.UI.Xaml.Controls.ComboBox obj35;
            private global::Windows.UI.Xaml.Controls.TextBox obj36;
            private global::Windows.UI.Xaml.Controls.ComboBox obj37;
            private global::Windows.UI.Xaml.Controls.ListView obj38;
            private global::Windows.UI.Xaml.Controls.ComboBox obj40;
            private global::Windows.UI.Xaml.Controls.ComboBox obj41;
            private global::Windows.UI.Xaml.Controls.ComboBox obj48;
            private global::Windows.UI.Xaml.Controls.ListView obj49;
            private global::Windows.UI.Xaml.Controls.ComboBox obj50;
            private global::Windows.UI.Xaml.Controls.ListView obj51;
            private global::Windows.UI.Xaml.Controls.ComboBox obj52;
            private global::Windows.UI.Xaml.Controls.ListView obj53;
            private global::Windows.UI.Xaml.Controls.ComboBox obj54;
            private global::Windows.UI.Xaml.Controls.ListView obj55;
            private global::Windows.UI.Xaml.Controls.ComboBox obj56;
            private global::Windows.UI.Xaml.Controls.ListView obj57;
            private global::Windows.UI.Xaml.Controls.ComboBox obj58;
            private global::Windows.UI.Xaml.Controls.ListView obj59;
            private global::Windows.UI.Xaml.Controls.TextBox obj62;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj37SelectionChanged;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj48SelectionChanged;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj50SelectionChanged;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj52SelectionChanged;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj54SelectionChanged;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj56SelectionChanged;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj58SelectionChanged;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj27TextDisabled = false;
            private static bool isobj28ItemsSourceDisabled = false;
            private static bool isobj28SelectedValueDisabled = false;
            private static bool isobj29TextDisabled = false;
            private static bool isobj30TextDisabled = false;
            private static bool isobj31ItemsSourceDisabled = false;
            private static bool isobj31SelectedValueDisabled = false;
            private static bool isobj32ItemsSourceDisabled = false;
            private static bool isobj32SelectedValueDisabled = false;
            private static bool isobj33TextDisabled = false;
            private static bool isobj34ItemsSourceDisabled = false;
            private static bool isobj34SelectedValueDisabled = false;
            private static bool isobj35ItemsSourceDisabled = false;
            private static bool isobj35SelectedValueDisabled = false;
            private static bool isobj36TextDisabled = false;
            private static bool isobj37ItemsSourceDisabled = false;
            private static bool isobj37SelectedValueDisabled = false;
            private static bool isobj38ItemsSourceDisabled = false;
            private static bool isobj40ItemsSourceDisabled = false;
            private static bool isobj40SelectedValueDisabled = false;
            private static bool isobj41ItemsSourceDisabled = false;
            private static bool isobj41SelectedValueDisabled = false;
            private static bool isobj48ItemsSourceDisabled = false;
            private static bool isobj48SelectedValueDisabled = false;
            private static bool isobj49ItemsSourceDisabled = false;
            private static bool isobj50ItemsSourceDisabled = false;
            private static bool isobj50SelectedValueDisabled = false;
            private static bool isobj51ItemsSourceDisabled = false;
            private static bool isobj52ItemsSourceDisabled = false;
            private static bool isobj52SelectedValueDisabled = false;
            private static bool isobj53ItemsSourceDisabled = false;
            private static bool isobj54ItemsSourceDisabled = false;
            private static bool isobj54SelectedValueDisabled = false;
            private static bool isobj55ItemsSourceDisabled = false;
            private static bool isobj56ItemsSourceDisabled = false;
            private static bool isobj56SelectedValueDisabled = false;
            private static bool isobj57ItemsSourceDisabled = false;
            private static bool isobj58ItemsSourceDisabled = false;
            private static bool isobj58SelectedValueDisabled = false;
            private static bool isobj59ItemsSourceDisabled = false;
            private static bool isobj62TextDisabled = false;

            private EarthmatDialog_obj1_BindingsTracking bindingsTracking;

            public EarthmatDialog_obj1_Bindings()
            {
                this.bindingsTracking = new EarthmatDialog_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 273 && columnNumber == 37)
                {
                    isobj27TextDisabled = true;
                }
                else if (lineNumber == 256 && columnNumber == 41)
                {
                    isobj28ItemsSourceDisabled = true;
                }
                else if (lineNumber == 257 && columnNumber == 41)
                {
                    isobj28SelectedValueDisabled = true;
                }
                else if (lineNumber == 260 && columnNumber == 37)
                {
                    isobj29TextDisabled = true;
                }
                else if (lineNumber == 243 && columnNumber == 37)
                {
                    isobj30TextDisabled = true;
                }
                else if (lineNumber == 226 && columnNumber == 33)
                {
                    isobj31ItemsSourceDisabled = true;
                }
                else if (lineNumber == 227 && columnNumber == 33)
                {
                    isobj31SelectedValueDisabled = true;
                }
                else if (lineNumber == 229 && columnNumber == 33)
                {
                    isobj32ItemsSourceDisabled = true;
                }
                else if (lineNumber == 230 && columnNumber == 33)
                {
                    isobj32SelectedValueDisabled = true;
                }
                else if (lineNumber == 233 && columnNumber == 33)
                {
                    isobj33TextDisabled = true;
                }
                else if (lineNumber == 204 && columnNumber == 29)
                {
                    isobj34ItemsSourceDisabled = true;
                }
                else if (lineNumber == 205 && columnNumber == 29)
                {
                    isobj34SelectedValueDisabled = true;
                }
                else if (lineNumber == 208 && columnNumber == 29)
                {
                    isobj35ItemsSourceDisabled = true;
                }
                else if (lineNumber == 209 && columnNumber == 29)
                {
                    isobj35SelectedValueDisabled = true;
                }
                else if (lineNumber == 213 && columnNumber == 41)
                {
                    isobj36TextDisabled = true;
                }
                else if (lineNumber == 186 && columnNumber == 29)
                {
                    isobj37ItemsSourceDisabled = true;
                }
                else if (lineNumber == 187 && columnNumber == 29)
                {
                    isobj37SelectedValueDisabled = true;
                }
                else if (lineNumber == 188 && columnNumber == 45)
                {
                    this.obj37.SelectionChanged -= obj37SelectionChanged;
                }
                else if (lineNumber == 191 && columnNumber == 45)
                {
                    isobj38ItemsSourceDisabled = true;
                }
                else if (lineNumber == 170 && columnNumber == 37)
                {
                    isobj40ItemsSourceDisabled = true;
                }
                else if (lineNumber == 171 && columnNumber == 37)
                {
                    isobj40SelectedValueDisabled = true;
                }
                else if (lineNumber == 173 && columnNumber == 37)
                {
                    isobj41ItemsSourceDisabled = true;
                }
                else if (lineNumber == 174 && columnNumber == 37)
                {
                    isobj41SelectedValueDisabled = true;
                }
                else if (lineNumber == 150 && columnNumber == 33)
                {
                    isobj48ItemsSourceDisabled = true;
                }
                else if (lineNumber == 151 && columnNumber == 33)
                {
                    isobj48SelectedValueDisabled = true;
                }
                else if (lineNumber == 152 && columnNumber == 49)
                {
                    this.obj48.SelectionChanged -= obj48SelectionChanged;
                }
                else if (lineNumber == 156 && columnNumber == 49)
                {
                    isobj49ItemsSourceDisabled = true;
                }
                else if (lineNumber == 139 && columnNumber == 33)
                {
                    isobj50ItemsSourceDisabled = true;
                }
                else if (lineNumber == 140 && columnNumber == 33)
                {
                    isobj50SelectedValueDisabled = true;
                }
                else if (lineNumber == 141 && columnNumber == 49)
                {
                    this.obj50.SelectionChanged -= obj50SelectionChanged;
                }
                else if (lineNumber == 145 && columnNumber == 49)
                {
                    isobj51ItemsSourceDisabled = true;
                }
                else if (lineNumber == 128 && columnNumber == 33)
                {
                    isobj52ItemsSourceDisabled = true;
                }
                else if (lineNumber == 129 && columnNumber == 33)
                {
                    isobj52SelectedValueDisabled = true;
                }
                else if (lineNumber == 130 && columnNumber == 49)
                {
                    this.obj52.SelectionChanged -= obj52SelectionChanged;
                }
                else if (lineNumber == 134 && columnNumber == 49)
                {
                    isobj53ItemsSourceDisabled = true;
                }
                else if (lineNumber == 117 && columnNumber == 41)
                {
                    isobj54ItemsSourceDisabled = true;
                }
                else if (lineNumber == 118 && columnNumber == 41)
                {
                    isobj54SelectedValueDisabled = true;
                }
                else if (lineNumber == 119 && columnNumber == 57)
                {
                    this.obj54.SelectionChanged -= obj54SelectionChanged;
                }
                else if (lineNumber == 122 && columnNumber == 57)
                {
                    isobj55ItemsSourceDisabled = true;
                }
                else if (lineNumber == 106 && columnNumber == 41)
                {
                    isobj56ItemsSourceDisabled = true;
                }
                else if (lineNumber == 107 && columnNumber == 41)
                {
                    isobj56SelectedValueDisabled = true;
                }
                else if (lineNumber == 108 && columnNumber == 57)
                {
                    this.obj56.SelectionChanged -= obj56SelectionChanged;
                }
                else if (lineNumber == 111 && columnNumber == 57)
                {
                    isobj57ItemsSourceDisabled = true;
                }
                else if (lineNumber == 97 && columnNumber == 33)
                {
                    isobj58ItemsSourceDisabled = true;
                }
                else if (lineNumber == 98 && columnNumber == 33)
                {
                    isobj58SelectedValueDisabled = true;
                }
                else if (lineNumber == 99 && columnNumber == 49)
                {
                    this.obj58.SelectionChanged -= obj58SelectionChanged;
                }
                else if (lineNumber == 102 && columnNumber == 49)
                {
                    isobj59ItemsSourceDisabled = true;
                }
                else if (lineNumber == 82 && columnNumber == 42)
                {
                    isobj62TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 27: // Views\EarthmatDialog.xaml line 272
                        this.obj27 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_27(this.obj27);
                        break;
                    case 28: // Views\EarthmatDialog.xaml line 255
                        this.obj28 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_28(this.obj28);
                        break;
                    case 29: // Views\EarthmatDialog.xaml line 259
                        this.obj29 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_29(this.obj29);
                        break;
                    case 30: // Views\EarthmatDialog.xaml line 242
                        this.obj30 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_30(this.obj30);
                        break;
                    case 31: // Views\EarthmatDialog.xaml line 225
                        this.obj31 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_31(this.obj31);
                        break;
                    case 32: // Views\EarthmatDialog.xaml line 228
                        this.obj32 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_32(this.obj32);
                        break;
                    case 33: // Views\EarthmatDialog.xaml line 232
                        this.obj33 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_33(this.obj33);
                        break;
                    case 34: // Views\EarthmatDialog.xaml line 203
                        this.obj34 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_34(this.obj34);
                        break;
                    case 35: // Views\EarthmatDialog.xaml line 207
                        this.obj35 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_35(this.obj35);
                        break;
                    case 36: // Views\EarthmatDialog.xaml line 211
                        this.obj36 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_36(this.obj36);
                        break;
                    case 37: // Views\EarthmatDialog.xaml line 185
                        this.obj37 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.obj37SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ConcatComboBox_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ComboBox)target).SelectionChanged += obj37SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_37(this.obj37);
                        break;
                    case 38: // Views\EarthmatDialog.xaml line 189
                        this.obj38 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 40: // Views\EarthmatDialog.xaml line 169
                        this.obj40 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_40(this.obj40);
                        break;
                    case 41: // Views\EarthmatDialog.xaml line 172
                        this.obj41 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_41(this.obj41);
                        break;
                    case 48: // Views\EarthmatDialog.xaml line 149
                        this.obj48 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.obj48SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ConcatComboBox_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ComboBox)target).SelectionChanged += obj48SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_48(this.obj48);
                        break;
                    case 49: // Views\EarthmatDialog.xaml line 153
                        this.obj49 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 50: // Views\EarthmatDialog.xaml line 138
                        this.obj50 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.obj50SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ConcatComboBox_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ComboBox)target).SelectionChanged += obj50SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_50(this.obj50);
                        break;
                    case 51: // Views\EarthmatDialog.xaml line 142
                        this.obj51 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 52: // Views\EarthmatDialog.xaml line 127
                        this.obj52 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.obj52SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ConcatComboBox_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ComboBox)target).SelectionChanged += obj52SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_52(this.obj52);
                        break;
                    case 53: // Views\EarthmatDialog.xaml line 131
                        this.obj53 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 54: // Views\EarthmatDialog.xaml line 116
                        this.obj54 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.obj54SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ConcatComboBox_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ComboBox)target).SelectionChanged += obj54SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_54(this.obj54);
                        break;
                    case 55: // Views\EarthmatDialog.xaml line 120
                        this.obj55 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 56: // Views\EarthmatDialog.xaml line 105
                        this.obj56 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.obj56SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ConcatComboBox_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ComboBox)target).SelectionChanged += obj56SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_56(this.obj56);
                        break;
                    case 57: // Views\EarthmatDialog.xaml line 109
                        this.obj57 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 58: // Views\EarthmatDialog.xaml line 96
                        this.obj58 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        this.obj58SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ViewModel.ConcatComboBox_SelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ComboBox)target).SelectionChanged += obj58SelectionChanged;
                        this.bindingsTracking.RegisterTwoWayListener_58(this.obj58);
                        break;
                    case 59: // Views\EarthmatDialog.xaml line 100
                        this.obj59 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 62: // Views\EarthmatDialog.xaml line 81
                        this.obj62 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_62(this.obj62);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // IEarthmatDialog_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Views.EarthmatDialog)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Views.EarthmatDialog obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::GSCFieldApp.ViewModels.EarthmatViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Notes(obj.Notes, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatInterConfidence(obj.EarthmatInterConfidence, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatInterConfidence(obj.SelectedEarthmatInterConfidence, phase);
                        this.Update_ViewModel_InterpretationNote(obj.InterpretationNote, phase);
                        this.Update_ViewModel_MagSusceptibility(obj.MagSusceptibility, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatColourF(obj.EarthmatColourF, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatColourF(obj.SelectedEarthmatColourF, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatColourW(obj.EarthmatColourW, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatColourW(obj.SelectedEarthmatColourW, phase);
                        this.Update_ViewModel_ColourIndex(obj.ColourIndex, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatCU(obj.EarthmatCU, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatCU(obj.SelectedEarthmatCU, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatCL(obj.EarthmatCL, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatCL(obj.SelectedEarthmatCL, phase);
                        this.Update_ViewModel_ContactNote(obj.ContactNote, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatMineral(obj.EarthmatMineral, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatMineral(obj.SelectedEarthmatMineral, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatMineralValues(obj.EarthmatMineralValues, phase);
                        this.Update_ViewModel_EarthmatMU(obj.EarthmatMU, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatMU(obj.SelectedEarthmatMU, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatOccurAs(obj.EarthmatOccurAs, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatOccurAs(obj.SelectedEarthmatOccurAs, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatDefFabric(obj.EarthmatDefFabric, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatDefFabric(obj.SelectedEarthmatDefFabric, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatDefFabricValues(obj.EarthmatDefFabricValues, phase);
                        this.Update_ViewModel_EarthmatBedthick(obj.EarthmatBedthick, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatBedthick(obj.SelectedEarthmatBedthick, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatBedthickValues(obj.EarthmatBedthickValues, phase);
                        this.Update_ViewModel_EarthmatGrSize(obj.EarthmatGrSize, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatGrSize(obj.SelectedEarthmatGrSize, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatGrSizeValues(obj.EarthmatGrSizeValues, phase);
                        this.Update_ViewModel_EarthmatModComp(obj.EarthmatModComp, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatModComp(obj.SelectedEarthmatModComp, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatModCompValues(obj.EarthmatModCompValues, phase);
                        this.Update_ViewModel_EarthmatModTexture(obj.EarthmatModTexture, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatModTexture(obj.SelectedEarthmatModTexture, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatModTextureValues(obj.EarthmatModTextureValues, phase);
                        this.Update_ViewModel_EarthmatModStruc(obj.EarthmatModStruc, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SelectedEarthmatModStruc(obj.SelectedEarthmatModStruc, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EarthmatModStrucValues(obj.EarthmatModStrucValues, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_GroupTypeDetail(obj.GroupTypeDetail, phase);
                    }
                }
            }
            private void Update_ViewModel_Notes(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 272
                    if (!isobj27TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj27, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatInterConfidence(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 255
                    if (!isobj28ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj28, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatInterConfidence(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 255
                    if (!isobj28SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj28, obj, null);
                    }
                }
            }
            private void Update_ViewModel_InterpretationNote(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 259
                    if (!isobj29TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj29, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MagSusceptibility(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 242
                    if (!isobj30TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj30, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatColourF(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 225
                    if (!isobj31ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj31, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatColourF(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 225
                    if (!isobj31SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj31, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatColourW(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 228
                    if (!isobj32ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj32, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatColourW(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 228
                    if (!isobj32SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj32, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ColourIndex(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 232
                    if (!isobj33TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj33, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatCU(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 203
                    if (!isobj34ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj34, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatCU(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 203
                    if (!isobj34SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj34, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatCL(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 207
                    if (!isobj35ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj35, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatCL(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 207
                    if (!isobj35SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj35, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ContactNote(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 211
                    if (!isobj36TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj36, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatMineral(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 185
                    if (!isobj37ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj37, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatMineral(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 185
                    if (!isobj37SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj37, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatMineralValues(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 189
                    if (!isobj38ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj38, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatMU(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 169
                    if (!isobj40ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj40, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatMU(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 169
                    if (!isobj40SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj40, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatOccurAs(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 172
                    if (!isobj41ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj41, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatOccurAs(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 172
                    if (!isobj41SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj41, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatDefFabric(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 149
                    if (!isobj48ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj48, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatDefFabric(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 149
                    if (!isobj48SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj48, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatDefFabricValues(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 153
                    if (!isobj49ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj49, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatBedthick(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 138
                    if (!isobj50ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj50, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatBedthick(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 138
                    if (!isobj50SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj50, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatBedthickValues(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 142
                    if (!isobj51ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj51, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatGrSize(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 127
                    if (!isobj52ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj52, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatGrSize(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 127
                    if (!isobj52SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj52, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatGrSizeValues(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 131
                    if (!isobj53ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj53, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatModComp(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 116
                    if (!isobj54ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj54, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatModComp(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 116
                    if (!isobj54SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj54, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatModCompValues(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 120
                    if (!isobj55ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj55, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatModTexture(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 105
                    if (!isobj56ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj56, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatModTexture(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 105
                    if (!isobj56SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj56, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatModTextureValues(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 109
                    if (!isobj57ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj57, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatModStruc(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 96
                    if (!isobj58ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj58, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedEarthmatModStruc(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 96
                    if (!isobj58SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj58, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EarthmatModStrucValues(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\EarthmatDialog.xaml line 100
                    if (!isobj59ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj59, obj, null);
                    }
                }
            }
            private void Update_ViewModel_GroupTypeDetail(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\EarthmatDialog.xaml line 81
                    if (!isobj62TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj62, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_27_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.Notes = this.obj27.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_28_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatInterConfidence = (global::System.String)this.obj28.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_29_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.InterpretationNote = this.obj29.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_30_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.MagSusceptibility = this.obj30.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_31_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatColourF = (global::System.String)this.obj31.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_32_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatColourW = (global::System.String)this.obj32.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_33_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ColourIndex = this.obj33.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_34_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatCU = (global::System.String)this.obj34.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_35_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatCL = (global::System.String)this.obj35.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_36_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.ContactNote = this.obj36.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_37_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatMineral = (global::System.String)this.obj37.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_40_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatMU = (global::System.String)this.obj40.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_41_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatOccurAs = (global::System.String)this.obj41.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_48_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatDefFabric = (global::System.String)this.obj48.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_50_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatBedthick = (global::System.String)this.obj50.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_52_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatGrSize = (global::System.String)this.obj52.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_54_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatModComp = (global::System.String)this.obj54.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_56_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatModTexture = (global::System.String)this.obj56.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_58_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedEarthmatModStruc = (global::System.String)this.obj58.SelectedValue;
                        }
                    }
                }
            }
            private void UpdateTwoWay_62_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.GroupTypeDetail = this.obj62.Text;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class EarthmatDialog_obj1_BindingsTracking
            {
                private global::System.WeakReference<EarthmatDialog_obj1_Bindings> weakRefToBindingObj; 

                public EarthmatDialog_obj1_BindingsTracking(EarthmatDialog_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<EarthmatDialog_obj1_Bindings>(obj);
                }

                public EarthmatDialog_obj1_Bindings TryGetBindingObject()
                {
                    EarthmatDialog_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    EarthmatDialog_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GSCFieldApp.ViewModels.EarthmatViewModel obj = sender as global::GSCFieldApp.ViewModels.EarthmatViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Notes(obj.Notes, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatInterConfidence(obj.SelectedEarthmatInterConfidence, DATA_CHANGED);
                                bindings.Update_ViewModel_InterpretationNote(obj.InterpretationNote, DATA_CHANGED);
                                bindings.Update_ViewModel_MagSusceptibility(obj.MagSusceptibility, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatColourF(obj.SelectedEarthmatColourF, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatColourW(obj.SelectedEarthmatColourW, DATA_CHANGED);
                                bindings.Update_ViewModel_ColourIndex(obj.ColourIndex, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatCU(obj.SelectedEarthmatCU, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatCL(obj.SelectedEarthmatCL, DATA_CHANGED);
                                bindings.Update_ViewModel_ContactNote(obj.ContactNote, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatMineral(obj.SelectedEarthmatMineral, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatMU(obj.SelectedEarthmatMU, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatOccurAs(obj.SelectedEarthmatOccurAs, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatDefFabric(obj.SelectedEarthmatDefFabric, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatBedthick(obj.SelectedEarthmatBedthick, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatGrSize(obj.SelectedEarthmatGrSize, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatModComp(obj.SelectedEarthmatModComp, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatModTexture(obj.SelectedEarthmatModTexture, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedEarthmatModStruc(obj.SelectedEarthmatModStruc, DATA_CHANGED);
                                bindings.Update_ViewModel_GroupTypeDetail(obj.GroupTypeDetail, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Notes":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Notes(obj.Notes, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatInterConfidence":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatInterConfidence(obj.SelectedEarthmatInterConfidence, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "InterpretationNote":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_InterpretationNote(obj.InterpretationNote, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MagSusceptibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MagSusceptibility(obj.MagSusceptibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatColourF":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatColourF(obj.SelectedEarthmatColourF, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatColourW":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatColourW(obj.SelectedEarthmatColourW, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ColourIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ColourIndex(obj.ColourIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatCU":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatCU(obj.SelectedEarthmatCU, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatCL":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatCL(obj.SelectedEarthmatCL, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ContactNote":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ContactNote(obj.ContactNote, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatMineral":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatMineral(obj.SelectedEarthmatMineral, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatMU":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatMU(obj.SelectedEarthmatMU, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatOccurAs":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatOccurAs(obj.SelectedEarthmatOccurAs, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatDefFabric":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatDefFabric(obj.SelectedEarthmatDefFabric, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatBedthick":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatBedthick(obj.SelectedEarthmatBedthick, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatGrSize":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatGrSize(obj.SelectedEarthmatGrSize, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatModComp":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatModComp(obj.SelectedEarthmatModComp, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatModTexture":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatModTexture(obj.SelectedEarthmatModTexture, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedEarthmatModStruc":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedEarthmatModStruc(obj.SelectedEarthmatModStruc, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "GroupTypeDetail":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_GroupTypeDetail(obj.GroupTypeDetail, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GSCFieldApp.ViewModels.EarthmatViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::GSCFieldApp.ViewModels.EarthmatViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void RegisterTwoWayListener_27(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_27_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_28(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_28_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_29(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_29_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_30(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_30_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_31(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_31_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_32(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_32_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_33(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_33_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_34(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_34_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_35(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_35_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_36(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_36_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_37(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_37_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_40(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_40_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_41(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_41_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_48(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_48_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_50(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_50_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_52(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_52_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_54(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_54_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_56(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_56_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_58(global::Windows.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_58_SelectedValue();
                        }
                    });
                }
                public void RegisterTwoWayListener_62(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_62_Text();
                        }
                    };
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 4: // Views\EarthmatDialog.xaml line 35
                {
                    global::Windows.UI.Xaml.Controls.SymbolIcon element4 = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                    ((global::Windows.UI.Xaml.Controls.SymbolIcon)element4).Tapped += this.ConcatValueCheck_Tapped;
                }
                break;
            case 5: // Views\EarthmatDialog.xaml line 44
                {
                    this.pageHeader = (global::Template10.Controls.PageHeader)(target);
                }
                break;
            case 6: // Views\EarthmatDialog.xaml line 55
                {
                    this.pageFooter = (global::Template10.Controls.PageHeader)(target);
                }
                break;
            case 7: // Views\EarthmatDialog.xaml line 61
                {
                    this.earthRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 8: // Views\EarthmatDialog.xaml line 63
                {
                    this.earthScrollRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 9: // Views\EarthmatDialog.xaml line 65
                {
                    this.EarthmatGridView_Litho = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 10: // Views\EarthmatDialog.xaml line 89
                {
                    this.MainSeparator_01 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 11: // Views\EarthmatDialog.xaml line 92
                {
                    this.EarthmatGridView_Details = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 12: // Views\EarthmatDialog.xaml line 163
                {
                    this.MainSeparator_01b = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 13: // Views\EarthmatDialog.xaml line 166
                {
                    this.EarthmatGridView_Carto = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 14: // Views\EarthmatDialog.xaml line 178
                {
                    this.MainSeparator_02 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 15: // Views\EarthmatDialog.xaml line 181
                {
                    this.EarthmatGridView_Mineral = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 16: // Views\EarthmatDialog.xaml line 196
                {
                    this.MainSeparator_03 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 17: // Views\EarthmatDialog.xaml line 199
                {
                    this.EarthmatGridView_Contact = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 18: // Views\EarthmatDialog.xaml line 219
                {
                    this.MainSeparator_04 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 19: // Views\EarthmatDialog.xaml line 222
                {
                    this.EarthmatGridView_Colour = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 20: // Views\EarthmatDialog.xaml line 236
                {
                    this.MainSeparator_05 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 21: // Views\EarthmatDialog.xaml line 239
                {
                    this.EarthmatGridView_Mag = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 22: // Views\EarthmatDialog.xaml line 247
                {
                    this.MainSeparator_06 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 23: // Views\EarthmatDialog.xaml line 250
                {
                    this.EarthmatGridView_Interp = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 24: // Views\EarthmatDialog.xaml line 254
                {
                    this.EarthmatInterRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 25: // Views\EarthmatDialog.xaml line 264
                {
                    this.MainSeparator_07 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 26: // Views\EarthmatDialog.xaml line 267
                {
                    this.EarthmatGridView_GeneralNote = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 27: // Views\EarthmatDialog.xaml line 272
                {
                    this.EarthNoteTextbox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 28: // Views\EarthmatDialog.xaml line 255
                {
                    this.EarthInterpConfComboBox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 29: // Views\EarthmatDialog.xaml line 259
                {
                    this.EarthInterpComboBox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 30: // Views\EarthmatDialog.xaml line 242
                {
                    this.EarthMagCombobox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 31: // Views\EarthmatDialog.xaml line 225
                {
                    this.EarthColourFCombobox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 32: // Views\EarthmatDialog.xaml line 228
                {
                    this.EarthColourWComboBox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 33: // Views\EarthmatDialog.xaml line 232
                {
                    this.EarthColourIndexComboBox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 34: // Views\EarthmatDialog.xaml line 203
                {
                    this.EarthContactUpCombobox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 35: // Views\EarthmatDialog.xaml line 207
                {
                    this.EarthContactLowComboBox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 36: // Views\EarthmatDialog.xaml line 211
                {
                    this.EarthContactNoteComboBox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 37: // Views\EarthmatDialog.xaml line 185
                {
                    this.EarthMineralCombobox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 38: // Views\EarthmatDialog.xaml line 189
                {
                    this.EarthMineralConcat = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 39: // Views\EarthmatDialog.xaml line 168
                {
                    this.detailRelPanel_MU_Occur = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 40: // Views\EarthmatDialog.xaml line 169
                {
                    this.EarthMUCombobox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 41: // Views\EarthmatDialog.xaml line 172
                {
                    this.EarthOccurComboBox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 42: // Views\EarthmatDialog.xaml line 95
                {
                    this.detailRelPanel_Struc = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 43: // Views\EarthmatDialog.xaml line 104
                {
                    this.detailRelPanel_Text = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 44: // Views\EarthmatDialog.xaml line 115
                {
                    this.detailRelPanel_Comp = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 45: // Views\EarthmatDialog.xaml line 126
                {
                    this.detailRelPanel_GrnSize = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 46: // Views\EarthmatDialog.xaml line 137
                {
                    this.detailRelPanel_Thick = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 47: // Views\EarthmatDialog.xaml line 148
                {
                    this.detailRelPanel_DefFabric = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 48: // Views\EarthmatDialog.xaml line 149
                {
                    this.EarthDefFabricCombobox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 49: // Views\EarthmatDialog.xaml line 153
                {
                    this.EarthDefFabricConcat = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 50: // Views\EarthmatDialog.xaml line 138
                {
                    this.EarthBedThickComboBox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 51: // Views\EarthmatDialog.xaml line 142
                {
                    this.EarthBedthickConcat = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 52: // Views\EarthmatDialog.xaml line 127
                {
                    this.EarthGrCrySizeComboBox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 53: // Views\EarthmatDialog.xaml line 131
                {
                    this.EarthGrCrySizeConcat = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 54: // Views\EarthmatDialog.xaml line 116
                {
                    this.EarthModCompComboBox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 55: // Views\EarthmatDialog.xaml line 120
                {
                    this.EarthModCompConcat = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 56: // Views\EarthmatDialog.xaml line 105
                {
                    this.EarthModTextureCombobox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 57: // Views\EarthmatDialog.xaml line 109
                {
                    this.EarthModTextureConcat = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 58: // Views\EarthmatDialog.xaml line 96
                {
                    this.EarthModStrucComboBox = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 59: // Views\EarthmatDialog.xaml line 100
                {
                    this.EarthModStrucConcat = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 60: // Views\EarthmatDialog.xaml line 70
                {
                    this.EarthLithoSearch = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.EarthLithoSearch).Click += this.EarthLithoSearch_Click;
                }
                break;
            case 61: // Views\EarthmatDialog.xaml line 74
                {
                    this.EarthLithAutoSuggest = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.EarthLithAutoSuggest).TextChanged += this.EarthLithAutoSuggest_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.EarthLithAutoSuggest).QuerySubmitted += this.EarthLithAutoSuggest_QuerySubmitted;
                }
                break;
            case 62: // Views\EarthmatDialog.xaml line 81
                {
                    this.EarthLitho = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 63: // Views\EarthmatDialog.xaml line 71
                {
                    this.SearchLitho = (global::Windows.UI.Xaml.Controls.SymbolIcon)(target);
                }
                break;
            case 64: // Views\EarthmatDialog.xaml line 50
                {
                    this.earthmatBackButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.earthmatBackButton).Tapped += this.earthmatBackButton_Tapped;
                }
                break;
            case 65: // Views\EarthmatDialog.xaml line 51
                {
                    this.earthmatSaveButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.earthmatSaveButton).Tapped += this.earthmatSaveButton_Tapped;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\EarthmatDialog.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    EarthmatDialog_obj1_Bindings bindings = new EarthmatDialog_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 2: // Views\EarthmatDialog.xaml line 31
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element2 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    EarthmatDialog_obj2_Bindings bindings = new EarthmatDialog_obj2_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element2.DataContext);
                    element2.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element2, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element2, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

