#pragma checksum "C:\Users\Gab\Documents\DEV\gsc-field-application\GSCFieldApp\Views\LocationDialog.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "B08278E4A544BC3920D81FBD7A61048F"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GSCFieldApp.Views
{
    partial class LocationDialog : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_IsReadOnly(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.Boolean value)
            {
                obj.IsReadOnly = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class LocationDialog_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ILocationDialog_Bindings
        {
            private global::GSCFieldApp.Views.LocationDialog dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBox obj16;
            private global::Windows.UI.Xaml.Controls.TextBox obj17;
            private global::Windows.UI.Xaml.Controls.TextBox obj18;
            private global::Windows.UI.Xaml.Controls.TextBox obj19;
            private global::Windows.UI.Xaml.Controls.TextBox obj20;
            private global::Windows.UI.Xaml.Controls.TextBox obj22;
            private global::Windows.UI.Xaml.Controls.TextBox obj23;
            private global::Windows.UI.Xaml.Controls.ComboBox obj25;

            private LocationDialog_obj1_BindingsTracking bindingsTracking;

            public LocationDialog_obj1_Bindings()
            {
                this.bindingsTracking = new LocationDialog_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 16: // Views\LocationDialog.xaml line 124
                        this.obj16 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj16).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.Notes = this.obj16.Text;
                            }
                        };
                        break;
                    case 17: // Views\LocationDialog.xaml line 110
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj17).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.LocationElevation = this.obj17.Text;
                            }
                        };
                        break;
                    case 18: // Views\LocationDialog.xaml line 86
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj18).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Control.IsEnabledProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.ReadOnlyFields = (global::System.Boolean)this.LookupConverter("ReverseBoolConverter").ConvertBack(this.obj18.IsEnabled, typeof(global::System.Boolean), null, null);
                            }
                        });
                        (this.obj18).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.LocationNorthing = this.obj18.Text;
                            }
                        };
                        (this.obj18).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.IsReadOnlyProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.ReadOnlyFields = this.obj18.IsReadOnly;
                            }
                        });
                        break;
                    case 19: // Views\LocationDialog.xaml line 90
                        this.obj19 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj19).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Control.IsEnabledProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.ReadOnlyFields = (global::System.Boolean)this.LookupConverter("ReverseBoolConverter").ConvertBack(this.obj19.IsEnabled, typeof(global::System.Boolean), null, null);
                            }
                        });
                        (this.obj19).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.LocationEasting = this.obj19.Text;
                            }
                        };
                        (this.obj19).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.IsReadOnlyProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.ReadOnlyFields = this.obj19.IsReadOnly;
                            }
                        });
                        break;
                    case 20: // Views\LocationDialog.xaml line 94
                        this.obj20 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj20).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.IsReadOnlyProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.ReadOnlyFields = this.obj20.IsReadOnly;
                            }
                        });
                        break;
                    case 22: // Views\LocationDialog.xaml line 67
                        this.obj22 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj22).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Control.IsEnabledProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.ReadOnlyFields = (global::System.Boolean)this.LookupConverter("ReverseBoolConverter").ConvertBack(this.obj22.IsEnabled, typeof(global::System.Boolean), null, null);
                            }
                        });
                        (this.obj22).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.LocationLatitude = this.obj22.Text;
                            }
                        };
                        (this.obj22).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.IsReadOnlyProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.ReadOnlyFields = this.obj22.IsReadOnly;
                            }
                        });
                        break;
                    case 23: // Views\LocationDialog.xaml line 71
                        this.obj23 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj23).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Control.IsEnabledProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.ReadOnlyFields = (global::System.Boolean)this.LookupConverter("ReverseBoolConverter").ConvertBack(this.obj23.IsEnabled, typeof(global::System.Boolean), null, null);
                            }
                        });
                        (this.obj23).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.LocationLongitude = this.obj23.Text;
                            }
                        };
                        (this.obj23).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBox.IsReadOnlyProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.ReadOnlyFields = this.obj23.IsReadOnly;
                            }
                        });
                        break;
                    case 25: // Views\LocationDialog.xaml line 53
                        this.obj25 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        (this.obj25).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Control.IsEnabledProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.ReadOnlyFields = (global::System.Boolean)this.LookupConverter("ReverseBoolConverter").ConvertBack(this.obj25.IsEnabled, typeof(global::System.Boolean), null, null);
                            }
                        });
                        (this.obj25).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.locationVM.SelectedLocationDatums = (global::System.String)this.obj25.SelectedValue;
                            }
                        });
                        break;
                    default:
                        break;
                }
            }

            // ILocationDialog_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GSCFieldApp.Views.LocationDialog)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GSCFieldApp.Views.LocationDialog obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_locationVM(obj.locationVM, phase);
                    }
                }
            }
            private void Update_locationVM(global::GSCFieldApp.ViewModels.LocationViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_locationVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_locationVM_Notes(obj.Notes, phase);
                        this.Update_locationVM_LocationElevation(obj.LocationElevation, phase);
                        this.Update_locationVM_ReadOnlyFields(obj.ReadOnlyFields, phase);
                        this.Update_locationVM_LocationNorthing(obj.LocationNorthing, phase);
                        this.Update_locationVM_LocationEasting(obj.LocationEasting, phase);
                        this.Update_locationVM_LocationLatitude(obj.LocationLatitude, phase);
                        this.Update_locationVM_LocationLongitude(obj.LocationLongitude, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_locationVM_LocationDatums(obj.LocationDatums, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_locationVM_SelectedLocationDatums(obj.SelectedLocationDatums, phase);
                    }
                }
            }
            private void Update_locationVM_Notes(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LocationDialog.xaml line 124
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj16, obj, null);
                }
            }
            private void Update_locationVM_LocationElevation(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LocationDialog.xaml line 110
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj17, obj, null);
                }
            }
            private void Update_locationVM_ReadOnlyFields(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LocationDialog.xaml line 86
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj18, (global::System.Boolean)this.LookupConverter("ReverseBoolConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    // Views\LocationDialog.xaml line 86
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_IsReadOnly(this.obj18, obj);
                    // Views\LocationDialog.xaml line 90
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj19, (global::System.Boolean)this.LookupConverter("ReverseBoolConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    // Views\LocationDialog.xaml line 90
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_IsReadOnly(this.obj19, obj);
                    // Views\LocationDialog.xaml line 94
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_IsReadOnly(this.obj20, obj);
                    // Views\LocationDialog.xaml line 67
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj22, (global::System.Boolean)this.LookupConverter("ReverseBoolConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    // Views\LocationDialog.xaml line 67
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_IsReadOnly(this.obj22, obj);
                    // Views\LocationDialog.xaml line 71
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj23, (global::System.Boolean)this.LookupConverter("ReverseBoolConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    // Views\LocationDialog.xaml line 71
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_IsReadOnly(this.obj23, obj);
                    // Views\LocationDialog.xaml line 53
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj25, (global::System.Boolean)this.LookupConverter("ReverseBoolConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                }
            }
            private void Update_locationVM_LocationNorthing(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LocationDialog.xaml line 86
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj18, obj, null);
                }
            }
            private void Update_locationVM_LocationEasting(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LocationDialog.xaml line 90
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj19, obj, null);
                }
            }
            private void Update_locationVM_LocationLatitude(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LocationDialog.xaml line 67
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj22, obj, null);
                }
            }
            private void Update_locationVM_LocationLongitude(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LocationDialog.xaml line 71
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj23, obj, null);
                }
            }
            private void Update_locationVM_LocationDatums(global::System.Collections.ObjectModel.ObservableCollection<global::GSCFieldApp.Themes.ComboBoxItem> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\LocationDialog.xaml line 53
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj25, obj, null);
                }
            }
            private void Update_locationVM_SelectedLocationDatums(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LocationDialog.xaml line 53
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj25, obj, null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class LocationDialog_obj1_BindingsTracking
            {
                private global::System.WeakReference<LocationDialog_obj1_Bindings> weakRefToBindingObj; 

                public LocationDialog_obj1_BindingsTracking(LocationDialog_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<LocationDialog_obj1_Bindings>(obj);
                }

                public LocationDialog_obj1_Bindings TryGetBindingObject()
                {
                    LocationDialog_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_locationVM(null);
                }

                public void PropertyChanged_locationVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LocationDialog_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GSCFieldApp.ViewModels.LocationViewModel obj = sender as global::GSCFieldApp.ViewModels.LocationViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_locationVM_Notes(obj.Notes, DATA_CHANGED);
                                bindings.Update_locationVM_LocationElevation(obj.LocationElevation, DATA_CHANGED);
                                bindings.Update_locationVM_ReadOnlyFields(obj.ReadOnlyFields, DATA_CHANGED);
                                bindings.Update_locationVM_LocationNorthing(obj.LocationNorthing, DATA_CHANGED);
                                bindings.Update_locationVM_LocationEasting(obj.LocationEasting, DATA_CHANGED);
                                bindings.Update_locationVM_LocationLatitude(obj.LocationLatitude, DATA_CHANGED);
                                bindings.Update_locationVM_LocationLongitude(obj.LocationLongitude, DATA_CHANGED);
                                bindings.Update_locationVM_SelectedLocationDatums(obj.SelectedLocationDatums, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Notes":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_locationVM_Notes(obj.Notes, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LocationElevation":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_locationVM_LocationElevation(obj.LocationElevation, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ReadOnlyFields":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_locationVM_ReadOnlyFields(obj.ReadOnlyFields, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LocationNorthing":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_locationVM_LocationNorthing(obj.LocationNorthing, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LocationEasting":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_locationVM_LocationEasting(obj.LocationEasting, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LocationLatitude":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_locationVM_LocationLatitude(obj.LocationLatitude, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LocationLongitude":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_locationVM_LocationLongitude(obj.LocationLongitude, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedLocationDatums":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_locationVM_SelectedLocationDatums(obj.SelectedLocationDatums, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GSCFieldApp.ViewModels.LocationViewModel cache_locationVM = null;
                public void UpdateChildListeners_locationVM(global::GSCFieldApp.ViewModels.LocationViewModel obj)
                {
                    if (obj != cache_locationVM)
                    {
                        if (cache_locationVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_locationVM).PropertyChanged -= PropertyChanged_locationVM;
                            cache_locationVM = null;
                        }
                        if (obj != null)
                        {
                            cache_locationVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_locationVM;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\LocationDialog.xaml line 19
                {
                    this.ReverseBoolConverter = (global::GSCFieldApp.Converters.ReverseBoolConverter)(target);
                }
                break;
            case 3: // Views\LocationDialog.xaml line 28
                {
                    this.pageHeader = (global::Template10.Controls.PageHeader)(target);
                }
                break;
            case 4: // Views\LocationDialog.xaml line 39
                {
                    this.pageFooter = (global::Template10.Controls.PageHeader)(target);
                }
                break;
            case 5: // Views\LocationDialog.xaml line 45
                {
                    this.locationRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 6: // Views\LocationDialog.xaml line 47
                {
                    this.locationScrollRelativePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 7: // Views\LocationDialog.xaml line 49
                {
                    this.LocationGridView_00 = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 8: // Views\LocationDialog.xaml line 61
                {
                    this.MainSeparator_00 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 9: // Views\LocationDialog.xaml line 64
                {
                    this.LocationGridView_01 = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 10: // Views\LocationDialog.xaml line 80
                {
                    this.MainSeparator_01 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 11: // Views\LocationDialog.xaml line 83
                {
                    this.LocationGridView_02 = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 12: // Views\LocationDialog.xaml line 103
                {
                    this.MainSeparator_02 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 13: // Views\LocationDialog.xaml line 106
                {
                    this.LocationGridView_03 = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 14: // Views\LocationDialog.xaml line 116
                {
                    this.MainSeparator_03 = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 15: // Views\LocationDialog.xaml line 119
                {
                    this.LocationGridView_04 = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 16: // Views\LocationDialog.xaml line 124
                {
                    this.LocationDialogNoteTextbox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 17: // Views\LocationDialog.xaml line 110
                {
                    this.LocationElevation = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 18: // Views\LocationDialog.xaml line 86
                {
                    this.LocationNorthing = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 19: // Views\LocationDialog.xaml line 90
                {
                    this.LocationEasting = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 20: // Views\LocationDialog.xaml line 94
                {
                    this.LocationZone = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 21: // Views\LocationDialog.xaml line 98
                {
                    this.ButtonConvertToGeographic = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.ButtonConvertToGeographic).Tapped += this.ButtonConvertToGeographic_Tapped;
                }
                break;
            case 22: // Views\LocationDialog.xaml line 67
                {
                    this.LocationLat = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 23: // Views\LocationDialog.xaml line 71
                {
                    this.LocationLong = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 24: // Views\LocationDialog.xaml line 75
                {
                    this.ButtonConvertToUTM = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.ButtonConvertToUTM).Tapped += this.ButtonConvertToUTM_Tapped;
                }
                break;
            case 25: // Views\LocationDialog.xaml line 53
                {
                    this.LocationDatum = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 26: // Views\LocationDialog.xaml line 34
                {
                    this.LocationBackButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.LocationBackButton).Tapped += this.LocationBackButton_Tapped;
                }
                break;
            case 27: // Views\LocationDialog.xaml line 35
                {
                    this.LocationSaveButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.LocationSaveButton).Tapped += this.LocationSaveButton_Tapped;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\LocationDialog.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    LocationDialog_obj1_Bindings bindings = new LocationDialog_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

